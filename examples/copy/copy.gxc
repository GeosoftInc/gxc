//===========================================================================
// clang-format off
NAME          = "Copy one channel to another"
#include <version.gxh>
DESCRIPTION   = "

Copies one channel to another.  If the new channel does not exist, it
will be created with the same definition as the original channel.  The
channel data can be decimated during the copy.

Parameters: 

    COPY.FROM     - Original channel
        .TO       - Destination channel
        .DECIMATE - Decimation factor, default 1
        .FIDSTART - New fiducial start, default is current start.
        .FIDINCR  - New fiducial increment, default is current increment.
"

TRANSLATIONDOMAIN = "core"
TRANSLATIONFRIENDLYPATH = "GX/Database Tools/Channel Tools"

// Revision History:
// v7.1.0: Better progress message that includes channel names.
// v5.1.3: Using FindChan_DB and iExistChan_DB
//===========================================================================
//                                 RESOURCES
//===========================================================================

RESOURCE = "copy.gr"
#include "copy.grh"

//===========================================================================
//                                  INCLUDE
//===========================================================================

#include <all.gxh>
// clang-format on     // system

//===========================================================================
//                                 VARIABLES
//===========================================================================

string(STR_DB_SYMBOL) sInCh;            // Channel Names
string(STR_DB_SYMBOL) sOutCh;           // Channel Names

EDB         EData;            // Database handle
DB          Data;             // Database handle
DB_SYMB     InCh;             // Channel Handle
DB_SYMB     OutCh;            // Channel Handle
DB_SYMB     Line;             // Line Handle
DGW         Diag;             // Dialogue handle
LST         List;             // List handle

int         i;                // Utility 
int         iN;               // Decimation factor
int         iLines;           // Number of Lines Processed
int         iTotLines;        // Total Number of Lines to Process
real        rFidStart;        // Fid start
real        rFidIncr;         // Fid increment
real        rNewStart;        // New fid start
real        rNewIncr;         // New fid increment

int         iProgressState;   // Current progress bar state

string(STR_DEFAULT) sProg1;
string(STR_DB_SYMBOL) sLine;

//===========================================================================
//                                   CODE
//===========================================================================

{

   // --- Get database ---
   
   EData = Current_EDB();
   Data = Lock_EDB(EData);

   // --- Are we running interactively ? ---

   if (iInteractive_SYS())
   {

     // --- Create the Dialogue ---

     Diag = Create_DGW("COPYForm");

     // --- Set up lists ---

     List = GetList_DGW(Diag,_COPYFORM_0);
     SymbLST_DB(Data,List,DB_SYMB_CHAN);
     Sort_LST(List,0,0);
     List = GetList_DGW(Diag,_COPYFORM_1);
     SymbLST_DB(Data,List,DB_SYMB_CHAN);
     Sort_LST(List,0,0);

     // --- Set any Defaults ---

     SetInfoSYS_DGW(Diag,_COPYFORM_0,DGW_TEXT,"COPY","FROM");     
     SetInfoSYS_DGW(Diag,_COPYFORM_1,DGW_TEXT,"COPY","TO");     
     SetInfoSYS_DGW(Diag,_COPYFORM_2,DGW_TEXT,"COPY","DECIMATE");    
     SetInfoSYS_DGW(Diag,_COPYFORM_3,DGW_TEXT,"COPY","FIDSTART");    
     SetInfoSYS_DGW(Diag,_COPYFORM_4,DGW_TEXT,"COPY","FIDINCR");    

     // --- Run the Dialogue ---

     i = iRunDialogue_DGW(Diag);
     if (i != 0) Cancel_SYS();    // The user hit cancel


     // --- Get the Strings ---

     GetInfoSYS_DGW(Diag,_COPYFORM_0,DGW_TEXT,"COPY","FROM");    
     GetInfoSYS_DGW(Diag,_COPYFORM_1,DGW_TEXT,"COPY","TO");    
     GetInfoSYS_DGW(Diag,_COPYFORM_2,DGW_TEXT,"COPY","DECIMATE");    
     GetInfoSYS_DGW(Diag,_COPYFORM_3,DGW_TEXT,"COPY","FIDSTART");    
     GetInfoSYS_DGW(Diag,_COPYFORM_4,DGW_TEXT,"COPY","FIDINCR");    

     // --- Destroy the Dialogue ---

     Destroy_DGW(Diag);

   }

   // --- Get Parameters ---

   GetString_SYS("COPY","FROM",sInCh);
   GetString_SYS("COPY","TO",sOutCh);
   iN = iGetInt_SYS("COPY","DECIMATE");
   rNewStart = rGetReal_SYS("COPY","FIDSTART");
   rNewIncr  = rGetReal_SYS("COPY","FIDINCR");

   // --- Verify parameters ---

   if (iN==iDUMMY) iN = 1;
   if (iN<= 0)
      Abort_SYS(_("Decimation factor must be > 0."));
   if ((rNewIncr!=rDUMMY)&&(rNewIncr<=0.0))
      Abort_SYS(_("Fid increment must be > 0."));

   // --- Does the Input Channel Exist ? ---

   if (!iExistChan_DB(Data,sInCh))
      Abort_SYS(_("channel does not exist."));
   InCh = FindChan_DB(Data,sInCh);

   // --- Does the Output Channel Exist ? ---

   if (!iExistChan_DB(Data,sOutCh)) {
      OutCh = DupSymb_DB(Data,InCh,sOutCh);       // Create it 
      UnLockSymb_DB(Data,OutCh);
   } else   
      OutCh = FindChan_DB(Data,sOutCh);


   // --- Lock the channel symbols ---

   if (InCh != OutCh) LockSymb_DB(Data,InCh,DB_LOCK_READONLY,DB_WAIT_INFINITY);
   LockSymb_DB(Data,OutCh,DB_LOCK_READWRITE,DB_WAIT_INFINITY);


   // --- Prepare to do the work ---

   iLines = 0;
   iTotLines = iCountSelLines_DB(Data);
   Progress_SYS(1);


	// --- Progress message ---
	
	
	
   // --- Go through all selected Lines ---

   iProgressState = iProgState_SYS();
   
   if (!iProgressState)
      ProgName_SYS("",1);

   Line = FirstSelLine_DB(Data);
   while (iIsLineValid_DB(Data,Line))
   {
      // --- Update the Progress Bar ---

      LockSymb_DB(Data,Line,DB_LOCK_READONLY,DB_WAIT_INFINITY);
      GetSymbName_DB(Data,Line,sLine);
      UnLockSymb_DB(Data,Line);

      Printf_STR(sProg1, sizeof(sProg1), _("Copying %s to %s: Line %s"), sInCh, sOutCh, sLine);

      if (!iProgressState)
      {
        ProgName_SYS(sProg1,0);
        ProgUpdateL_SYS(iLines,iTotLines);
      }



      // --- Copy/Decimate ---

      Decimate_DU(Data,Line,InCh,OutCh,iN);


      // --- Correct the Fiducial Start ---

      if ((rNewIncr!=rDUMMY)||(rNewStart!=rDUMMY)) {

         if (rNewStart==rDUMMY)
            rFidStart = rGetFidStart_DB(Data,Line,InCh);
         else
            rFidStart = rNewStart;
         if (rNewIncr==rDUMMY)
            rFidIncr  = rGetFidIncr_DB(Data,Line,InCh);
         else
            rFidIncr  = rNewIncr;

         SetFid_DB(Data,Line,OutCh,rFidStart,rFidIncr);

         }


      // --- Advance to Next Line ---        

      Line = NextSelLine_DB(Data, Line );
      iLines++;

   }

   // --- Add maker ---

   EasyMakerSymb_DB(Data,OutCh, _("Copy channel"),"COPY;");

   // --- Unlock the Channel Symbol ---

   if (InCh != OutCh) UnLockSymb_DB(Data,InCh);
   UnLockSymb_DB(Data,OutCh);

   // --- done ---

   Progress_SYS(0);
   UnLock_EDB(EData);         // --- Release the database ---

   // --- display the new channel ---

		LoadChan_EDB( EData, sOutCh );
}
