//===========================================================================
// clang-format off
NAME          = "Math from a file"
#include <version.gxh>
DESCRIPTION   = "\
\r\n\
Apply an mathematical expression defined in an expression file.\r\n\
\r\n\
      MATHFILE.EXP  -  Expression file, .EXP assumed.\r\n\
\r\n\
\r\n"

TRANSLATIONDOMAIN = "core"
TRANSLATIONFRIENDLYPATH = "GX/GX Menu/Scripting"

//===========================================================================
//                                 RESOURCES
//===========================================================================

RESOURCE = "mathfile.gr"
#include "mathfile.grh"

//===========================================================================
//                                 INCLUDES
//===========================================================================

#include <all.gxh>
   // clang-format on

   //===========================================================================
   //                                 VARIABLES
   //===========================================================================

   string(STR_FILE) sFile;  // File string;

EDB EData;
DB Data;  // database handle

EXP Exp;
DB_SYMB Line;  // Line Handle
DGW Diag;      // Dialogue handle

int i;
int iLines;     // Number of Lines Processed
int iTotLines;  // Total Number of Lines to Process
string(STR_DEFAULT) sTemp;

int iProgressState;


//===========================================================================
//                                 CODE
//===========================================================================

{
   // --- Get database ---

   EData = Current_EDB();
   Data = Lock_EDB(EData);

   // --- Are we running interactively ? ---

   if (iInteractive_SYS())
   {
      // --- Create the Dialogue ---

      Diag = Create_DGW("MATHForm");

      // --- Set any Defaults ---

      SetInfoSYS_DGW(Diag, _MATHFORM_0, DGW_FILEPATH, "MATHFILE", "EXP");

      // --- Run the Dialogue ---

      i = iRunDialogue_DGW(Diag);
      if (i != 0) Cancel_SYS();  // He hit cancel


      // --- Get the Strings ---

      GetInfoSYS_DGW(Diag, _MATHFORM_0, DGW_FILEPATH, "MATHFILE", "EXP");

      // --- Destroy the Dialogue ---

      Destroy_DGW(Diag);
   }


   // --- Get Parameters ---

   GetString_SYS("MATHFILE", "EXP", sFile);


   // --- Turn On Progress ---
   iProgressState = iProgState_SYS();
   
   if (!iProgressState)
      Progress_SYS(1);

   Strcpy_STR(sTemp, _("Reading expression: "));
   Strcat_STR(sTemp, sFile);
   
   if (!iProgressState)
      ProgName_SYS(sTemp, 1);


   // --- Create the Expression ---

   Exp = CreateFile_EXP(Data, sFile);


   // --- Prepare to do the work ---

   iLines = 0;
   iTotLines = iCountSelLines_DB(Data);

   if (!iProgressState)
     ProgName_SYS(_("Applying Math"), 1);


   // --- Go through all selected Lines ---

   Line = FirstSelLine_DB(Data);
   while (iIsLineValid_DB(Data, Line))
   {
      // --- Update the Progress Bar ---

      ProgUpdateL_SYS(iLines, iTotLines);


      // --- Apply the Correction ---

      Math_DU(Data, Line, Exp);


      // --- Advance to Next Line ---

      Line = NextSelLine_DB(Data, Line);
      iLines++;
   }


   // --- Done ---

   Destroy_EXP(Exp);
   
   if (!iProgressState)
      Progress_SYS(0);

   // --- Release the Database ---

   UnLock_EDB(EData);
}
