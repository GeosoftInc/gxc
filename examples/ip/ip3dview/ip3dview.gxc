//===========================================================================
// clang-format off
NAME          = "Create a 3d view of an IP Stacked Section map"
#include <version.gxh>

TRANSLATIONDOMAIN = "ip"
TRANSLATIONFRIENDLYPATH = "GX/IP"

DESCRIPTION   = "
   Takes the individual section views in an IP stacked section map
   and plots them to a 3d view window.

    IP3DVIEW.VIEW          view name
"
// Revision History:
// v6.4.0: Added "IP3D" default to the view LST
// v6.3.0: Removed 3D controls.
// v6.2.0: Better error message if trying to run on a map-based section.
// v6.1.0: Progress bar was not initialized properly. 
// v5.1.4: New GX
//===========================================================================
//                                 RESOURCES
//===========================================================================

RESOURCE="ip3dview.gr"
#include "ip3dview.grh"

//===========================================================================
//                                 INCLUDES
//===========================================================================

#include <all.gxh>
// clang-format on
#include <obsolete.gxh>

   //===========================================================================
   // dialogs
   //===========================================================================

//===========================================================================
//                                 VARIABLES
//===========================================================================

DGW Diag;
EMAP EMap, EMap3D;
MAP Map, Map3D;
IPJ Ipj, Ipj2;
LST Lst;
MVIEW View2D, View3D;

int i, iN, iS, iSkip, iInteractive, iPlane;
real rAX, rAY, rAZ, rOX, rOY, rOZ, rSX, rSY, rSZ;
string(STR_GROUP) sPlane, sView, sMap2D, sMap3D;
string(STR_DEFAULT_LONG) sMsg, sBuff1, sBuff2, sBuff3;

//===========================================================================
//                                 CODE
//===========================================================================

{
   // --- get current map ---

   EMap = Current_EMAP();

   if (iPackedFiles_EMAP(EMap) > 1)
      Abort_SYS(_("This map is packed. This GX must be run on an unpacked map."));

   GetName_EMAP(EMap, sMap2D);
   Map = Lock_EMAP(EMap);



   // --- Get lists of the views ---

   Lst = Create_LST(MVIEW_NAME_LENGTH);
   ViewListEx_MAP(Map, Lst, MAP_LIST_MODE_NOT3D);

   // --- Create IPJs ---

   Ipj = Create_IPJ();
   Ipj2 = Create_IPJ();


   // --- See if there are any section views to plot ---

   iN = iSize_LST(Lst);
   iS = 0;
   for (i = 0; i < iN; i++)
   {
      // --- Get the view and its projection ---

      GetItem_LST(Lst, 0, i, sView);
      View2D = Create_MVIEW(Map, sView, MVIEW_READ);
      GetIPJ_MVIEW(View2D, Ipj);
      Destroy_MVIEW(View2D);


      // --- Check that it's a section view ---

      if (iGetOrientation_IPJ(Ipj) != IPJ_ORIENT_SECTION) continue;
      iS++;
   }

   if (iS == 0)
   {
      Strcpy_STR(sMsg, _("No section views were found in the current map.\r\n"));
      Strcat_STR(sMsg, _("3-D sections can be produced from \"Equal-spaced\"\r\nstacked sections but not from \"Map-based\" stacked\r\nsections."));
      Abort_SYS(sMsg);
   }


   // --- Are we running interactively ? ---

   iInteractive = iInteractive_SYS();
   if (iInteractive)
   {
      Diag = Create_DGW("IP3DVIEW");
      SetInfoSYS_DGW(Diag, _IP3DVIEW_0, DGW_FILEPATH, "IP3DVIEW", "VIEW");

      do
      {

         // --- Run the Dialogue ---

         i = iRunDialogue_DGW(Diag);
         if (i == -1) Cancel_SYS();

         GetInfoSYS_DGW(Diag, _IP3DVIEW_0, DGW_FILEPATH, "IP3DVIEW", "VIEW");

         GetString_SYS("IP3DVIEW", "VIEW", sMap3D);

      } while(iFileExist_SYS(sMap3D) && !iDisplayQuestion_SYS(_("Create New 3D View"), _("The 3D View exists. Do you wish to overwrite it?")));


      Destroy_DGW(Diag);
   }


   // --- Validation ---

   GetString_SYS("IP3DVIEW", "VIEW", sMap3D);
   if (!iStrlen_STR(sMap3D))
      Abort_SYS(_n("A 3D view name is required"));

   if (iFileExist_SYS(sMap3D))
   {
      iRemoveDocument_PROJ(sMap3D);
      iDeleteFile_SYS(sMap3D);
   }

   
   // --- Create new 3D Map ---

   GetString_SYS("NEW3DVIEW", "NEW", sBuff1);
   GetString_SYS("NEW3DVIEW", "MAP", sBuff2);
   GetString_SYS("NEW3DVIEW", "NAME", sBuff3);

   SetString_SYS("NEW3DVIEW", "NEW", "1");
   SetString_SYS("NEW3DVIEW", "MAP", sMap3D);
   SetString_SYS("NEW3DVIEW", "NAME", "3D");

   SetInteractive_SYS(0);
   iRunGX_SYS("geogxnet.dll(Geosoft.GX.Map.New3DView;CreateNew3DView)");         

   SetInteractive_SYS(iInteractive);

   SetString_SYS("NEW3DVIEW", "NEW", sBuff1);
   SetString_SYS("NEW3DVIEW", "MAP", sBuff2);
   SetString_SYS("NEW3DVIEW", "NAME", sBuff3);

   EMap3D = Load_EMAP(sMap3D);
   Map3D = Lock_EMAP(EMap3D);
   View3D = Create_MVIEW(Map3D, _n("3D"), MVIEW_WRITEOLD);
      
   // Turn on progress

   Progress_SYS(1);
   ProgName_SYS(_("Creating 3D view of sections"), 1);

   iN = iSize_LST(Lst);
   iS = 0;
   iSkip = 0;
   for (i = 0; i < iN; i++)
   {
      if (iCheckStop_SYS()) Cancel_SYS();
      ProgUpdateL_SYS(i, iN);


      // --- Get the view and its projection ---

      GetItem_LST(Lst, 0, i, sView);

      View2D = Create_MVIEW(Map, sView, MVIEW_READ);
      GetIPJ_MVIEW(View2D, Ipj);


      // --- Check that it's a section view ---

      if (iGetOrientation_IPJ(Ipj) != IPJ_ORIENT_SECTION) continue;

      // --- See if the IPJ has changed... don't plot
      //     overlapping sections ---

      if (iOrientationsAreTheSame_IPJ(Ipj, Ipj2))
      {
         iSkip++;
         continue;
      }

      // --- Name plane after the view ---

      Strcpy_STR(sPlane, sView);
      iPlane = iCreatePlane_MVIEW(View3D, sPlane);

      // --- Set the plane equation ---

      GetViewPlaneEquation_MVIEW(View2D, rAX, rAY, rAZ, rOX, rOY, rOZ, rSX, rSY, rSZ);
      SetPlaneEquation_MVIEW(View3D, iPlane, rAX, rAY, rAZ, rOX, rOY, rOZ, rSX, rSY, rSZ);

      MarkAllGroups_MVIEW(View2D, 1);
      CopyRawMarkedGroups_MVIEW(View2D, View3D);

      Destroy_MVIEW(View2D);

      // --- Save projection for comparison ---

      Copy_IPJ(Ipj, Ipj2);
      iS++;
   }

   Destroy_MVIEW(View3D);
   Commit_MAP(Map3D);

   ProgUpdate_SYS(100);
   Progress_SYS(0);

   if (iSkip && iInteractive)
   {
      Strcpy_STR(sMsg, _("One or more sections was skipped because\r\nit shared the same plane as one already plotted.\r\n"));
      Strcat_STR(sMsg, _("This will happen with multiple pseudo-section plots of single lines."));
      DisplayMessage_SYS(_("Create a 3D View"), sMsg);
   }


   // -- Clean up ---

   Destroy_MVIEW(View2D);
   UnLock_EMAP(EMap);
   UnLock_EMAP(EMap3D);
   MakeCurrent_EMAP(EMap3D);
}
