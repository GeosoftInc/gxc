//===========================================================================
// clang-format off
NAME          = "Sort the contents of a channel"
#include <version.gxh>
DESCRIPTION   = "

  SORTCHAN.CHANNEL    channel name
          .ORDER      \"ASCENDING\"
                      \"DESCENDING\"

NOTE: Sorting a channel causes the data to loose it's fiducial relationship
      with other channels.  Use the SORTALL GX to sort all channels and thus
      maintain fiducial relations.
"

TRANSLATIONDOMAIN = "core"
TRANSLATIONFRIENDLYPATH = "GX/Database Tools/Channel Tools"

// Revision History:
// v5.1.5: Use FindChan_DB instead of FindSymb_DB.
//===========================================================================
//                                 RESOURCES
//===========================================================================

RESOURCE = "sortchan.gr"
#include "sortchan.grh"

//===========================================================================
//                                 INCLUDES
//===========================================================================

#include <all.gxh>
   // clang-format on


   //===========================================================================
   //                             GLOBAL VARIABLES
   //===========================================================================

   string(STR_DB_SYMBOL) sCh;

string(STR_DEFAULT_SHORT) sTemp;  // temporary number formating string
string(STR_DEFAULT) sLabel;

EDB EData;
DB Data;
DB_SYMB Ch;
DB_SYMB Line;
DGW Diag;
LST List;              // list handle
int iOrder;            // sort order
int iLine, iTotLines;  // counters

//===========================================================================
//                              CODE
//===========================================================================

{
   // --- Get the Database ---

   EData = Current_EDB();
   Data = Lock_EDB(EData);


   // --- Are we running interactively ? ---

   if (iInteractive_SYS())
   {
      // --- Create the Dialogue ---

      Diag = Create_DGW("SORTCHAN");


      // --- Set up input and output lists ---

      List = GetList_DGW(Diag, _SORTCHAN_0);
      SymbLST_DB(Data, List, DB_SYMB_CHAN);
      Sort_LST(List, 0, 0);


      // --- Set any Defaults ---

      SetInfoSYS_DGW(Diag, _SORTCHAN_0, DGW_TEXT, "SORTCHAN", "CHANNEL");
      SetInfoSYS_DGW(Diag, _SORTCHAN_1, DGW_LISTALIAS, "SORTCHAN", "ORDER");


      // --- Run the Dialogue ---

      if (iRunDialogue_DGW(Diag)) Cancel_SYS();


      // --- Get the Strings ---

      GetInfoSYS_DGW(Diag, _SORTCHAN_0, DGW_TEXT, "SORTCHAN", "CHANNEL");
      GetInfoSYS_DGW(Diag, _SORTCHAN_1, DGW_LISTALIAS, "SORTCHAN", "ORDER");


      // --- Destroy the Dialogue ---

      Destroy_DGW(Diag);
   }


   // --- Get Parameters ---

   GetString_SYS("SORTCHAN", "CHANNEL", sCh);
   GetString_SYS("SORTCHAN", "ORDER", sTemp);
   ToUpper_STR(sTemp);
   if (iCharComp_STR(sTemp, "D"))
      iOrder = DU_SORT_DESCENDING;
   else
      iOrder = DU_SORT_ASCENDING;


   // --- Does the Channel Exist ? ---

   if (!iExistSymb_DB(Data, sCh, DB_SYMB_CHAN))
      Abort_SYS(_("Channel does not exist."));
   Ch = FindChan_DB(Data, sCh);


   // --- Lock the channel symbols ---

   LockSymb_DB(Data, Ch, DB_LOCK_READWRITE, DB_WAIT_INFINITY);


   // --- Prepare to do the work ---

   iLine = 0;
   iTotLines = iCountSelLines_DB(Data);
   Progress_SYS(1);


   // --- Go through all selected Lines ---

   ProgName_SYS("", 1);
   Line = FirstSelLine_DB(Data);
   while (iIsLineValid_DB(Data, Line))
   {
      // --- Update the Progress Bar ---

      LockSymb_DB(Data, Line, DB_LOCK_READONLY, DB_WAIT_INFINITY);
      GetSymbName_DB(Data, Line, sTemp);
      UnLockSymb_DB(Data, Line);
      Strcpy_STR(sLabel, _("Process line: "));
      Strcat_STR(sLabel, sTemp);
      ProgName_SYS(sLabel, 0);
      ProgUpdateL_SYS(iLine, iTotLines);


      // --- process ---

      Sort_DU(Data, Line, Ch, iOrder);


      // --- Advance to Next Line ---

      Line = NextSelLine_DB(Data, Line);
      iLine++;
   }

   // --- Add maker ---

   EasyMakerSymb_DB(Data, Ch, _("Sort channel"), "SORTCHAN;");

   // --- Clean up ---

   UnLockSymb_DB(Data, Ch);


   // --- Done ---

   Progress_SYS(0);

   // --- Release the Database ---

   UnLock_EDB(EData);
}
