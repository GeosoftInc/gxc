//===========================================================================
// clang-format off
NAME          = "Total Distance"
#include <version.gxh>

TRANSLATIONDOMAIN = "core"
TRANSLATIONFRIENDLYPATH = "GX/Database Tools"

DESCRIPTION   = "\

Total distance (the cumulative distance down the lines between points)
is calculated from provided X and Y channels.

PARAMETERS:

         TOTLDIST.X      -  X channel
                 .Y      -  Y channel
                 .REPORT - Report file name (required in non-interactive mode only)
                 
"
// Revision History:
// v6.3.0: Added units to output report
// v5.1.3: Using FindChan_DB and iExistChan_DB
//===========================================================================
//                               RESOURCES
//===========================================================================

RESOURCE = "totldist.gr"
#include "totldist.grh"

//===========================================================================
//                               INCLUDES
//===========================================================================

#include <all.gxh>
// clang-format on
//===========================================================================
//                               VARIABLES
//===========================================================================

string(STR_DB_SYMBOL) sXCh, sYCh, sTmpl;  // Channel names
string(STR_DEFAULT) sLabel;
string(STR_DEFAULT) sTemp, sUnit;
string(STR_FILE) sReport;

EDB EData;
DB Data;           // Database
DGW Diag;          // Dialogue handle
DGW Diag2;         // Dialogue handle
DB_SYMB XCh, YCh;  // Channel Handles
DB_SYMB Line;      // Line Handle
LST List;          // List handle
WA Report;         // Report
IPJ hIPJ;          // For units

int i;          // utility
int iLines;     // Number of Lines Processed
int iTmp;
int iTotLines;  // Total Number of Lines to Process
real rDist, rTotlDist;

//===========================================================================
//                                CODE
//===========================================================================

{
   rTotlDist = 0.0;

   // --- Get the Database ---

   EData = Current_EDB();
   Data = Lock_EDB(EData);

   // --- Are we running interactively ? ---

   if (iInteractive_SYS())
   {
      // --- Create the Dialogue ---

      Diag = Create_DGW("TOTLDIST");

      // --- Set up lists ---

      List = GetList_DGW(Diag, _TOTLDIST_0);
      SymbLST_DB(Data, List, DB_SYMB_CHAN);
	  
      iTmp = -1;
      GetString_SYS("TOTLDIST", "X", sTmpl);
      if (iStrlen_STR(sTmpl) > 0)
         iTmp = iFindItem_LST(List, LST_ITEM_NAME, sTmpl);
      
      if (iTmp == -1)
      {
         XCh = GetXYZChanSymb_DB(Data, DB_CHAN_X);
         if (XCh != NULLSYMB)
         {
            LockSymb_DB(Data, XCh, DB_LOCK_READONLY, DB_WAIT_INFINITY);
            GetChanName_DB(Data, XCh, sTmpl);
            UnLockSymb_DB(Data, XCh);
            
            SetString_SYS("TOTLDIST", "X", sTmpl);
         }
      } 
      
      Sort_LST(List, 0, 0);

      List = GetList_DGW(Diag, _TOTLDIST_1);
      SymbLST_DB(Data, List, DB_SYMB_CHAN);
      
      iTmp = -1;
      GetString_SYS("TOTLDIST", "Y", sTmpl);
      if (iStrlen_STR(sTmpl) > 0)
         iTmp = iFindItem_LST(List, LST_ITEM_NAME, sTmpl);

      if (iTmp == -1)
      {
         YCh = GetXYZChanSymb_DB(Data, DB_CHAN_Y);
         if (YCh != NULLSYMB)
         {
            LockSymb_DB(Data, YCh, DB_LOCK_READONLY, DB_WAIT_INFINITY);
            GetChanName_DB(Data, YCh, sTmpl);
            UnLockSymb_DB(Data, YCh);
            
            SetString_SYS("TOTLDIST", "Y", sTmpl);
         }
      } 
	  
      Sort_LST(List, 0, 0);

      // --- Set any Defaults ---

      SetInfoSYS_DGW(Diag, _TOTLDIST_0, DGW_TEXT, "TOTLDIST", "X");
      SetInfoSYS_DGW(Diag, _TOTLDIST_1, DGW_TEXT, "TOTLDIST", "Y");

      // --- Run the Dialogue ---

      i = iRunDialogue_DGW(Diag);
      if (i != 0) Cancel_SYS();  // she hit cancel

      // --- Get the Strings ---

      GetInfoSYS_DGW(Diag, _TOTLDIST_0, DGW_TEXT, "TOTLDIST", "X");
      GetInfoSYS_DGW(Diag, _TOTLDIST_1, DGW_TEXT, "TOTLDIST", "Y");

      // --- Destroy the Dialogue ---

      Destroy_DGW(Diag);
   }

   // --- Get Parameters ---

   GetString_SYS("TOTLDIST", "X", sXCh);
   GetString_SYS("TOTLDIST", "Y", sYCh);

   // --- Do the reference channels exist ? ---

   if (!iExistChan_DB(Data, sXCh))
      Abort_SYS(_("X channel does not exist."));
   XCh = FindChan_DB(Data, sXCh);
   if (!iExistChan_DB(Data, sYCh))
      Abort_SYS(_("Y channel does not exist."));
   YCh = FindChan_DB(Data, sYCh);

   // --- Lock the channel symbols ---

   LockSymb_DB(Data, XCh, DB_LOCK_READONLY, DB_WAIT_INFINITY);
   LockSymb_DB(Data, YCh, DB_LOCK_READONLY, DB_WAIT_INFINITY);

   // --- Prepare to do the work ---

   iLines = 0;
   iTotLines = iCountSelLines_DB(Data);

   // --- Go through all selected Lines ---

   rDist = 0.0;
   rTotlDist = 0.0;
   Progress_SYS(1);
   Line = FirstSelLine_DB(Data);
   while (iIsLineValid_DB(Data, Line))
   {
      // --- Update the Progress Bar ---

      LockSymb_DB(Data, Line, DB_LOCK_READONLY, DB_WAIT_INFINITY);
      GetSymbName_DB(Data, Line, sTemp);
      UnLockSymb_DB(Data, Line);
      Strcpy_STR(sLabel, _("Processing line: "));
      Strcat_STR(sLabel, sTemp);
      ProgName_SYS(sLabel, 0);
      ProgUpdateL_SYS(iLines, iTotLines);

      // --- Create distance channel ---

      Distline_DU(Data, Line, XCh, YCh, rDist);

      rTotlDist += rDist;

      // --- Advance to Next Line ---

      Line = NextSelLine_DB(Data, Line);
      iLines++;
   }

   // --- Get the source channel unit (use X channel) ---

   hIPJ = Create_IPJ();
   GetIPJ_DB(Data, XCh, hIPJ);
   GetName_IPJ(hIPJ, IPJ_NAME_UNIT_FULL, sUnit);
   Destroy_IPJ(hIPJ);

   // --- Unlock the channel symbol ---

   UnLockSymb_DB(Data, XCh);
   UnLockSymb_DB(Data, YCh);

   // --- done ---

   Progress_SYS(0);

   // --- Release the Database ---

   UnLock_EDB(EData);

   // --- Distance report ---

   if (iInteractive_SYS())
   {
      // --- Create the REPORT Dialogue ---

      Diag2 = Create_DGW("TOTLDISTForm2");

      // --- Format values as strings and Set the stat info. ---

      FormatR_STR(rTotlDist, sTemp, 12, 9);
      SetInfo_DGW(Diag2, _TOTLDISTFORM2_0, DGW_TEXT, sTemp);
      SetInfo_DGW(Diag2, _TOTLDISTFORM2_1, DGW_TEXT, sUnit);

      iRunDialogue_DGW(Diag2);

      Destroy_DGW(Diag2);
   }
   else
   {
      GetString_SYS("TOTLDIST", "REPORT", sReport);
      if (!iStrlen_STR(sReport))
         Abort_SYS(_("Report required in non-interactive mode"));

      Report = Create_WA(sReport, WA_NEW);

      FormatR_STR(rTotlDist, sTemp, 12, 9);
      Puts_WA(Report, _("Total distance: "));
      Puts_WA(Report, sTemp);
      NewLine_WA(Report);
      Puts_WA(Report, _("Distance Units: "));
      Puts_WA(Report, sUnit);

      Destroy_WA(Report);
   }
}
