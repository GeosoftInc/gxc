//*** extends 'class_empty.gxh'

#ifndef HSTK_GXH_DEFINED
#define HSTK_GXH_DEFINED

//*** block Header
// NOTICE: Do not edit anything here, it is generated code
//===========================================================================================================
//
// Class STK
//
//-----------------------------------------------------------------------------------------------------------
//
// The STK class is used for plotting a single data profile in
// an MVIEW. The MSTK class (see MSTK) is used to plot
// multiple STK objects to a single map.
// 
// Use AddSTK_MSTK fuction to create a STK object before
// using functions in this file
// 
// SEE MSTK FILE FOR DETAILED DESCRIPTIONS OF ALL FUNCTION PARAMETERS.
//
//-----------------------------------------------------------------------------------------------------------



//*** endblock Header

//*** block Editable
// NOTICE: The code generator will not replace the code in this block
//*** endblock Editable

//*** block Generated
// NOTICE: Do not edit anything here, it is generated code


//===========================================================================================================
//
// STK_AXIS Definitions
//
// STK Axis defines
//
// STK_AXIS_X
// X Axis
//
// STK_AXIS_Y
// Y Axis
//
//===========================================================================================================


#define STK_AXIS_X 0
#define STK_AXIS_Y 1


//===========================================================================================================
//
// STK_AXIS_POS Definitions
//
// STK Axis defines. Use with STK_AXIS_X and STK_AXIS_Y
//
// STK_AXIS_NONE
// Axis
//
// STK_AXIS_LEFT
// Left side only
//
// STK_AXIS_RIGHT
// Right side only
//
// STK_AXIS_BOTH
// Left and right sides
//
// STK_AXIS_BOTTOM
// Bottom only
//
// STK_AXIS_TOP
// Top only
//
//===========================================================================================================


#define STK_AXIS_NONE 0
#define STK_AXIS_LEFT 1
#define STK_AXIS_RIGHT 2
#define STK_AXIS_BOTH 3
#define STK_AXIS_BOTTOM 1
#define STK_AXIS_TOP 2


//===========================================================================================================
//
// STK_FLAG Definitions
//
// Stack flags
//
// STK_FLAG_PROFILE
// 
//
// STK_FLAG_FID
// 
//
// STK_FLAG_SYMBOL
// 
//
// STK_FLAG_XBAR
// 
//
// STK_FLAG_XLABEL
// 
//
// STK_FLAG_XTITLE
// 
//
// STK_FLAG_YBAR
// 
//
// STK_FLAG_YLABEL
// 
//
// STK_FLAG_YTITLE
// 
//
// STK_FLAG_GRID1
// 
//
// STK_FLAG_GRID2
// 
//
//===========================================================================================================


#define STK_FLAG_PROFILE 0
#define STK_FLAG_FID 1
#define STK_FLAG_SYMBOL 2
#define STK_FLAG_XBAR 3
#define STK_FLAG_XLABEL 4
#define STK_FLAG_XTITLE 5
#define STK_FLAG_YBAR 6
#define STK_FLAG_YLABEL 7
#define STK_FLAG_YTITLE 8
#define STK_FLAG_GRID1 9
#define STK_FLAG_GRID2 10


//===========================================================================================================
//
// STK_GRID Definitions
//
// Stack Grid define
//
// STK_GRID_PRIMARY
// Primary Grid
//
// STK_GRID_SECONDARY
// Secondary Grid
//
//===========================================================================================================


#define STK_GRID_PRIMARY 0
#define STK_GRID_SECONDARY 1





//===========================================================================================================
//
// Miscellaneous Functions
//
//===========================================================================================================


  
//-----------------------------------------------------------------------------------------------------------
// GetTransParms_STK Get transformation parameters in STK object
//
// Notes             See above full description of each parameters
//                   VV's for X channel transformation can be NULL if the
//                   transformation is log or loglinear. The same for Y channel.
//                   
//                   See MSTK for detailed description of all function parameters
//
// Available         5.0
//-----------------------------------------------------------------------------------------------------------

[_licensed] void GetTransParms_STK(STK,        // STK handle
                                   var int,    // Type of transformation for horizontal axis
                                   var real,   // Minimum value to apply logarithmic
                                   VV,         // Comma separated parameters defining linear compress data range
                                   VV,         // Comma separated parameters defining scaling factors for
                                   var int,    // Type of scaling for vertical axis
                                   var real,   // Minimum value to apply logarithmic
                                   VV,         // Comma separated parameters defining linear compress data range
                                   VV);        // Comma separated parameters defining scaling factors for


  
//-----------------------------------------------------------------------------------------------------------
// iGetAxisFormat_STK Get axis number display format.
//
// Returns            The current format - DB_CHAN_FORMAT
//
// Notes              By default, DB_CHAN_FORMAT_NORMAL
//
// Available          5.1.5
//-----------------------------------------------------------------------------------------------------------

[_licensed] int iGetAxisFormat_STK(STK,   // STK handle
                                   int);  // STK_AXIS


  
//-----------------------------------------------------------------------------------------------------------
// IGetAxisParms_STK Get parameters in STK object relating drawing X/Y axis
//
// Notes             See MSTK for detailed description of all function parameters
//                   ? mark in the note represent either X and Y
//
// Available         5.0
//-----------------------------------------------------------------------------------------------------------

[_licensed] void IGetAxisParms_STK(STK,          // STK handle
                                   var int,      // ?BARDRAW: Bottom and/or Top, or Left and/or Right
                                   var real,     // Bottom Y/Left X location
                                   var real,     // Top Y/Right X location
                                   var real,     // ?BARLINETHICK  - Line thickness in mm. Default is 0.05
                                   var string,   // ?BARCOLOR      - Line color string in RGB model. Default is black
                                   int,          // Color string length
                                   var real,     // ?BARTICKINTEERVAL
                                   var real,     // Major tick size in mm for bottom/left axis bar.
                                   var real,     // Major tick size in mm for top/right axis bar.
                                   var int,      // ?BARMINORTICK  - Number of minor ticks. (0) none, (-1) automatic
                                   int);         // STK_AXIS
#define GetAxisParms_STK(stk, bar_draw, min_loc, max_loc, thick, color, tick_interval, tick_size1, tick_size2, min_tick, xy) IGetAxisParms_STK(stk, bar_draw, min_loc, max_loc, thick, color, sizeof(color), tick_interval, tick_size1, tick_size2, min_tick, xy)


  
//-----------------------------------------------------------------------------------------------------------
// IGetFidParms_STK Get parameters in STK object relating drawing fid ticks
//
// Notes            See MSTK for detailed description of all function parameters
//
// Available        5.0
//-----------------------------------------------------------------------------------------------------------

[_licensed] void IGetFidParms_STK(STK,          // STK handle
                                  var real,     // Y location in data unit to draw Fid ticks. Default is the bottom of the stack
                                  var real,     // Fid tick size in mm. Default is 2.0mm
                                  var real,     // Fid interval to draw ticks. Nice number is calculated by default
                                  var string,   // Font to use to label fids. Default is use 'default' font set in Montaj
                                  int,          // Font name string size
                                  var real,     // Text size in mm to label fids. Default is 5mm
                                  var string,   // Text color string in RGB model. Default is black
                                  int);         // Text color string size
#define GetFidParms_STK(stk, fid_y_loc, fid_tick_size, fid_interval, fid_text_font, fid_text_size, fid_text_color) IGetFidParms_STK(stk, fid_y_loc, fid_tick_size, fid_interval, fid_text_font, sizeof(fid_text_font), fid_text_size, fid_text_color, sizeof(fid_text_color))


  
//-----------------------------------------------------------------------------------------------------------
// iGetFlag_STK Get flag indicating part of STK object is to be drawn or not
//
// Returns      FALSE (0) if part of the object is not to be drawn
//              TRUE  (1) if part of the object is drawn
//
// Available    6.0.1
//-----------------------------------------------------------------------------------------------------------

[_licensed] int iGetFlag_STK(STK,   // STK,
                             int);  // STK_FLAG


  
//-----------------------------------------------------------------------------------------------------------
// IGetGenParms_STK Get general parameters in STK object
//
// Notes            See MSTK for detailed description of all function parameters
//
// Available        5.0
//-----------------------------------------------------------------------------------------------------------

[_licensed] void IGetGenParms_STK(STK,          // STK handle
                                  var string,   // X channel name, REQUIRED
                                  int,          // X channel name string length
                                  var string,   // Y channel name, REQUIRED
                                  int,          // Y channel name string length
                                  var string,   // Group name
                                  int,          // Group name string length
                                  var real,     // X scale (map scale, units/metre), REQUIRED
                                  var real,     // Y scale (plot scale, units/mm), REQUIRED
                                  var real,     // Minimum X value (data unit) to draw
                                  var real,     // Maximum X value (data unit) to draw
                                  var real,     // Minimum Y value (data unit) to draw
                                  var real,     // Minimum horizontal location in mm of the stack on the map
                                  var real,     // Minimum vertical location in mm on the map
                                  var real);    // Profile height in mm on the map, must be > 0.0
#define GetGenParms_STK(stk, x_ch, y_ch, grp_name, x_scale, y_scale, x_start, x_end, y_start, left, bottom, height) IGetGenParms_STK(stk, x_ch, sizeof(x_ch), y_ch, sizeof(y_ch), grp_name, sizeof(grp_name), x_scale, y_scale, x_start, x_end, y_start, left, bottom, height)


  
//-----------------------------------------------------------------------------------------------------------
// IGetGridParms_STK Get background grid parameters in STK object
//
// Notes             See MSTK for detailed description of all function parameters
//                   ? mark in the note represent either X and Y
//
// Available         5.0
//-----------------------------------------------------------------------------------------------------------

[_licensed] void IGetGridParms_STK(STK,          // STK handle
                                   var int,      // Type of grid to draw:
                                   var real,     // Minimum X in ground unit to draw grid
                                   var real,     // Maximum X in ground unit to draw grid
                                   var real,     // Minimum Y in ground unit to draw grid
                                   var real,     // Maximum Y in ground unit to draw grid
                                   var real,     // Line thickness in mm. Default is 0.01mm
                                   var real,     // Cross size or separation between dots in mm.
                                   var real,     // Separation between vertical grid lines.
                                   var real,     // Separation between horizontal grid lines.
                                   var string,   // Grid line color string in RGB model. Default is black
                                   int,          // Color string length
                                   int);         // STK_GRID
#define GetGridParms_STK(stk, grid, min_x, max_x, min_y, max_y, thick, cross, x_sep, y_sep, color, grid12) IGetGridParms_STK(stk, grid, min_x, max_x, min_y, max_y, thick, cross, x_sep, y_sep, color, sizeof(color), grid12)


  
//-----------------------------------------------------------------------------------------------------------
// IGetLabelParms_STK Get parameters in STK object relating X/Y axis labels
//
// Notes              See MSTK for detailed description of all function parameters
//                    ? mark in the note represent either X and Y
//                    Sets the label format to GSF_NORMAL. To override this,
//                    use the SetAxisFormat_STK function AFTER calling this.
//
// Available          5.0
//-----------------------------------------------------------------------------------------------------------

[_licensed] void IGetLabelParms_STK(STK,          // STK handle
                                    var int,      // Which axes to draw: Bottom/Top or Left/Right axes
                                    var real,     // Bottom or Left axis label location
                                    var int,      // Bottom or Left labels orientation.
                                    var real,     // Top or Right axis label location
                                    var int,      // Top or Right axis label orientation
                                    var real,     // Label interval. Default is to use related axis tick interval
                                    var string,   // Font to use to label. Default is use 'default' font set in Montaj
                                    int,          // Font name string size
                                    var real,     // Text size in mm to draw profile labels. Default is 5mm
                                    var string,   // Text color string in RGB model. Default is black
                                    int,          // Color string size
                                    var int,      // ?LABELBOUND    - Edge bound.  0 - No
                                    int);         // STK_AXIS
#define GetLabelParms_STK(stk, axis, min_loc, min_orient, max_loc, max_orient, interval, font, text_size, color, bound, xy) IGetLabelParms_STK(stk, axis, min_loc, min_orient, max_loc, max_orient, interval, font, sizeof(font), text_size, color, sizeof(color), bound, xy)


  
//-----------------------------------------------------------------------------------------------------------
// IGetProfile_STK Get profile parameters in STK object
//
// Notes           See MSTK for detailed description of all function parameters
//
// Available       5.0
//-----------------------------------------------------------------------------------------------------------

[_licensed] void IGetProfile_STK(STK,          // STK handle
                                 var int,      // Profile line type.    1 - solid (default)
                                 var real,     // Patterned line pitch in mm. Default is 10 mm
                                 var real,     // Line thickness in mm. Default is 0.05mm
                                 var string,   // Color string in RGB model. Default is black
                                 int,          // Color string length
                                 var int,      // Wrap option
                                 var int,      // Clip option
                                 var int,      // Plot smoothed polyline.
                                 VV,           // Only use for VA channels. NULL is acceptable which means all profiles in the VA are plotted. VV type of INT (integer)
                                 var string,   // Characters string to label profiles
                                 int,          // Label string length
                                 var int,      // Reference location to draw label.
                                 var string,   // Font to use to draw profile labels. Default is use 'default' font set in Montaj
                                 int,          // Font name string length
                                 var real,     // Text size in mm to draw profile labels. Default is 5mm
                                 var string,   // Text color string in RGB model. Default is black
                                 int,          // Color string length
                                 var int);     // Include VA column numbers as part of the profile label 0 - no, 1 - yes
#define GetProfile_STK(stk, prof_type, pitch, thick, ln_clr, wrap, clip, smooth, vv_ind, label, ref, font, text_size, text_clr, prof_va_num) IGetProfile_STK(stk, prof_type, pitch, thick, ln_clr, sizeof(ln_clr), wrap, clip, smooth, vv_ind, label, sizeof(label), ref, font, sizeof(font), text_size, text_clr, sizeof(text_clr), prof_va_num)


  
//-----------------------------------------------------------------------------------------------------------
// IGetProfileEx_STK Get profile parameters in STK object (added Break on dummy option)
//
// Notes             See MSTK for detailed description of all function parameters
//
// Available         5.0.3
//-----------------------------------------------------------------------------------------------------------

[_licensed] void IGetProfileEx_STK(STK,          // STK handle
                                   var int,      // Profile line type.    1 - solid (default)
                                   var real,     // Patterned line pitch in mm. Default is 10 mm
                                   var real,     // Line thickness in mm. Default is 0.05mm
                                   var string,   // Color string in RGB model. Default is black
                                   int,          // Color string length
                                   var int,      // Break on dummy option
                                   var int,      // Wrap option
                                   var int,      // Clip option
                                   var int,      // Plot smoothed polyline.
                                   VV,           // Only use for VA channels. NULL is acceptable which means all profiles in the VA are plotted. VV type of INT (integer)
                                   var string,   // Characters string to label profiles
                                   int,          // Label string length
                                   var int,      // Reference location to draw label.
                                   var string,   // Font to use to draw profile labels. Default is use 'default' font set in Montaj
                                   int,          // Font name string length
                                   var real,     // Text size in mm to draw profile labels. Default is 5mm
                                   var string,   // Text color string in RGB model. Default is black
                                   int,          // Color string length
                                   var int);     // Include VA column numbers as part of the profile label 0 - no, 1 - yes
#define GetProfileEx_STK(stk, prof_type, pitch, thick, ln_clr, break_dum, wrap, clip, smooth, vv_ind, label, ref, font, text_size, text_clr, prof_va_num) IGetProfileEx_STK(stk, prof_type, pitch, thick, ln_clr, sizeof(ln_clr), break_dum, wrap, clip, smooth, vv_ind, label, sizeof(label), ref, font, sizeof(font), text_size, text_clr, sizeof(text_clr), prof_va_num)


  
//-----------------------------------------------------------------------------------------------------------
// IGetSymbParms_STK Get parameters in STK object relating drawing symbols
//
// Notes             See MSTK for detailed description of all function parameters
//
// Available         5.0
//-----------------------------------------------------------------------------------------------------------

[_licensed] void IGetSymbParms_STK(STK,          // STK handle
                                   var string,   // Font to use to draw symbols. Default is use 'symbols.gfn' font
                                   int,          // Symbol font name string size
                                   var real,     // Symbol size in mm. Default is 5mm
                                   var string,   // Edge color string in RGB model. Default is black
                                   int,          // Line color string size
                                   var string,   // Fill color string in RGB model. Default is black
                                   int,          // Fill color string size
                                   var int,      // Wrap option
                                   var int,      // Clip option
                                   var real,     // Y location to draw symbols. Default is to use the data from Y channel
                                   var int,      // Number of levels to draw symbols
                                   VV,           // Y values to define data ranges for each symbol types Type of REAL
                                   VV,           // Symbol numbers (given in the symbol font) to draw, default is 20 TYPE of INT
                                   var int,      // Draw symbols ID (1) or not (0)
                                   var string,   // Font to use to draw symbol ID (A,B,C...). Default is use 'default'
                                   int,          // Text font name string size
                                   var real,     // Text size in mm to draw profile labels. Default is 5mm
                                   var string,   // Text color string in RGB model. Default is black
                                   int);         // Text color string size
#define GetSymbParms_STK(stk, symb_font, symb_size, line_clr, fill_clr, wrap, clip, symb_y_loc, no_levels, vv_level, vv_type, label, text_font, text_size, text_clr) IGetSymbParms_STK(stk, symb_font, sizeof(symb_font), symb_size, line_clr, sizeof(line_clr), fill_clr, sizeof(fill_clr), wrap, clip, symb_y_loc, no_levels, vv_level, vv_type, label, text_font, sizeof(text_font), text_size, text_clr, sizeof(text_clr))


  
//-----------------------------------------------------------------------------------------------------------
// IGetTitleParms_STK Get parameters in STK object relating X/Y axis titles
//
// Notes              See MSTK for detailed description of all function parameters
//                    ? mark in the note represent either X and Y
//
// Available          5.0
//-----------------------------------------------------------------------------------------------------------

[_licensed] void IGetTitleParms_STK(STK,          // STK handle
                                    var string,   // Title for bottom X axis/left Y axis. Default is no title.
                                    int,          // Title string length
                                    var string,   // Title for top X axis/right Y axis. Default is no title.
                                    int,          // Title string length
                                    var int,      // Bottom/Left axis title orientation.
                                    var real,     // X location to draw bottom/left axis title
                                    var real,     // Y location to draw bottom/left axis title
                                    var int,      // Top/Right axis title orientation.
                                    var real,     // X location to draw top/right axis title
                                    var real,     // Y location to draw top/right axis title
                                    var string,   // Font to draw titles. Default is use 'default' font set in Montaj
                                    int,          // Font name string length
                                    var real,     // Text size in mm to draw titles. Default is 5mm
                                    var string,   // Text color string in RGB model. Default is black
                                    int,          // Color string length
                                    int);         // STK_AXIS
#define GetTitleParms_STK(stk, title1, title2, title1_orient, title1_x, title1_y, title2_orient, title2_x, title2_y, font, text_size, color, xy) IGetTitleParms_STK(stk, title1, sizeof(title1), title2, sizeof(title2), title1_orient, title1_x, title1_y, title2_orient, title2_x, title2_y, font, sizeof(font), text_size, color, sizeof(color), xy)


  
//-----------------------------------------------------------------------------------------------------------
// ISetFlag_STK Set flag indicating part of STK object is to be drawn or not
//
// Available    5.0
//-----------------------------------------------------------------------------------------------------------

[_licensed] void ISetFlag_STK(STK,   // STK,
                              int,   // Flag to set (0 or 1)
                              int);  // STK_FLAG


  
//-----------------------------------------------------------------------------------------------------------
// SetArrayColors_STK Set colors for individual channels in a VA, via an ITR
//
// Notes              The ITR is consulted by taking the channel index and dividing
//                    by the number of channels; hence the ITR maximum values should
//                    be in the range: 0 > values >= 1.0.
//
// Available          5.0.1
//-----------------------------------------------------------------------------------------------------------

[_licensed] void SetArrayColors_STK(STK,   // STK,
                                    ITR);  // ITR object for colors


  
//-----------------------------------------------------------------------------------------------------------
// SetAxisFormat_STK Set axis number display format.
//
// Notes             By default, DB_CHAN_FORMAT_NORMAL is used to display the values,
//                   or for values > 1.e7, DB_CHAN_FORMAT_EXP.
//
// Available         5.1.5
//-----------------------------------------------------------------------------------------------------------

[_licensed] void SetAxisFormat_STK(STK,   // STK handle
                                   int,   // DB_CHAN_FORMAT
                                   int);  // STK_AXIS


  
//-----------------------------------------------------------------------------------------------------------
// SetAxisParms_STK Set parameters in STK object relating drawing X/Y axis
//
// Notes            See MSTK for detailed description of all function parameters
//                  ? mark in the note represent either X and Y
//
// Available        5.0
//-----------------------------------------------------------------------------------------------------------

[_licensed] void SetAxisParms_STK(STK,      // STK handle
                                  int,      // ?BARDRAW, STK_AXIS_POS
                                  real,     // Bottom Y/Left X location
                                  real,     // Top Y/Right X location
                                  real,     // ?BARLINETHICK  - Line thickness in mm. Default is 0.05
                                  string,   // ?BARCOLOR      - Line color string in RGB model. Default is black
                                  real,     // ?BARTICKINTEERVAL
                                  real,     // Major tick size in mm for bottom/left axis bar.
                                  real,     // Major tick size in mm for top/right axis bar.
                                  int,      // ?BARMINORTICK  - Number of minor ticks. (0) none, (-1) automatic
                                  int);     // STK_AXIS


  
//-----------------------------------------------------------------------------------------------------------
// SetFidParms_STK Set parameters in STK object relating drawing fid ticks
//
// Notes           See MSTK for detailed description of all function parameters
//
// Available       5.0
//-----------------------------------------------------------------------------------------------------------

[_licensed] void SetFidParms_STK(STK,      // STK handle
                                 real,     // Y location in data unit to draw Fid ticks. Default is the bottom of the stack
                                 real,     // Fid tick size in mm. Default is 2.0mm
                                 real,     // Fid interval to draw ticks. Nice number is calculated by default
                                 string,   // Font to use to label fids. Default is use 'default' font set in Montaj
                                 real,     // Text size in mm to label fids. Default is 5mm
                                 string);  // Text color string in RGB model. Default is black


  
//-----------------------------------------------------------------------------------------------------------
// SetGenParms_STK Set general parameters in STK object
//
// Notes           See MSTK for detailed description of all function parameters
//
// Available       5.0
//-----------------------------------------------------------------------------------------------------------

[_licensed] void SetGenParms_STK(STK,      // STK handle
                                 string,   // X channel name, REQUIRED
                                 string,   // Y channel name, REQUIRED
                                 string,   // Group name
                                 real,     // X scale (map scale, units/metre), REQUIRED
                                 real,     // Y scale (plot scale, units/mm), REQUIRED
                                 real,     // Minimum X value (data unit) to draw
                                 real,     // Maximum X value (data unit) to draw
                                 real,     // Minimum Y value (data unit) to draw
                                 real,     // Minimum horizontal location in mm of the stack on the map
                                 real,     // Minimum vertical location in mm on the map
                                 real);    // Profile height in mm on the map, must be > 0.0


  
//-----------------------------------------------------------------------------------------------------------
// SetGridParms_STK Set background grid parameters in STK object
//
// Notes            See MSTK for detailed description of all function parameters
//                  ? mark in the note represent either X and Y
//
// Available        5.0
//-----------------------------------------------------------------------------------------------------------

[_licensed] void SetGridParms_STK(STK,      // STK handle
                                  int,      // Type of grid to draw:
                                  real,     // Minimum X in ground unit to draw grid
                                  real,     // Maximum X in ground unit to draw grid
                                  real,     // Minimum Y in ground unit to draw grid
                                  real,     // Maximum Y in ground unit to draw grid
                                  real,     // Line thickness in mm. Default is 0.01mm
                                  real,     // Cross size or separation between dots in mm.
                                  real,     // Separation between vertical grid lines.
                                  real,     // Separation between horizontal grid lines.
                                  string,   // Grid line color string in RGB model. Default is black
                                  int);     // STK_GRID


  
//-----------------------------------------------------------------------------------------------------------
// SetLabelParms_STK Set parameters in STK object relating X/Y axis labels
//
// Notes             See MSTK for detailed description of all function parameters
//                   ? mark in the note represent either X and Y
//                   Sets the label format to GSF_NORMAL. To override this,
//                   use the SetAxisFormat_STK function AFTER calling this.
//
// Available         5.0
//-----------------------------------------------------------------------------------------------------------

[_licensed] void SetLabelParms_STK(STK,      // STK handle
                                   int,      // STK_AXIS_POS
                                   real,     // Bottom or Left axis label location
                                   int,      // Bottom or Left labels orientation.
                                   real,     // Top or Right axis label location
                                   int,      // Top or Right axis label orientation
                                   real,     // Label interval. Default is to use related axis tick interval
                                   string,   // Font to use to label. Default is use 'default' font set in Montaj
                                   real,     // Text size in mm to draw profile labels. Default is 5mm
                                   string,   // Text color string in RGB model. Default is black
                                   int,      // ?LABELBOUND    - Edge bound.  0 - No
                                   int);     // STK_AXIS


  
//-----------------------------------------------------------------------------------------------------------
// SetLineParm_STK Set line parameter (of Y Chan) in STK object
//
// Notes           See MSTK for detailed description of all function parameters
//
// Available       5.0
//-----------------------------------------------------------------------------------------------------------

[_licensed] void SetLineParm_STK(STK,   // STK handle
                                 int);  // Line symb


  
//-----------------------------------------------------------------------------------------------------------
// SetProfile_STK Set profile parameters in STK object
//
// Notes          See MSTK for detailed description of all function parameters
//
// Available      5.0
//-----------------------------------------------------------------------------------------------------------

[_licensed] void SetProfile_STK(STK,      // STK handle
                                int,      // Profile line type.    1 - solid (default)
                                real,     // Patterned line pitch in mm. Default is 10 mm
                                real,     // Line thickness in mm. Default is 0.05mm
                                string,   // Color string in RGB model. Default is black
                                int,      // Wrap option
                                int,      // Clip option
                                int,      // Plot smoothed polyline.
                                VV,       // Integers starting from 0 indicating windows in VA channel to draw VV type of INT (integer)
                                string,   // Characters string to label profiles
                                int,      // Reference location to draw label.
                                string,   // Font to use to draw profile labels. Default is use 'default' font set in Montaj
                                real,     // Text size in mm to draw profile labels. Default is 5mm
                                string,   // Text color string in RGB model. Default is black
                                int);     // Include VA column numbers as part of the profile label 0 - no, 1 - yes


  
//-----------------------------------------------------------------------------------------------------------
// SetProfileEx_STK Set profile parameters in STK object (added Break on dummy option)
//
// Notes            See MSTK for detailed description of all function parameters
//
// Available        5.0.3
//-----------------------------------------------------------------------------------------------------------

[_licensed] void SetProfileEx_STK(STK,      // STK handle
                                  int,      // Profile line type.    1 - solid (default)
                                  real,     // Patterned line pitch in mm. Default is 10 mm
                                  real,     // Line thickness in mm. Default is 0.05mm
                                  string,   // Color string in RGB model. Default is black
                                  int,      // Break on dummy option
                                  int,      // Wrap option
                                  int,      // Clip option
                                  int,      // Plot smoothed polyline.
                                  VV,       // Integers starting from 0 indicating windows in VA channel to draw VV type of INT (integer)
                                  string,   // Characters string to label profiles
                                  int,      // Reference location to draw label.
                                  string,   // Font to use to draw profile labels. Default is use 'default' font set in Montaj
                                  real,     // Text size in mm to draw profile labels. Default is 5mm
                                  string,   // Text color string in RGB model. Default is black
                                  int);     // Include VA column numbers as part of the profile label 0 - no, 1 - yes


  
//-----------------------------------------------------------------------------------------------------------
// SetSymbParms_STK Set parameters in STK object relating drawing symbols
//
// Notes            See MSTK for detailed description of all function parameters
//
// Available        5.0
//-----------------------------------------------------------------------------------------------------------

[_licensed] void SetSymbParms_STK(STK,      // STK handle
                                  string,   // Font to use to draw symbols. Default is use 'symbols.gfn' font
                                  real,     // Symbol size in mm. Default is 5mm
                                  string,   // Edge color string in RGB model. Default is black
                                  string,   // Fill color string in RGB model. Default is black
                                  int,      // Wrap option
                                  int,      // Clip option
                                  real,     // Y location to draw symbols. Default is to use the data from Y channel
                                  int,      // Number of symbols levels
                                  VV,       // Y values to define data ranges for each symbol types Type of REAL
                                  VV,       // Symbol numbers (given in the symbol font) to draw Type of INT
                                  int,      // Draw symbols ID (1) or not (0)
                                  string,   // Font to use to draw symbol ID (A,B,C...). Default is use 'default'
                                  real,     // Text size in mm to draw profile labels. Default is 5mm
                                  string);  // Text color string in RGB model. Default is black


  
//-----------------------------------------------------------------------------------------------------------
// SetTitleParms_STK Set parameters in STK object relating X/Y axis titles
//
// Notes             See MSTK for detailed description of all function parameters
//                   ? mark in the note represent either X and Y
//
// Available         5.0
//-----------------------------------------------------------------------------------------------------------

[_licensed] void SetTitleParms_STK(STK,      // STK handle
                                   string,   // Title for bottom X axis/left Y axis. Default is no title.
                                   string,   // Title for top X axis/right Y axis. Default is no title.
                                   int,      // Bottom/Left axis title orientation.
                                   real,     // X location to draw bottom/left axis title
                                   real,     // Y location to draw bottom/left axis title
                                   int,      // Top/Right axis title orientation.
                                   real,     // X location to draw top/right axis title
                                   real,     // Y location to draw top/right axis title
                                   string,   // Font to draw titles. Default is use 'default' font set in Montaj
                                   real,     // Text size in mm to draw titles. Default is 5mm
                                   string,   // Text color string in RGB model. Default is black
                                   int);     // STK_AXIS


  
//-----------------------------------------------------------------------------------------------------------
// SetTransParms_STK Set transformation parameters in STK object
//
// Notes             See above full description of each parameters
//                   VV's for X channel transformation can be NULL if the
//                   transformation is log or loglinear. The same for Y channel.
//                   See MSTK for detailed description of all function parameters
//
// Available         5.0
//-----------------------------------------------------------------------------------------------------------

[_licensed] void SetTransParms_STK(STK,    // STK handle
                                   int,    // Type of transformation for horizontal axis
                                   real,   // Minimum value to apply logarithmic
                                   int,    // Future use
                                   int,    // Future use
                                   int,    // Type of scaling for vertical axis
                                   real,   // Minimum value to apply logarithmic
                                   int,    // Future use
                                   int);   // Future use


  
//-----------------------------------------------------------------------------------------------------------
// SetVAIndexStart_STK Start array profile index labels at 0 or 1.
//
// Notes               By default, the index labels for array channel profiles
//                     begin at 0. Use this function to start them at either 0
//                     or 1.
//
// Available           6.0.1
//-----------------------------------------------------------------------------------------------------------

[_licensed] void SetVAIndexStart_STK(STK,   // STK handle
                                     int);  // Starting index (0 or 1)


  
//-----------------------------------------------------------------------------------------------------------
// SetErrorPlotParams_STK Set error bar plot parameters for the current profile.
//
// Notes                  Set parameters for the error bar plot that is associated with the current
//                        profile.
//                        See MSTK for detailed description of all function parameters
//
// Available              2022.2
//-----------------------------------------------------------------------------------------------------------

[_licensed] void SetErrorPlotParams_STK(STK,      // STK handle
                                        int,      // Enable(1) or disable(0) error bar plot rendering.
                                        string,   // The name of the error channel.
                                        string);  // A comma-separated list of integers pertaining to the array channel elementsto apply the error bar plot to. For example, supplying '1,2,7,10' will rendererror bar plots for the first, second, seventh and tenth array channel elementsof the source and error channels.





//*** endblock Generated


#endif
