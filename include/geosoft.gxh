//*** extends 'class_empty.gxh'

#ifndef HGEOSOFT_GXH_DEFINED
#define HGEOSOFT_GXH_DEFINED

//*** block Header
// NOTICE: Do not edit anything here, it is generated code
//===========================================================================================================
//
// Class GEOSOFT
//
//-----------------------------------------------------------------------------------------------------------
//
// This is not a class but a collection of global defines. It
// is used by all functions.
//
//-----------------------------------------------------------------------------------------------------------
// Notes
//
// The following defines are not used by any methods but
// are useful in general:
// 
// GEO_VAR
// GEO_DUMMY
// GEO_LIMITS
// GEO_FULL_LIMITS
// GEO_STRING_SIZE
//
//-----------------------------------------------------------------------------------------------------------


// --- Handles ---

#define GX_HANDLE int
typedef HANDLE;

typedef ACQUIRE;
typedef AGG;
typedef ARCDB;
typedef ARCDH;
typedef ARCMAP;
typedef ARCPY;
typedef ARCSYS;
typedef BF;
typedef BIGRID;
typedef CHIMERA;
typedef COM;
typedef CSYMB;
typedef DAT;
typedef DATALINKD;
typedef DATAMINE;
typedef DB;
typedef DBREAD;
typedef DBWRITE;
typedef DCOL;
typedef DGW;
typedef DH;
typedef DMPPLY;
typedef DOCU;
typedef DSEL;
typedef DU;
typedef DXFI;
typedef E3DV;
typedef EDB;
typedef EDOC;
typedef EMAP;
typedef EMAPTEMPLATE;
typedef EUL3;
typedef EXP;
typedef EXT;
typedef FFT;
typedef FFT2;
typedef FLT;
typedef GD;
typedef GEOSTRING;
typedef GER;
typedef GIS;
typedef GMSYS;
typedef GRID3D;
typedef GU;
typedef GUI;
typedef H3DC;
typedef H3DN;
typedef H3DV;
typedef HGD;
typedef HTTP;
typedef HXYZ;
typedef IEXP;
typedef IGRF;
typedef IMG;
typedef IMU;
typedef INTERNET;
typedef IP;
typedef IPGUI;
typedef IPJ;
typedef ITR;
typedef KGRD;
typedef KML;
typedef LAYOUT;
typedef LL2;
typedef LMSG;
typedef LPT;
typedef LST;
typedef LTB;
typedef MAP;
typedef MAPL;
typedef MAPTEMPLATE;
typedef MATH;
typedef MESH;
typedef MESHUTIL;
typedef META;
typedef MISC;
typedef MPLY;
typedef MSTK;
typedef MULTIGRID3D;
typedef MULTIGRID3DUTIL;
typedef MVG;
typedef MVIEW;
typedef MVU;
typedef MXD;
typedef PAT;
typedef PDF3D;
typedef PG;
typedef PGEXP;
typedef PGU;
typedef PJ;
typedef PLY;
typedef PRAGA3;
typedef PROJ;
typedef RA;
typedef REG;
typedef RGRD;
typedef SBF;
typedef SEGYREADER;
typedef SEMPLOT;
typedef SHD;
typedef SHP;
typedef SQLSRV;
typedef ST;
typedef ST2;
typedef STK;
typedef STORAGEPROJECT;
typedef STR;
typedef STRINGS;
typedef SURFACE;
typedef SURFACEITEM;
typedef SYS;
typedef TB;
typedef TC;
typedef TEST;
typedef TIN;
typedef TPAT;
typedef TR;
typedef TRANSFORMLAYER;
typedef TRND;
typedef UNC;
typedef USERMETA;
typedef VA;
typedef VAU;
typedef VECTOR3D;
typedef VM;
typedef VOX;
typedef VOXD;
typedef VOXE;
typedef VULCAN;
typedef VV;
typedef VVEXP;
typedef VVU;
typedef WA;


//*** endblock Header

//*** block Editable
// NOTICE: The code generator will not replace the code in this block

//=========================================================================
// OTHER Defines
//=========================================================================

// ---- convert GS_? type to simple type (INT, REAL or string) ---

#define GS_SIMPLE_TYPE(A) switch (A) { case 0: case 1: case 2: case 3: A=INT; break; case 4: case 5: A=REAL;}


// --- define macros and typedef's if not a C program ---

#ifndef GX_C


// --- 
// HINTS will be TRUE if hints are on. 
// Caller must provide sHints string variable at least 2 characters long.
// ---
#define HINTS (iInteractive_SYS() && \
               (iGlobal_SYS("montaj.hints",sHints) == 0) && \
               iCharComp_STR(sHints,"Y"))
               

// --- TS Objects ---

typedef NGRD;           // Nearest Neighbour gridding
typedef GPX;            // Nearest Neighbour gridding
typedef BHPIO;          // DFA Intrepid database import/export for BHP
typedef KENGRAV;        // Kennecot gravity terrain correction


// --- Handles that are really integers ---

#define CRC          GX_HANDLE
#define WND          GX_HANDLE
#define PTMP         GX_HANDLE
#define FILTER       GX_HANDLE
#define DGW_OBJ      GX_HANDLE
#define TB_FIELD     GX_HANDLE
#define DB_SELECT    GX_HANDLE
#define META_TOKEN   GX_HANDLE
#define DB_SYMB      GX_HANDLE

#define FALSE    0
#define TRUE     1

#define INT     0
#define REAL    1


// GX_C
#endif


//*** endblock Editable

//*** block Generated
// NOTICE: Do not edit anything here, it is generated code


//===========================================================================================================
//
// CRC_INIT_VALUE Definitions
//
// Initial value for starting a CRC
//
// CRC_INIT_VALUE
// 0xFFFFFFFF
//
//===========================================================================================================


#define CRC_INIT_VALUE 4294967295


//===========================================================================================================
//
// DATE_FORMAT Definitions
//
// Old Date formats
//
// DATE_FORMAT_YYYYMMDD
// Standard Date (YYYY/MM/DD, YY/MM/DD, YYYYMMDD or YYMMDD, space or / delimited)
//
// DATE_FORMAT_DDMMYYYY
// Date (DD/MM/YYYY or DD/MM/YY century 20 if YY>50, DISC compliant)
//
// DATE_FORMAT_MMDDYYYY
// Date (MM/DD/YYYY or MM/DD/YY century 19)
//
//===========================================================================================================


#define DATE_FORMAT_YYYYMMDD 1
#define DATE_FORMAT_DDMMYYYY 2
#define DATE_FORMAT_MMDDYYYY 3


//===========================================================================================================
//
// GEO_DUMMY Definitions
//
// Special numbers indicating NULLL
//
// iDUMMY
// Integer Dummy (-2147483647)
//
// rDUMMY
// Floating Point Dummy (-1.0E32)
//
//===========================================================================================================


#define iDUMMY -2147483647
#define rDUMMY -1.0E32


//===========================================================================================================
//
// GEO_FULL_LIMITS Definitions
//
// Data ranges of all Geosoft types
//
// GS_S1MX
// (signed char   )   127
//
// GS_S1MN
// (signed char   )  -126
//
// GS_S1DM
// (signed char   )  -127
//
// GS_U1MX
// (unsigned char )   254U
//
// GS_U1MN
// (unsigned char )   0U
//
// GS_U1DM
// (unsigned char )   255U
//
// GS_S2MX
// (short         )   32767
//
// GS_S2MN
// (short         )  -32766
//
// GS_S2DM
// (short         )  -32767
//
// GS_U2MX
// (unsigned short)   65534U
//
// GS_U2MN
// (unsigned short)   0U
//
// GS_U2DM
// (unsigned short)   65535U
//
// GS_S4MX
// 2147483647L
//
// GS_S4MN
// -2147483646L
//
// GS_S4DM
// -2147483647L
//
// GS_U4MX
// (unsigned long )   0xFFFFFFFE
//
// GS_U4MN
// (unsigned long )   0x00000000
//
// GS_U4DM
// (unsigned long )   0xFFFFFFFF
//
// GS_S8MX
// (__GS_INT64    )   0x7FFFFFFFFFFFFFFF
//
// GS_S8MN
// (__GS_INT64    )   0x8000000000000001
//
// GS_S8DM
// (__GS_INT64    )   0x8000000000000000
//
// GS_U8MX
// (__GS_UINT64   )   0xFFFFFFFFFFFFFFFE
//
// GS_U8MN
// (__GS_UINT64   )   0x0000000000000000
//
// GS_U8DM
// (__GS_UINT64   )   0xFFFFFFFFFFFFFFFF
//
// GS_R4MX
// (float         )   1.0E32   (In C these must be declared as external constants:)
//
// GS_R4MN
// (float         )  -0.9E32     const float r4min=(float)-0.9E32,
//
// GS_R4DM
// (float         )  -1.0E32                 r4max=(float)1.0E32,
// r4dum=(float)-1.0E32;
//
// GS_R8MX
// (double        )   1.0E32
//
// GS_R8MN
// (double        )  -0.9E32
//
// GS_R8DM
// (double        )  -1.0E32
//
// GS_R4EPSILON
// (float         )   1.0E-32
//
// GS_R8EPSILON
// (double        )   1.0E-32
//
//===========================================================================================================


#define GS_S1MX 127
#define GS_S1MN -126
#define GS_S1DM -127
#define GS_U1MX 254U
#define GS_U1MN 0U
#define GS_U1DM 255U
#define GS_S2MX 32767
#define GS_S2MN -32766
#define GS_S2DM -32767
#define GS_U2MX 65534U
#define GS_U2MN 0U
#define GS_U2DM 65535U
#define GS_S4MX 2147483647L
#define GS_S4MN -2147483646L
#define GS_S4DM -2147483647L
#define GS_U4MX 0xFFFFFFFE
#define GS_U4MN 0x00000000
#define GS_U4DM 0xFFFFFFFF
#define GS_S8MX 0x7FFFFFFFFFFFFFFF
#define GS_S8MN 0x8000000000000001
#define GS_S8DM 0x8000000000000000
#define GS_U8MX 0xFFFFFFFFFFFFFFFE
#define GS_U8MN 0x0000000000000000
#define GS_U8DM 0xFFFFFFFFFFFFFFFF
#define GS_R4MX 1.0E32f
#define GS_R4MN -0.9E32f
#define GS_R4DM -1.0E32f
#define GS_R8MX 1.0E32
#define GS_R8MN -0.9E+32
#define GS_R8DM -1.0E+32
#define GS_R4EPSILON 1.0E-32f
#define GS_R8EPSILON 1.0E-32


//===========================================================================================================
//
// GEO_LIMITS Definitions
//
// Data ranges of numbers
//
// iMIN
// Smallest Integer (-2147483646)
//
// iMAX
// Largest Integer (2147483647)
//
// rMIN
// Smallest Floating Point (-0.9E32)
//
// rMAX
// Largest Floating Point (1.0E32)
//
//===========================================================================================================


#define iMIN -2147483646
#define iMAX 2147483647
#define rMIN -0.9E32
#define rMAX 1.0E32


//===========================================================================================================
//
// GEO_STRING_SIZE Definitions
//
// Default string sized for different uses
// GX's must use these unless there is a
// very good reason not to. The path strings
// here are generally larger than what is possible
// in the OS, but it is defined as such for Unicode
// conversion reasons.
//
// STR_DEFAULT
// Default Size for almost everything (128 characters)
//
// STR_DEFAULT_SHORT
// Default Size for a short string (64 characters)
//
// STR_DEFAULT_LONG
// Default Size for a long string (1024 characters)
//
// STR_ERROR
// Default Size for an error string (2048 characters)
//
// STR_VERY_LONG
// Default Size for a long string (16384 characters)
//
// STR_VIEW
// Name of a View (2080)
//
// STR_GROUP
// Name of a Group (1040)
//
// STR_VIEW_GROUP
// Combined View/Group Name (2080)
//
// STR_FILE
// Name of a file (1040)
//
// STR_MULTI_FILE
// Name of multiple files (16384)
//
// STR_DB_SYMBOL
// Name of database symbol (64)
//
// STR_GXF
// Size of strings for GXF projection info (160).
//
// STR_MAX_PATH
// Maximum path length (1040)
//
// STR_MULTI_PATH
// Multi-file path (16384)
//
// GS_MAX_PATH
// Same as STR_FILE
//
// GS_MULTI_PATH
// Same as STR_MULTI_FILE
//
//===========================================================================================================


#define STR_DEFAULT 128
#define STR_DEFAULT_SHORT 64
#define STR_DEFAULT_LONG 1024
#define STR_ERROR 2048
#define STR_VERY_LONG 16384
#define STR_VIEW 2080
#define STR_GROUP 1040
#define STR_VIEW_GROUP 2080
#define STR_FILE 1040
#define STR_MULTI_FILE 16384
#define STR_DB_SYMBOL 64
#define STR_GXF 160
#define STR_MAX_PATH 1040
#define STR_MULTI_PATH 16384
#define GS_MAX_PATH STR_FILE
#define GS_MULTI_PATH STR_MULTI_FILE


//===========================================================================================================
//
// GEO_BOOL Definitions
//
// Boolean values
//
// GS_FALSE
// False
//
// GS_TRUE
// True
//
//===========================================================================================================


#define GS_FALSE 0
#define GS_TRUE 1


//===========================================================================================================
//
// GEO_VAR Definitions
//
// Variable types.
// Use -X for strings of X length
//
// GS_INT
// Integer (long)
//
// GS_REAL
// Floating Point (double)
//
//===========================================================================================================


#define GS_INT 0
#define GS_REAL 1


//===========================================================================================================
//
// GS_FORMATS Definitions
//
// Special use data types. String are indicated by a
// negative maximum string length (including NULL).
//
// FORMAT_DECIMAL
// Standard numbers (-134.534)
//
// FORMAT_SIG_DIG
// Decimals imply number of significant digits
//
// FORMAT_EXP
// Exponential notation (-1.345e45)
//
// FORMAT_TIME_COLON
// Standard Time (HH:MM:SS.SSSS)
//
// FORMAT_TIME_HMS
// Time (HH.MMSSSSSSS)
//
// FORMAT_TIME_HHMMSS
// Time (HHMMSS)
//
// FORMAT_DATE_YYYYMMDD
// Standard Date (YYYY/MM/DD, YY/MM/DD, YYYYMMDD or YYMMDD, space or / delimited)
//
// FORMAT_DATE_DDMMYYYY
// Date (DD/MM/YYYY or DD/MM/YY century 20 if YY>50, DISC compliant)
//
// FORMAT_DATE_MMDDYYYY
// Date (MM/DD/YYYY or MM/DD/YY century 19)
//
// FORMAT_GEOGRAPHIC
// Standard Geographical (DEG.MM.SS.SSS)
//
// FORMAT_GEOGRAPHIC_1
// GeoGraph (DEG:MM:SS.SSS)
//
// FORMAT_GEOGRAPHIC_2
// GeoGraph (DEG.MMSSSSS)
//
// FORMAT_GEOGRAPHIC_3
// GeoGraph (DEGMMmmmm or DEGMM.mmmm or DEG.MM.mmmm)  (mmmm: decimal minute)
//
//===========================================================================================================


#define FORMAT_DECIMAL 0
#define FORMAT_SIG_DIG 5
#define FORMAT_EXP 1
#define FORMAT_TIME_COLON 2
#define FORMAT_TIME_HMS 8
#define FORMAT_TIME_HHMMSS 9
#define FORMAT_DATE_YYYYMMDD 3
#define FORMAT_DATE_DDMMYYYY 6
#define FORMAT_DATE_MMDDYYYY 7
#define FORMAT_GEOGRAPHIC 4
#define FORMAT_GEOGRAPHIC_1 10
#define FORMAT_GEOGRAPHIC_2 11
#define FORMAT_GEOGRAPHIC_3 12


//===========================================================================================================
//
// GS_TYPES Definitions
//
// Special use data types. String are indicated by a
// negative maximum string length (including NULL).
//
// GS_BYTE
// Signed Byte
//
// GS_USHORT
// Unsigned Short
//
// GS_SHORT
// Signed Short
//
// GS_LONG
// Signed Long
//
// GS_FLOAT
// 32-Bit floating point
//
// GS_DOUBLE
// 64-Bit floating point
//
// GS_UBYTE
// Unsigned byte
//
// GS_ULONG
// Unsigned Long
//
// GS_LONG64
// 64-Bit signed long
//
// GS_ULONG64
// 64-Bit unsigned long
//
// GS_FLOAT3D
// 3 x 32-Bit floating point
//
// GS_DOUBLE3D
// 3 x 64-Bit floating point
//
// GS_FLOAT2D
// 2 x 32-Bit floating point
//
// GS_DOUBLE2D
// 2 x 64-Bit floating point
//
// GS_MAXTYPE
// Maximum supported type (GS_DOUBLE2D)
//
// GS_TYPE_DEFAULT
// Default. Can be used only when a method specifically allows a default type.
//
//===========================================================================================================


#define GS_BYTE 0
#define GS_USHORT 1
#define GS_SHORT 2
#define GS_LONG 3
#define GS_FLOAT 4
#define GS_DOUBLE 5
#define GS_UBYTE 6
#define GS_ULONG 7
#define GS_LONG64 8
#define GS_ULONG64 9
#define GS_FLOAT3D 10
#define GS_DOUBLE3D 11
#define GS_FLOAT2D 12
#define GS_DOUBLE2D 13
#define GS_MAXTYPE 13
#define GS_TYPE_DEFAULT -32767


//===========================================================================================================
//
// SYS_CRYPT_KEY Definitions
//
// Special Encryption Keys
//
// SYS_CRYPT_LICENSE_KEY
// Using the current license key
//
// SYS_CRYPT_COMPUTER_ID
// Use the current computer ID
//
// SYS_CRYPT_GLOBAL_ID
// Use the non-changing computer ID
//
//===========================================================================================================


#define SYS_CRYPT_LICENSE_KEY "{***LICENSE_KEY***}"
#define SYS_CRYPT_COMPUTER_ID "{***COMPUTER_ID***}"
#define SYS_CRYPT_GLOBAL_ID "{***GLOBAL_COMPUTER_ID***}"


//===========================================================================================================
//
// TIME_FORMAT Definitions
//
// Old Time formats
//
// TIME_FORMAT_COLON
// Standard Time (HH:MM:SS.SSSS)
//
// TIME_FORMAT_HMS
// Time (HH.MMSSSSSSS)
//
//===========================================================================================================


#define TIME_FORMAT_COLON 1
#define TIME_FORMAT_HMS 2







//*** endblock Generated


#endif
