//*** extends 'class_empty.gxh'

#ifndef HBIGRID_GXH_DEFINED
#define HBIGRID_GXH_DEFINED

//*** block Header
// NOTICE: Do not edit anything here, it is generated code
//===========================================================================================================
//
// Class BIGRID
//
//-----------------------------------------------------------------------------------------------------------
//
// The Bigrid class is used to grid data using a optimized algorithm that
// assumes data is collected in semi-straight lines.
//
//-----------------------------------------------------------------------------------------------------------



//*** endblock Header

//*** block Editable
// NOTICE: The code generator will not replace the code in this block
//*** endblock Editable

//*** block Generated
// NOTICE: Do not edit anything here, it is generated code





//===========================================================================================================
//
// Miscellaneous Functions
//
//===========================================================================================================


  
//-----------------------------------------------------------------------------------------------------------
// _Clear_BIGRID Clears all the parameters in a BIGRID object
//
// Available     5.0
//-----------------------------------------------------------------------------------------------------------

[_extended] void _Clear_BIGRID(BIGRID);  // BIGRID object
#define Clear_BIGRID _Clear_BIGRID


  
//-----------------------------------------------------------------------------------------------------------
// Create_BIGRID Create a handle to a Bigrid object
//
// Returns       BIGRID Object
//
// Notes         The Bigrid object is initially empty. It will store the
//               control file parameters which the Bigrid program needs
//               to execute. Use the LoadParms_BIGRID method to get the
//               control file parameters into the BIGRID object.
//
// Available     5.0
//-----------------------------------------------------------------------------------------------------------

[_extended] BIGRID Create_BIGRID();


  
//-----------------------------------------------------------------------------------------------------------
// Destroy_BIGRID Destroy a BIGRID.
//
// Available      5.0
//-----------------------------------------------------------------------------------------------------------

[_public] void Destroy_BIGRID(BIGRID);  // BIGRID to destroy.


  
//-----------------------------------------------------------------------------------------------------------
// iLoadParms_BIGRID Retrieves a Bigrid object's control parameters from a file,
//                   or sets the parameters to default if the file doesn't exist.
//
// Returns           0 - Ok
//                   1 - Error
//
// Notes             If the control file name passed into this function is a file
//                   which does not exist, then the defaults for a Bigrid control
//                   file will be generated and put into the BIGRID object.
//                   Otherwise, the control file's settings are retrieved from
//                   the file and loaded into the BIGRID object.
//
// Available         5.0
//-----------------------------------------------------------------------------------------------------------

[_extended] int iLoadParms_BIGRID(BIGRID,   // BIGRID to load parameter settings into
                                  string);  // Name of file to get the parameter settings from


  
//-----------------------------------------------------------------------------------------------------------
// iLoadWarp_BIGRID Load a warp projection.
//
// Returns          0 - Ok
//                  1 - Error
//
// Available        5.0
//-----------------------------------------------------------------------------------------------------------

[_extended] int iLoadWarp_BIGRID(BIGRID,   // BIGRID to load parameter settings
                                 string,   // New grid title
                                 string,   // New grid cell size as a string, blank for default
                                 string);  // Warp projection file name


  
//-----------------------------------------------------------------------------------------------------------
// Run_BIGRID Executes the Bigrid program, using the input channel and
//            output file parameters.
//
// Available  5.0
//-----------------------------------------------------------------------------------------------------------

[_extended] void Run_BIGRID(BIGRID,   // Handle to BIGRID object (stores control parameters)
                            string,   // Not used, pass as ""
                            DAT,      // Handle to source DAT object (from database)
                            DAT);     // Handle to output grid file DAT


  
//-----------------------------------------------------------------------------------------------------------
// Run2_BIGRID Executes the Bigrid program, using the input channel and
//             output file parameters with a projection handle.
//
// Available   6.3
//-----------------------------------------------------------------------------------------------------------

[_extended] void Run2_BIGRID(BIGRID,   // Handle to BIGRID object (stores control parameters)
                             string,   // Not used, pass as ""
                             DAT,      // Handle to source DAT object (from database)
                             DAT,      // Handle to output grid file DAT
                             IPJ);     // IPJ handle of the projection system


  
//-----------------------------------------------------------------------------------------------------------
// SaveParms_BIGRID Puts the Bigrid object's control parameters back into
//                  its control file.
//
// Notes            If the control file did not previously exist, it will be
//                  created. Otherwise, the old file will be overwritten.
//
// Available        5.0
//-----------------------------------------------------------------------------------------------------------

[_extended] void SaveParms_BIGRID(BIGRID,   // BIGRID object to get parameters from and put into the control file
                                  string);  // Name of file to put the parameter settings into


  
//-----------------------------------------------------------------------------------------------------------
// GetDefaults_BIGRID Get default values for max line separation, max point separation and trend angle.
//
// Returns            0 - Ok
//                    1 - Error
//
// Available          2021.2
//-----------------------------------------------------------------------------------------------------------

[_extended] int GetDefaults_BIGRID(DB,         // Handle to a database
                                   string,     // Y Channel
                                   string,     // X Channel
                                   string,     // Data channel
                                   real,       // cell size
                                   var real,   // max line separation
                                   var real,   // max point separation
                                   var real,   // trend angle
                                   var real,   // low-pass filter wavelength
                                   var real,   // high-pass filter wavelength
                                   var real,   // non-linear filter tolerance
                                   var real);  // pre-filter sample increment


  
//-----------------------------------------------------------------------------------------------------------
// GetDefaultCellSize_BIGRID Get default cell size value.
//
// Returns                   0 - Ok
//                           1 - Error
//
// Available                 2023.1
//-----------------------------------------------------------------------------------------------------------

[_extended] int GetDefaultCellSize_BIGRID(DB,         // Handle to a database
                                          string,     // Y Channel
                                          string,     // X Channel
                                          string,     // Data channel
                                          var real);  // cell size





//*** endblock Generated


#endif
