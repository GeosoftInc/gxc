//*** extends 'class_empty.gxh'

#ifndef HSURFACEITEM_GXH_DEFINED
#define HSURFACEITEM_GXH_DEFINED

//*** block Header
// NOTICE: Do not edit anything here, it is generated code
//===========================================================================================================
//
// Class SURFACEITEM
//
//-----------------------------------------------------------------------------------------------------------
//
// The SURFACEITEM allows you to create, read and alter Geosurface files (*.geosoft_surface).
// A Geosurface file can contain one or more surface items (see SURFACE class). A surface item can
// contains one or more triangular polyhedral meshes.
//
//-----------------------------------------------------------------------------------------------------------



//*** endblock Header

//*** block Editable
// NOTICE: The code generator will not replace the code in this block
//*** endblock Editable

//*** block Generated
// NOTICE: Do not edit anything here, it is generated code


//===========================================================================================================
//
// SURFACERENDER_MODE Definitions
//
// Open Modes
//
// SURFACERENDER_SMOOTH
// 
//
// SURFACERENDER_FILL
// 
//
// SURFACERENDER_EDGES
// 
//
//===========================================================================================================


#define SURFACERENDER_SMOOTH 0
#define SURFACERENDER_FILL 1
#define SURFACERENDER_EDGES 2





//===========================================================================================================
//
// Miscellaneous Functions
//
//===========================================================================================================


  
//-----------------------------------------------------------------------------------------------------------
// Create_SURFACEITEM Create a SURFACEITEM
//
// Returns            SURFACEITEM Object
//
// See also           SetProperties_SURFACEITEM and SetDefaultRenderProperties_SURFACEITEM
//
// Available          8.4
//-----------------------------------------------------------------------------------------------------------

[_public] SURFACEITEM Create_SURFACEITEM(string,   // Type
                                         string);  // Name


  
//-----------------------------------------------------------------------------------------------------------
// Destroy_SURFACEITEM Destroy the SURFACEITEM Object.
//
// Available           8.4
//-----------------------------------------------------------------------------------------------------------

[_public] void Destroy_SURFACEITEM(SURFACEITEM);  // SURFACEITEM Object


  
//-----------------------------------------------------------------------------------------------------------
// GetGUID_SURFACEITEM Gets the GUID of the surface item.
//
// Notes               The value returned by this call will not be valid for newly created items until after a call to AddSurfaceItem_SURFACE.
//
// Available           8.4
//-----------------------------------------------------------------------------------------------------------

[_public] void GetGUID_SURFACEITEM(SURFACEITEM,   // SURFACEITEM Object
                                   var string,    // GUID
                                   int);          // Size of GUID buffer.
#define _GetGUID_SURFACEITEM(surfaceitem, guid) GetGUID_SURFACEITEM(surfaceitem, guid, sizeof(guid))


  
//-----------------------------------------------------------------------------------------------------------
// SetProperties_SURFACEITEM Sets the properties of the surface item.
//
// See also                  GenerateGUID_SYS
//
// Available                 8.4
//-----------------------------------------------------------------------------------------------------------

[_public] void SetProperties_SURFACEITEM(SURFACEITEM,   // SURFACEITEM Object
                                         string,        // Type
                                         string,        // Name
                                         string,        // SourceGuid
                                         string,        // SourceName
                                         real,          // SourceMeasure
                                         string,        // SecondarySourceGuid
                                         string,        // SecondarySourceName
                                         real);         // SecondarySourceMeasure


  
//-----------------------------------------------------------------------------------------------------------
// SetPropertiesEx_SURFACEITEM Sets the properties of the surface item (includes new properties introduced in 8.5).
//
// See also                    GenerateGUID_SYS
//
// Available                   8.5
//-----------------------------------------------------------------------------------------------------------

[_public] void SetPropertiesEx_SURFACEITEM(SURFACEITEM,   // SURFACEITEM Object
                                           string,        // Type
                                           string,        // Name
                                           string,        // SourceGuid
                                           string,        // SourceName
                                           real,          // SourceMeasure
                                           string,        // SecondarySourceGuid
                                           string,        // SecondarySourceName
                                           int,           // SecondarySourceOption
                                           real,          // SecondarySourceMeasure
                                           real);         // SecondarySourceMeasure2


  
//-----------------------------------------------------------------------------------------------------------
// GetProperties_SURFACEITEM Gets the properties of the surface item.
//
// Available                 8.4
//-----------------------------------------------------------------------------------------------------------

[_public] void GetProperties_SURFACEITEM(SURFACEITEM,   // SURFACEITEM Object
                                         var string,    // Type
                                         int,           // Size of Type buffer.
                                         var string,    // Name
                                         int,           // Size of Name buffer.
                                         var string,    // SourceGuid
                                         int,           // Size of SourceGuid buffer.
                                         var string,    // SourceName
                                         int,           // Size of SourceName buffer.
                                         var real,      // SourceMeasure
                                         var string,    // SecondarySourceGuid
                                         int,           // Size of SecondarySourceGuid buffer.
                                         var string,    // SecondarySourceName
                                         int,           // Size of SecondarySourceName buffer.
                                         var real);     // SecondarySourceMeasure
#define _GetProperties_SURFACEITEM(surfaceitem, type, name, source_guid, source_name, source_measure, secondary_source_guid, secondary_source_name, secondary_source_measure) GetProperties_SURFACEITEM(surfaceitem, type, sizeof(type), name, sizeof(name), source_guid, sizeof(source_guid), source_name, sizeof(source_name), source_measure, secondary_source_guid, sizeof(secondary_source_guid), secondary_source_name, sizeof(secondary_source_name), secondary_source_measure)


  
//-----------------------------------------------------------------------------------------------------------
// GetPropertiesEx_SURFACEITEM Gets the properties of the surface item  (includes new properties introduced in 8.5).
//
// Available                   8.5
//-----------------------------------------------------------------------------------------------------------

[_public] void GetPropertiesEx_SURFACEITEM(SURFACEITEM,   // SURFACEITEM Object
                                           var string,    // Type
                                           int,           // Size of Type buffer.
                                           var string,    // Name
                                           int,           // Size of Name buffer.
                                           var string,    // SourceGuid
                                           int,           // Size of SourceGuid buffer.
                                           var string,    // SourceName
                                           int,           // Size of SourceName buffer.
                                           var real,      // SourceMeasure
                                           var string,    // SecondarySourceGuid
                                           int,           // Size of SecondarySourceGuid buffer.
                                           var string,    // SecondarySourceName
                                           int,           // Size of SecondarySourceName buffer.
                                           var int,       // SecondarySourceOption
                                           var real,      // SecondarySourceMeasure
                                           var real);     // SecondarySourceMeasure2
#define _GetPropertiesEx_SURFACEITEM(surfaceitem, type, name, source_guid, source_name, source_measure, secondary_source_guid, secondary_source_name, secondary_source_option, secondary_source_measure, secondary_source_measure2) GetPropertiesEx_SURFACEITEM(surfaceitem, type, sizeof(type), name, sizeof(name), source_guid, sizeof(source_guid), source_name, sizeof(source_name), source_measure, secondary_source_guid, sizeof(secondary_source_guid), secondary_source_name, sizeof(secondary_source_name), secondary_source_option, secondary_source_measure, secondary_source_measure2)


  
//-----------------------------------------------------------------------------------------------------------
// SetDefaultRenderProperties_SURFACEITEM Sets default render properties of the surface item.
//
// See also                               iColor_MVIEW
//
// Available                              8.4
//-----------------------------------------------------------------------------------------------------------

[_public] void SetDefaultRenderProperties_SURFACEITEM(SURFACEITEM,   // SURFACEITEM Object
                                                      int,           // Color
                                                      real,          // Transparency
                                                      int);          // SURFACERENDER_MODE


  
//-----------------------------------------------------------------------------------------------------------
// GetDefaultRenderProperties_SURFACEITEM Gets default render properties of the surface item.
//
// See also                               iColor_MVIEW
//
// Available                              8.4
//-----------------------------------------------------------------------------------------------------------

[_public] void GetDefaultRenderProperties_SURFACEITEM(SURFACEITEM,   // SURFACEITEM Object
                                                      var int,       // Color
                                                      var real,      // Transparency
                                                      var int);      // SURFACERENDER_MODE


  
//-----------------------------------------------------------------------------------------------------------
// iNumComponents_SURFACEITEM Get the number of components in the surface item.
//
// Returns                    Number of components in the surface item.
//
// Available                  8.4
//-----------------------------------------------------------------------------------------------------------

[_public] int iNumComponents_SURFACEITEM(SURFACEITEM);  // SURFACEITEM Object


  
//-----------------------------------------------------------------------------------------------------------
// iAddMesh_SURFACEITEM Adds a triangular polyhedral mesh component to the surface item.
//
// Returns              The index of the component added.
//
// Available            8.4
//-----------------------------------------------------------------------------------------------------------

[_public] int iAddMesh_SURFACEITEM(SURFACEITEM,   // SURFACEITEM Object
                                   VV,            // Vertices X location
                                   VV,            // Vertices Y location
                                   VV,            // Vertices Z location
                                   VV,            // Triangles 1st Vertex
                                   VV,            // Triangles 2nd Vertex
                                   VV);           // Triangles 3rd Vertex


  
//-----------------------------------------------------------------------------------------------------------
// GetMesh_SURFACEITEM Gets a triangular polyhedral mesh of a component in the surface item.
//
// Available           8.4
//-----------------------------------------------------------------------------------------------------------

[_public] void GetMesh_SURFACEITEM(SURFACEITEM,   // SURFACEITEM Object
                                   int,           // Index of the component
                                   VV,            // Vertices X - VV double type
                                   VV,            // Vertices Y - VV double type
                                   VV,            // Vertices Z - VV double type
                                   VV,            // Triangles 1st Vertex - VV unsigned int32 type
                                   VV,            // Triangles 2nd Vertex - VV unsigned int32 type
                                   VV);           // Triangles 3rd Vertex - VV unsigned int32 type


  
//-----------------------------------------------------------------------------------------------------------
// GetExtents_SURFACEITEM Get the spatial range of the the surface item.
//
// Available              8.5
//-----------------------------------------------------------------------------------------------------------

[_public] void GetExtents_SURFACEITEM(SURFACEITEM,   // SURFACEITEM object
                                      var real,      // Minimum valid data in X.
                                      var real,      // Minimum valid data in Y.
                                      var real,      // Minimum valid data in Z.
                                      var real,      // Maximum valid data in X.
                                      var real,      // Maximum valid data in Y.
                                      var real);     // Maximum valid data in Z.


  
//-----------------------------------------------------------------------------------------------------------
// GetMeshInfo_SURFACEITEM Gets information about a triangular polyhedral mesh component in the surface item.
//
// Available               8.4
//-----------------------------------------------------------------------------------------------------------

[_public] void GetMeshInfo_SURFACEITEM(SURFACEITEM,   // SURFACEITEM Object
                                       int,           // Index of the component
                                       var int,       // indicating if mesh is closed
                                       var int,       // Number of inner components
                                       var real,      // Area
                                       var real,      // Volume
                                       var real);     // Volume confidence interval


  
//-----------------------------------------------------------------------------------------------------------
// GetInfo_SURFACEITEM Gets information about the surface item.
//
// Available           8.5
//-----------------------------------------------------------------------------------------------------------

[_public] void GetInfo_SURFACEITEM(SURFACEITEM,   // SURFACEITEM Object
                                   var int,       // indicating if all meshes in item is closed
                                   var real,      // Area
                                   var real,      // Volume
                                   var real);     // Volume confidence interval


  
//-----------------------------------------------------------------------------------------------------------
// GetGeometryInfo_SURFACEITEM Get the total number of vertices and triangles of all mesh components in item.
//
// Available                   8.5
//-----------------------------------------------------------------------------------------------------------

[_public] void GetGeometryInfo_SURFACEITEM(SURFACEITEM,   // SURFACEITEM Object
                                           var int,       // Total number of vertices
                                           var int);      // Total number of triangles


  
//-----------------------------------------------------------------------------------------------------------
// ComputeExtendedInfo_SURFACEITEM Compute more information (including validation) about of all mesh components in the surface item.
//
// Available                       8.5
//-----------------------------------------------------------------------------------------------------------

[_public] void ComputeExtendedInfo_SURFACEITEM(SURFACEITEM,   // SURFACEITEM Object
                                               var int,       // Number of inner components (recomputed)
                                               var int,       // Total number of valid vertices
                                               var int,       // Total number of valid edges
                                               var int,       // Total number of valid triangles
                                               var int,       // Number of inconsistent triangles
                                               var int,       // Number of invalid triangles
                                               var int);      // Number of self intersections


  
//-----------------------------------------------------------------------------------------------------------
// ComputePolyLineIntersections_SURFACEITEM Compute intersections of a 3D PolyLine with a SURFACEITEM Object
//
// Available                                9.7.1
//-----------------------------------------------------------------------------------------------------------

[_licensed] void ComputePolyLineIntersections_SURFACEITEM(SURFACEITEM,   // SURFACEITEM Object
                                                          VV,            // X coordinates.
                                                          VV,            // Y coordinates.
                                                          VV,            // Z coordinates.
                                                          VV,            // X coordinates.
                                                          VV,            // Y coordinates.
                                                          VV);           // Z coordinates.


  
//-----------------------------------------------------------------------------------------------------------
// iIntersectsBoundingBox_SURFACEITEM Checks intersections of a bounding box with a SURFACEITEM Object
//
// Available                          9.7.1
//-----------------------------------------------------------------------------------------------------------

[_licensed] int iIntersectsBoundingBox_SURFACEITEM(SURFACEITEM,   // SURFACEITEM Object
                                                   real,          // Min X
                                                   real,          // Min Y
                                                   real,          // Min Z
                                                   real,          // Max X
                                                   real,          // Max Y
                                                   real);         // Max Z





//*** endblock Generated


#endif
