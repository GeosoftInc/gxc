//*** extends 'class_empty.gxh'

#ifndef HCHIMERA_GXH_DEFINED
#define HCHIMERA_GXH_DEFINED

//*** block Header
// NOTICE: Do not edit anything here, it is generated code
//===========================================================================================================
//
// Class CHIMERA
//
//-----------------------------------------------------------------------------------------------------------
//
// CHIMERA GX function library.
//
//-----------------------------------------------------------------------------------------------------------



//*** endblock Header

//*** block Editable
// NOTICE: The code generator will not replace the code in this block
//*** endblock Editable

//*** block Generated
// NOTICE: Do not edit anything here, it is generated code


//===========================================================================================================
//
// CHIMERA_MAX_CHAN Definitions
//
// Maximum channels in Chimera database
//
// CHIMERA_MAX_CHAN
// 
//
//===========================================================================================================


#define CHIMERA_MAX_CHAN 128


//===========================================================================================================
//
// CHIMERA_PLOT Definitions
//
// Chimera plot type
//
// CHIMERA_PLOT_ROSE
// 
//
// CHIMERA_PLOT_PIE
// 
//
// CHIMERA_PLOT_BAR
// 
//
//===========================================================================================================


#define CHIMERA_PLOT_ROSE 0
#define CHIMERA_PLOT_PIE 1
#define CHIMERA_PLOT_BAR 2





//===========================================================================================================
//
// Miscellaneous Functions
//
//===========================================================================================================


  
//-----------------------------------------------------------------------------------------------------------
// BarPlot_CHIMERA Plot a Bar plot of up to 8 channels.
//
// Notes           The number of channels is taken from the Data handles VV.
//                 Plots a bar plot with the center of the "X" axis at the symbol location.
//                 See the note on offset symbols in RosePlot_CHIMERA
//
// Available       5.0.7
//-----------------------------------------------------------------------------------------------------------

[_extended] void BarPlot_CHIMERA(MVIEW,    // View object to plot to
                                 string,   // Data group name
                                 string,   // Offset group name
                                 VV,       // X locations
                                 VV,       // Y locations
                                 VV,       // Data handles, stored as INT values
                                 VV,       // Colors
                                 int,      // Color for edges
                                 int,      // Offset symbols (0: No, 1: Yes)
                                 real,     // Offset symbol size
                                 real);    // Single bar width in data units.


  
//-----------------------------------------------------------------------------------------------------------
// CategorizeByValue_CHIMERA Transform values to the index of input data ranges.
//
// Notes                     A list of minima (e.g.  M1, M2, M3, M4, M5) is input.
//                           A list of values V is input and transformed to outputs N in the following manner:
//                           
//                           if(V) >= M5) N = 5
//                           else if(V) >= M4) N = 4
//                           ...
//                           ...
//                           else if(V) >= M1) N = 1
//                           else N = 0
//
// Available                 6.1
//-----------------------------------------------------------------------------------------------------------

[_extended] void CategorizeByValue_CHIMERA(VV,   // Input range minima
                                           VV,   // Input data VV.      (REAL)
                                           VV);  // Output (altered) VV.(REAL)


  
//-----------------------------------------------------------------------------------------------------------
// CategorizeByValueDetLimit_CHIMERA Transform values to the index of input data ranges, with detection limit.
//
// Notes                             Same as CategorizeByValue_CHIMERA, but if the
//                                   input value is less than the detection limit,
//                                   the output value is set to zero.
//
// Available                         6.2
//-----------------------------------------------------------------------------------------------------------

[_extended] void CategorizeByValueDetLimit_CHIMERA(VV,     // Input range minima
                                                   VV,     // Input data VV.      (REAL)
                                                   real,   // Detection limit (can be rDUMMY)
                                                   VV);    // Output (altered) VV.(REAL)


  
//-----------------------------------------------------------------------------------------------------------
// ClipToDetectLimit_CHIMERA Apply detection limit clipping of data.
//
// Notes                     Flow:
//                           
//                           1. If auto-converting negatives, then all negative values
//                               are replaced by -0.5*value, and detection limit is ignored.
//                           
//                           2. If not auto-converting negatives, and the detection limit is not
//                              rDUMMY, then values less than the detection limit are converted to
//                              one-half the detection limit.
//
// Available                 5.0.8
//-----------------------------------------------------------------------------------------------------------

[_extended] void ClipToDetectLimit_CHIMERA(VV,     // Input data vv (altered).
                                           real,   // Detection limit
                                           int);   // Auto-convert negatives?


  
//-----------------------------------------------------------------------------------------------------------
// DrawCircleOffsetMarkers_CHIMERA Plots location marker and joining line for circle offset symbols
//
// Notes                           Draws black filled circle (symbols.gfn #7) and a joining line.
//
// Available                       5.0.7
//-----------------------------------------------------------------------------------------------------------

[_extended] void DrawCircleOffsetMarkers_CHIMERA(MVIEW,   // View
                                                 VV,      // Original (marker) X location
                                                 VV,      // Original (marker) Y location
                                                 VV,      // Offset (new) X location
                                                 VV,      // Offset (new) Y location
                                                 real);   // Marker symbol radius


  
//-----------------------------------------------------------------------------------------------------------
// DrawRectangleOffsetMarkers_CHIMERA Plots location marker and joining line for rectangle offset symbols
//
// Notes                              Draws black filled circle (symbols.gfn #7) and a joining line.
//
// Available                          5.0.7
//-----------------------------------------------------------------------------------------------------------

[_extended] void DrawRectangleOffsetMarkers_CHIMERA(MVIEW,   // View
                                                    VV,      // Original (marker) X location
                                                    VV,      // Original (marker) Y location
                                                    VV,      // Offset (new) X location
                                                    VV,      // Offset (new) Y location
                                                    real,    // Offset symbol width
                                                    real,    // Offset symbol height
                                                    real);   // Marker symbol radius


  
//-----------------------------------------------------------------------------------------------------------
// DuplicateChem_CHIMERA Plot an ASSAY Duplicate result in a graph window.
//
// Available             5.0.7
//-----------------------------------------------------------------------------------------------------------

[_extended] void DuplicateChem_CHIMERA(MVIEW,    // View
                                       VV,       // Duplicate data
                                       int,      // Log-transform: 0 - linear, 1 - log
                                       real,     // Detect Limit
                                       int,      // Number of old samples in the VV
                                       VV,       // Tolerances (1-5 values)
                                       string,   // Title
                                       string,   // Unit
                                       real,     // X location (bottom left corner of graph)
                                       real,     // Y location
                                       real,     // Graph width
                                       real);    // Graph height


  
//-----------------------------------------------------------------------------------------------------------
// DuplicateChemView_CHIMERA Plot an ASSAY Duplicate result in a new view.
//
// Available                 8.3
//-----------------------------------------------------------------------------------------------------------

[_extended] void DuplicateChemView_CHIMERA(MAP,        // Map
                                           string,     // New view name
                                           string,     // New group name
                                           IPJ,        //
                                           VV,         // Duplicate data
                                           int,        // Log-transform: 0 - linear, 1 - log
                                           real,       // Detect Limit
                                           int,        // Number of old samples in the VV
                                           VV,         // Tolerances (1-5 values)
                                           string,     // Title
                                           string,     // Unit
                                           VV,         // VV X
                                           VV,         // VV Line
                                           VV,         // VV Fid
                                           DB,         // Database
                                           var real,   // Returned MinY
                                           var real);  // Returned MaxY


  
//-----------------------------------------------------------------------------------------------------------
// GetExpressionDataVV_CHIMERA Get data from a line using a channel expression.
//
// Notes                       Input a channel expression. Units for individual channels
//                             are stored in the input INI. Returns a VV for the given line
//                             with the calculated expression values.
//
// Available                   6.4
//-----------------------------------------------------------------------------------------------------------

[_extended] void GetExpressionDataVV_CHIMERA(DB,        // Database
                                             DB_SYMB,   // Line to read
                                             string,    // Geochem stage (just "raw data stage" for now).
                                             string,    // Channel expression
                                             string,    // INI file name with required units (e.g. PARAMETER.CU="ppm") (optional)
                                             VV);       // Returned data


  
//-----------------------------------------------------------------------------------------------------------
// GetLithogeochemData_CHIMERA Get all rows of non-dummy data in a database.
//
// Notes                       This function is a quick way to get all rows
//                             of data, guaranteeing no dummy items.
//                             Book-keeping VVs returned let you easily
//                             write back results to new channels in the
//                             correct locations.
//                             Set the "Dummy Row" VV to 1 if you wish to
//                             remove any row where a value for the corresponding
//                             channel is a dummy.
//                             
//                             Transforms to apply:
//                             
//                             -1 - Channel default (will be either raw or log)
//                             0 - Raw Transform
//                             1 - Log transform: base e with log min = CHIMERA_LOG_MIN
//                             2 - Lambda transform
//
// Available                   6.2
//-----------------------------------------------------------------------------------------------------------

[_extended] void GetLithogeochemData_CHIMERA(DB,        // [i] database handle
                                             LST,       // [i] channels of data to get
                                             DB_SYMB,   // [i] mask channel (can be NULLSYMB)
                                             VV,        // [i] transforms to apply
                                             int,       // [i] remove dummy rows?
                                             VV,        // [i] dummy row if this channel value is dummy (0:No, 1:Yes)? Effective only if "remove dummy rows" value is TRUE
                                             int,       // [i] warn if rows removed because of dummy data items?
                                             VV,        // [o] (INT) returned data - one VV handle per channel
                                             VV,        // [o] line symbols selected
                                             VV,        // [o] number of original data items in each line
                                             VV,        // [o] number of non-dummy rows
                                             VV,        // [o] indices into original data
                                             VV,        // [o] Fid Starts (REAL)
                                             VV);       // [o] Fid Increments (REAL)


  
//-----------------------------------------------------------------------------------------------------------
// GetTransform_CHIMERA Get channel transform options and lambda values.
//
// Notes                If the lambda transform is requested, the channel
//                      must have the lambda value defined.
//                      
//                      Input Transform options
//                      
//                      -1 - Channel default (will be either raw or log)
//                      0 - Raw Transform
//                      1 - Log transform: base e with log min = CHIMERA_LOG_MIN
//                      2 - Lambda transform
//
// Available            6.2
//-----------------------------------------------------------------------------------------------------------

[_extended] void GetTransform_CHIMERA(DB,         // DB handle
                                      string,     // Channel name
                                      int,        // Transform option: -1, 0, 1 or 2
                                      var int,    // Returned transform used
                                      var real);  // Returned lambda value for option==2


  
//-----------------------------------------------------------------------------------------------------------
// iIsAcquireChan_CHIMERA Is this channel in acQuire format (e.g. "Ag_ppm_4AWR")
//
// Notes                  Expressions can take acQuire-type named channels
//                        if the exact element/oxide is not found. This function
//                        extracts the channel name, and units from an acQuire-formatted
//                        channel name.
//
// Available              7.2
//-----------------------------------------------------------------------------------------------------------

[_extended] int iIsAcquireChan_CHIMERA(string,       // String to test
                                       var string,   // Returned channel name
                                       int,          // Buffer size for channel name
                                       var string,   // Returned units
                                       int,          // Buffer size for units
                                       var real,     // Buffer factor (e.g. ppm = 1.e-6)
                                       var int);     // is this an oxide?
#define isAcquireChan_CHIMERA(input_chan, chan, units, factor, oxide) iIsAcquireChan_CHIMERA(input_chan, chan, sizeof(chan), units, sizeof(units), factor, oxide)


  
//-----------------------------------------------------------------------------------------------------------
// iIsElement_CHIMERA Tests a string to see if it is an element symbol
//
// Notes              Suggested use - testing to see if a channel name is an
//                    element so that the "ASSAY" class can be set.
//
// Available          5.0.7
//-----------------------------------------------------------------------------------------------------------

[_extended] int iIsElement_CHIMERA(string,   // String to test
                                   int);     // STR_CASE


  
//-----------------------------------------------------------------------------------------------------------
// LaunchHistogram_CHIMERA Launch histogram tool on a database.
//
// Notes                   The database should be a currently open database.
//                         This function supercedes LaunchHistogram_EDB, (which now
//                         just gets the name of the EDB and calls this function).
//
// Available               5.0.6
//-----------------------------------------------------------------------------------------------------------

[_extended] void LaunchHistogram_CHIMERA(string,   // Database name
                                         string);  // First chan name


  
//-----------------------------------------------------------------------------------------------------------
// LaunchProbability_CHIMERA Launch probability tool on a database.
//
// Notes                     The database should be a currently open database.
//
// Available                 5.1.8
//-----------------------------------------------------------------------------------------------------------

[_extended] void LaunchProbability_CHIMERA(string,   // Database name
                                           string);  // First chan name


  
//-----------------------------------------------------------------------------------------------------------
// LaunchScatter_CHIMERA Launch scatter tool on a database.
//
// Notes                 The scatter tool uses the following INI parameters
//                       
//                       ================  ===============================================
//                       SCATTER.STM       name of the scatter template, "none" for none
//                       ----------------  -----------------------------------------------
//                       SCATTER.STM_NAME  name of last template section, "" for none.
//                       ----------------  -----------------------------------------------
//                       SCATTER.X         name of channel to display in X
//                       ----------------  -----------------------------------------------
//                       SCATTER.Y         name of channel to display in Y
//                       ----------------  -----------------------------------------------
//                       SCATTER.MASK      name of channel to use for mask
//                       ================  ===============================================
//                       
//                       The database should be a currently open database.
//                       This function supercedes LaunchScatter_EDB, (which now
//                       just gets the name of the EDB and calls this function).
//
// Available             5.0.6
//-----------------------------------------------------------------------------------------------------------

[_extended] void LaunchScatter_CHIMERA(string);  // Database name


  
//-----------------------------------------------------------------------------------------------------------
// LaunchTriplot_CHIMERA Launch Triplot tool on a database.
//
// Notes                 The Triplot tool uses the following INI parameters
//                       
//                       ================  ===============================================
//                       TRIPLOT.TTM       name of the triplot template, "none" for none
//                       ----------------  -----------------------------------------------
//                       TRIPLOT.TTM_NAME  name of last template section, "" for none.
//                       ----------------  -----------------------------------------------
//                       TRIPLOT.X         name of channel to display in X
//                       ----------------  -----------------------------------------------
//                       TRIPLOT.Y         name of channel to display in Y
//                       ----------------  -----------------------------------------------
//                       TRIPLOT.Z         name of channel to display in Z
//                       ----------------  -----------------------------------------------
//                       TRIPLOT.MASK      name of channel to use for mask
//                       ================  ===============================================
//                       
//                       The database should be a currently open database.
//
// Available             5.0.7
//-----------------------------------------------------------------------------------------------------------

[_extended] void LaunchTriplot_CHIMERA(string);  // Database name


  
//-----------------------------------------------------------------------------------------------------------
// MaskChanLST_CHIMERA Load a LST with mask channels.
//
// Notes               Loads a LST with all channels with CLASS "MASK", as well
//                     as all channels containing the string "MASK", as long
//                     as the CLASS for these channels is not set to something
//                     other than "" or "MASK".
//                     
//                     This function has been duplicated by MaskChanLST_DB, which
//                     is safe to use in applications which do not have CHIMERA loaded.
//
// Available           5.0.7
//-----------------------------------------------------------------------------------------------------------

[_extended] void MaskChanLST_CHIMERA(DB,    // hDB - Database Object
                                     LST);  // LST object to populate


  
//-----------------------------------------------------------------------------------------------------------
// OrderedChannelLST_CHIMERA Fill a list with the channels in the preferred order.
//
// Notes                     Loads a LST with all channels in the preferred order:
//                           
//                           First:  Sample, E, N, assay channels,
//                           Middle: Data from survey (other channels),
//                           Last:   Duplicate, Standard, Chemmask (and other masks), weight, lab, batch
//                           
//                           If the input LST object has values, it is used as the channel LST,
//                           otherwise, get all the database channels. (This allows you to pass in
//                           the currently displayed channels and only reload those).
//
// Available                 5.1.8
//-----------------------------------------------------------------------------------------------------------

[_extended] void OrderedChannelLST_CHIMERA(DB,    // hDB - Database Object
                                           LST);  // LST object to populate [recommended 2*STR_DB_SYMBOL]


  
//-----------------------------------------------------------------------------------------------------------
// PiePlot_CHIMERA Plot a Pie plot of up to 8 channels.
//
// Notes           The number of channels is taken from the Data handles VV.
//                 The values in each data VV are summed and the pie arc is
//                 is given by the percent contribution of each constituent.
//                 See the note on offset symbols in RosePlot_CHIMERA
//
// Available       5.0.7
//-----------------------------------------------------------------------------------------------------------

[_extended] void PiePlot_CHIMERA(MVIEW,    // View object to plot to
                                 string,   // Data group name
                                 string,   // Offset group name
                                 VV,       // X locations
                                 VV,       // Y locations
                                 VV,       // Data handles, stored as INT values
                                 VV,       // Colors
                                 int,      // Color for edges
                                 int,      // Offset symbols (0: No, 1: Yes)
                                 real,     // Offset symbol size
                                 real);    // Pie plot radius in data units.


  
//-----------------------------------------------------------------------------------------------------------
// PiePlot2_CHIMERA Same as PiePlot_CHIMERA, with a starting angle.
//
// Notes            The starting angle is the location of the edge of the first pie
//                  slice, counted in degrees counter-clockwise from horizontal
//                  (3 o'clock). Zero degrees gives the same plot as PiePlot_CHIMERA.
//
// Available        5.1.5
//-----------------------------------------------------------------------------------------------------------

[_extended] void PiePlot2_CHIMERA(MVIEW,    // View object to plot to
                                  string,   // Data group name
                                  string,   // Offset group name
                                  VV,       // X locations
                                  VV,       // Y locations
                                  VV,       // Data handles, stored as INT values
                                  VV,       // Colors
                                  int,      // Color for edges
                                  int,      // Offset symbols (0: No, 1: Yes)
                                  real,     // Offset symbol size
                                  real,     // Pie plot radius in data units.
                                  real);    // Starting angle in degrees CCW from horizontal (rDUMMY gives 0.0)


  
//-----------------------------------------------------------------------------------------------------------
// PlotStringClassifiedSymbolsLegendFromClassFile_CHIMERA Plot legend for the string classified symbols
//
// Notes                                                  Plot in a legend the classes in the class file found in the input class indices.
//
// Available                                              8.0.1
//-----------------------------------------------------------------------------------------------------------

[_extended] void PlotStringClassifiedSymbolsLegendFromClassFile_CHIMERA(MVIEW,    // Map view object
                                                                        string,   // Title
                                                                        real,     // Left side X location
                                                                        real,     // Bottom Y bound
                                                                        real,     // Top Y bound
                                                                        string,   // Class file name (TPAT)
                                                                        VV);      // Class indices (INT VV)


  
//-----------------------------------------------------------------------------------------------------------
// rAtomicWeight_CHIMERA Return the atomic weight of a particular element.
//
// Returns               The atomic weight of the given element.
//
// Notes                 If the input string is not an element symbol (elements in the range
//                       1-92, "H" to "U"), then returns a dummy (GS_R8DM).
//
// Available             6.4.2
//-----------------------------------------------------------------------------------------------------------

[_extended] real rAtomicWeight_CHIMERA(string);  // Element name (case insensitive)


  
//-----------------------------------------------------------------------------------------------------------
// RosePlot_CHIMERA Plot a Rose plot of up to 8 channels.
//
// Notes            The number of channels is taken from the Data handles VV.
//                  The values in each data VV give the radius, in view units,
//                  of the sector arc to plots. Values <=0 or dummies are not
//                  plotted.
//                  
//                  Offset symbols: When selected, the symbols plot without
//                  overlap, away from the original locations. The original
//                  location is marked with a small symbol and a line joins the
//                  original position and the relocated symbol.
//                  Care should be taken when choosing the symbol size, because
//                  if the point density is too high, all the points will get
//                  pushed to the outside edge and your plot will look like a
//                  hedgehog (it also takes a lot longer!).
//
// Available        5.0.7
//-----------------------------------------------------------------------------------------------------------

[_extended] void RosePlot_CHIMERA(MVIEW,    // View object to plot to
                                  string,   // Data group name
                                  string,   // Offset group name
                                  VV,       // X locations
                                  VV,       // Y locations
                                  VV,       // Data handles, stored as INT values
                                  VV,       // Colors
                                  int,      // Color for edges
                                  int,      // Offset symbols (0: No, 1: Yes)
                                  real);    // Offset symbol size


  
//-----------------------------------------------------------------------------------------------------------
// RosePlot2_CHIMERA Same as RosePlot_CHIMERA, with a starting angle.
//
// Notes             The starting angle is the location of the edge of the first pie
//                   slice, counted in degrees counter-clockwise from horizontal
//                   (3 o'clock). Zero degrees gives the same plot as RosePlot_CHIMERA.
//
// Available         5.1.5
//-----------------------------------------------------------------------------------------------------------

[_extended] void RosePlot2_CHIMERA(MVIEW,    // View object to plot to
                                   string,   // Data group name
                                   string,   // Offset group name
                                   VV,       // X locations
                                   VV,       // Y locations
                                   VV,       // Data handles, stored as INT values
                                   VV,       // Colors
                                   int,      // Color for edges
                                   int,      // Offset symbols (0: No, 1: Yes)
                                   real,     // Offset symbol size
                                   real);    // Starting angle in degrees CCW from horizontal (rDUMMY gives 0.0)


  
//-----------------------------------------------------------------------------------------------------------
// Scatter2_CHIMERA Plot the scatter plot on a map using symbol number, size and color VVs.
//
// Notes            The view scaling is not altered with any projection. The base view
//                  is best as the input.
//
// Available        5.0.7
//-----------------------------------------------------------------------------------------------------------

[_extended] void Scatter2_CHIMERA(MVIEW,    // View
                                  string,   // Title
                                  real,     // X location (bottom left corner of box)
                                  real,     // Y location
                                  real,     // Box width
                                  real,     // Box height
                                  VV,       // Horizontal channel
                                  VV,       // Vertical channel
                                  string,   // Decorated font name, "" for default symbol font (normally symbols.gfn)
                                  VV,       // Symbol numbers
                                  VV,       // Symbol sizes
                                  VV,       // Colors  if symbol number or Color == 0, do not plot
                                  int,      // Annotation style 0 - outside, 1 - inside
                                  string,   // Horizontal channel name
                                  string,   // Vertical channel name
                                  string,   // Horizontal channel units
                                  string,   // Vertical channel units
                                  real,     // Min. Horizontal value, rDUMMY for default
                                  real,     // Max. Horizontal value
                                  real,     // Min. Vertical value
                                  real,     // Max. Vertical value
                                  real,     // Min. Horizontal range value
                                  real,     // Max. Horizontal range value
                                  real,     // Min. Vertical range value
                                  real,     // Max. Vertical range value
                                  int,      // Use Min Horz. Range selection?
                                  int,      // Use Max Horz. Range selection?
                                  int,      // Use Min Vert. Range selection?
                                  int,      // Use Max Vert. Range selection?
                                  int,      // Horizontal axis scaling: 0 - linear, 1 - log
                                  int);     // Vertical axis scaling: 0 - linear, 1 - log


  
//-----------------------------------------------------------------------------------------------------------
// FixedSymbolScatterPlot_CHIMERA Plot a scatter plot using a single fixed symbol.
//                                Optional data masking with masking Color.
//                                Optional database linking.
//
// Notes                          Plot a scatter plot using a single fixed symbol.
//
// Available                      8.0.1
//-----------------------------------------------------------------------------------------------------------

[_extended] void FixedSymbolScatterPlot_CHIMERA(MVIEW,    // View
                                                string,   // Title
                                                real,     // X location (bottom left corner of box)
                                                real,     // Y location
                                                real,     // Box width
                                                real,     // Box height
                                                VV,       // Horizontal channel data
                                                VV,       // Vertical channel data
                                                VV,       // Mask channel data (can be NULL)
                                                int,      // Mask Color; overrides symbol Color where mask data is not dummy. Pass an empty string to iColor_MVIEW for no plot.
                                                string,   // Decorated font name, "" for default symbol font (normally symbols.gfn)
                                                int,      // Symbol number (>=0)
                                                real,     // Symbol size ( >=0)
                                                real,     // Symbol angle (-360 to 360)
                                                int,      // Symbol Color
                                                int,      // Symbol fill Color
                                                DB,       // Database (source of data)
                                                VV,       // Line handles for data
                                                VV,       // Fid values for data
                                                int,      // Annotation style 0 - outside, 1 - inside
                                                string,   // Horizontal channel name
                                                string,   // Vertical channel name
                                                string,   // Horizontal channel units
                                                string,   // Vertical channel units
                                                real,     // Min. Horizontal value, rDUMMY for default
                                                real,     // Max. Horizontal value
                                                real,     // Min. Vertical value
                                                real,     // Max. Vertical value
                                                int,      // Horizontal axis scaling: 0 - linear, 1 - log
                                                int,      // Vertical axis scaling
                                                string);  // Plot overlay ("" for none)


  
//-----------------------------------------------------------------------------------------------------------
// ZoneColouredScatterPlot_CHIMERA Plot a scatter plot using colors based on a zone file.
//                                 Optional data masking with masking color.
//                                 Optional database linking.
//
// Notes                           Plot a scatter plot using colors based on a zone file.
//
// Available                       8.0.1
//-----------------------------------------------------------------------------------------------------------

[_extended] void ZoneColouredScatterPlot_CHIMERA(MVIEW,    // View
                                                 string,   // Title
                                                 real,     // X location (bottom left corner of box)
                                                 real,     // Y location
                                                 real,     // Box width
                                                 real,     // Box height
                                                 VV,       // Horizontal channel data
                                                 VV,       // Vertical channel data
                                                 VV,       // Mask channel data (can be NULL)
                                                 int,      // Mask color; overrides symbol color where mask data is not dummy. Pass an empty string to iColor_MVIEW for no plot.
                                                 VV,       // Zone channel data
                                                 string,   // Zone file name
                                                 string,   // Decorated font name, "" for default symbol font (normally symbols.gfn)
                                                 int,      // Symbol number (>=0)
                                                 real,     // Symbol size ( >=0)
                                                 real,     // Symbol angle (-360 to 360)
                                                 int,      // Symbol color
                                                 int,      // Symbol fill color
                                                 int,      // Fix symbol edge color?
                                                 DB,       // Database (source of data)
                                                 VV,       // Line handles for data
                                                 VV,       // Fid values for data
                                                 int,      // Annotation style 0 - outside, 1 - inside
                                                 string,   // Horizontal channel name
                                                 string,   // Vertical channel name
                                                 string,   // Horizontal channel units
                                                 string,   // Vertical channel units
                                                 real,     // Min. Horizontal value, rDUMMY for default
                                                 real,     // Max. Horizontal value
                                                 real,     // Min. Vertical value
                                                 real,     // Max. Vertical value
                                                 int,      // Horizontal axis scaling: 0 - linear, 1 - log
                                                 int,      // Vertical axis scaling
                                                 string);  // Plot overlay ("" for none)


  
//-----------------------------------------------------------------------------------------------------------
// StringClassifiedScatterPlot_CHIMERA Plot a scatter plot using symbols based on a symbol class file.
//                                     Optional data masking with masking color.
//                                     Optional database linking.
//
// Notes                               Plot a scatter plot using symbols based on a symbol class file.
//
// Available                           8.0.1
//-----------------------------------------------------------------------------------------------------------

[_extended] void StringClassifiedScatterPlot_CHIMERA(MVIEW,    // View
                                                     string,   // Title
                                                     real,     // X location (bottom left corner of box)
                                                     real,     // Y location
                                                     real,     // Box width
                                                     real,     // Box height
                                                     VV,       // Horizontal channel data
                                                     VV,       // Vertical channel data
                                                     VV,       // Mask channel data
                                                     int,      // Mask color; overrides symbol color. Pass an empty string to iColor_MVIEW for no plot.
                                                     VV,       // Class channel data
                                                     string,   // Class file (TPAT) name.
                                                     real,     // Symbol size override. Set to 0.0 to use class file symbol sizes.
                                                     DB,       // Database (source of data)
                                                     VV,       // Line handles for data
                                                     VV,       // Fid values for data
                                                     int,      // Annotation style 0 - outside, 1 - inside
                                                     string,   // Horizontal channel name
                                                     string,   // Vertical channel name
                                                     string,   // Horizontal channel units
                                                     string,   // Vertical channel units
                                                     real,     // Min. Horizontal value, rDUMMY for default
                                                     real,     // Max. Horizontal value
                                                     real,     // Min. Vertical value
                                                     real,     // Max. Vertical value
                                                     int,      // Horizontal axis scaling: 0 - linear, 1 - log
                                                     int,      // Vertical axis scaling
                                                     string);  // Plot overlay ("" for none)


  
//-----------------------------------------------------------------------------------------------------------
// SetLithogeochemData_CHIMERA Set data back into a database.
//
// Notes                       This function would normally be called after
//                             AAGetLithogeochemData_CHIMERA to write processed values
//                             back into a database, in the correct lines,
//                             and in the correct fiducial locations wrt the
//                             other data. The book-keeping VVs would all be
//                             set up in AAGetLithogeochemData_CHIMERA.
//                             
//                             Values NOT in the data (missing indices) will
//                             be initialized to dummy if the channel is new,
//                             or if the value in the last VV below is set to 1.
//                             
//                             New channel types will be set using the data VV type.
//                             Any metadata (CLASS, display formats) should be set separately.
//
// Available                   6.2
//-----------------------------------------------------------------------------------------------------------

[_extended] void SetLithogeochemData_CHIMERA(DB,    // [i] database handle
                                             LST,   // [i] channels of data to set
                                             VV,    // [i] (INT) input data - one VV handle per channel
                                             VV,    // [i] line symbols selected
                                             VV,    // [i] number of original data items in each line
                                             VV,    // [i] number of non-dummy rows
                                             VV,    // [i] indices into original data
                                             VV,    // [i] Fid Starts (REAL)
                                             VV,    // [i] Fid Increments (REAL)
                                             VV);   // [i] init channel values to dummies first (0:No, 1:Yes)?


  
//-----------------------------------------------------------------------------------------------------------
// StackedBarPlot_CHIMERA Plot a Bar plot of up to 8 channels, bars stacked on each other.
//
// Notes                  The number of channels is taken from the Data handles VV.
//                        Plots a bar plot with the center of the "X" axis at the symbol location.
//                        See the note on offset symbols in RosePlot_CHIMERA
//
// Available              5.1.8
//-----------------------------------------------------------------------------------------------------------

[_extended] void StackedBarPlot_CHIMERA(MVIEW,    // View object to plot to
                                        string,   // Data group name
                                        string,   // Offset group name
                                        VV,       // X locations
                                        VV,       // Y locations
                                        VV,       // Data handles, stored as INT values
                                        VV,       // Colors
                                        int,      // Color for edges
                                        int,      // Offset symbols (0: No, 1: Yes)
                                        real,     // Offset symbol size
                                        real);    // Single bar width in data units.


  
//-----------------------------------------------------------------------------------------------------------
// Standard_CHIMERA Plot ASSAY Standard result in a graph window.
//
// Notes            If the tolerance is rDUMMY, then the minimum and maximum
//                  values are used, and must be specified.
//
// Available        5.0.7
//-----------------------------------------------------------------------------------------------------------

[_extended] void Standard_CHIMERA(MVIEW,    // View
                                  VV,       // Standard data
                                  int,      // Number of old samples in the VV
                                  real,     // Tolerance as a function of std dev
                                  real,     // Minimum acceptable value
                                  real,     // Maximum acceptable value
                                  string,   // Title
                                  string,   // Unit
                                  real,     // X location (bottom left corner of graph)
                                  real,     // Y location
                                  real,     // Graph width
                                  real);    // Graph height


  
//-----------------------------------------------------------------------------------------------------------
// StandardView_CHIMERA Plot ASSAY Standard result in a graph window.
//
// Notes                Same as Standard_CHIMERA but plot in a new view.
//
// Available            8.3
//-----------------------------------------------------------------------------------------------------------

[_extended] void StandardView_CHIMERA(MAP,        // Map
                                      string,     // New view name
                                      string,     // New group name
                                      IPJ,        //
                                      VV,         // Standard data (VV Y)
                                      int,        // Number of old samples in the VV
                                      real,       // Tolerance as a function of std dev
                                      real,       // Minimum acceptable value
                                      real,       // Maximum acceptable value
                                      string,     // Title
                                      string,     // Unit
                                      real,       // Size X
                                      VV,         // VV X
                                      VV,         // VV Line
                                      VV,         // VV Fid
                                      DB,         // Database
                                      var real,   // Returned MinY
                                      var real);  // Returned MaxY


  
//-----------------------------------------------------------------------------------------------------------
// TriPlot2_CHIMERA Plot the TriPlot on a map using symbol number, size and color VVs.
//
// Notes            The mask channel VV is used for plotting precedence; those points with
//                  mask = dummy are plotted first, then overwritten with the non-masked
//                  values, so you don't get "good" points being covered up by masked values.
//                  The view scaling is not altered with any projection. The base view
//                  is best as the input.
//
// Available        5.1.6
//-----------------------------------------------------------------------------------------------------------

[_extended] void TriPlot2_CHIMERA(MVIEW,    // View
                                  string,   // Title
                                  real,     // X location (bottom left corner of box)
                                  real,     // Y location
                                  real,     // Box width
                                  real,     // Box height
                                  VV,       // X channel
                                  VV,       // Y channel
                                  VV,       // Z channel
                                  VV,       // Mask channel
                                  string,   // Decorated font name, "" for default symbol font (normally symbols.gfn)
                                  VV,       // Symbol numbers
                                  VV,       // Symbol sizes
                                  VV,       // Colors  if symbol number or color == 0, do not plot
                                  string,   // X channel name
                                  string,   // Y channel name
                                  string,   // Z channel name
                                  real,     // Min. X range value
                                  real,     // Max. X range value
                                  real,     // Min. Y range value
                                  real,     // Max. Y range value
                                  real,     // Min. Z range value
                                  real,     // Max. Z range value
                                  int,      // Use Min X Range selection?
                                  int,      // Use Max X Range selection?
                                  int,      // Use Min Y Range selection?
                                  int,      // Use Max Y Range selection?
                                  int,      // Use Min Z Range selection?
                                  int,      // Use Max Z Range selection?
                                  int,      // Plot Grid lines? (0: Just outside edge tics, 1: Grid lines).
                                  real,     // Tic Increment (in percent)
                                  real);    // Grid increment (in percent)


  
//-----------------------------------------------------------------------------------------------------------
// FixedSymbolTriPlot_CHIMERA Plot a tri-plot using a single fixed symbol.
//                            Optional data masking with masking color.
//                            Optional database linking.
//
// Notes                      Plot a tri plot using a single fixed symbol.
//
// Available                  8.0.1
//-----------------------------------------------------------------------------------------------------------

[_extended] void FixedSymbolTriPlot_CHIMERA(MVIEW,    // View
                                            string,   // Title
                                            real,     // X location (bottom left corner of box)
                                            real,     // Y location
                                            real,     // Triangle side length
                                            VV,       // X channel data
                                            VV,       // Y channel data
                                            VV,       // Z channel data
                                            VV,       // Mask channel data
                                            int,      // Mask color; overrides symbol color where mask data is not dummy. Pass an empty string to iColor_MVIEW for no plot.
                                            string,   // Decorated font name, "" for default symbol font (normally symbols.gfn)
                                            int,      // Symbol number (>=0)
                                            real,     // Symbol size ( >=0)
                                            real,     // Symbol angle (-360 to 360)
                                            int,      // Symbol color
                                            int,      // Symbol fill color
                                            DB,       // Database (source of data)
                                            VV,       // Line handles for data
                                            VV,       // Fid values for data
                                            string,   // X channel name
                                            string,   // Y channel name
                                            string,   // Z channel name
                                            int,      // Plot Grid lines? (0: Just outside edge tics, 1: Grid lines).
                                            real,     // Tic Increment (in percent)
                                            real,     // Grid increment (in percent)
                                            string);  // Plot overlay ("" for none)


  
//-----------------------------------------------------------------------------------------------------------
// ZoneColouredTriPlot_CHIMERA Plot a tri-plot using colors based on a zone file.
//                             Optional data masking with masking color.
//                             Optional database linking.
//
// Notes                       Plot a tri plot using colors based on a zone file.
//
// Available                   8.0.1
//-----------------------------------------------------------------------------------------------------------

[_extended] void ZoneColouredTriPlot_CHIMERA(MVIEW,    // View
                                             string,   // Title
                                             real,     // X location (bottom left corner of box)
                                             real,     // Y location
                                             real,     // Triangle side length
                                             VV,       // X channel data
                                             VV,       // Y channel data
                                             VV,       // Z channel data
                                             VV,       // Mask channel data
                                             int,      // Mask color; overrides symbol color where mask data is not dummy. Pass an empty string to iColor_MVIEW for no plot.
                                             VV,       // Zone channel data
                                             string,   // Zone file name
                                             string,   // Decorated font name, "" for default symbol font (normally symbols.gfn)
                                             int,      // Symbol number (>=0)
                                             real,     // Symbol size ( >=0)
                                             real,     // Symbol angle (-360 to 360)
                                             int,      // Symbol color
                                             int,      // Symbol fill color
                                             int,      // Fix symbol edge color?
                                             DB,       // Database (source of data)
                                             VV,       // Line handles for data
                                             VV,       // Fid values for data
                                             string,   // X channel name
                                             string,   // Y channel name
                                             string,   // Z channel name
                                             int,      // Plot Grid lines? (0: Just outside edge tics, 1: Grid lines).
                                             real,     // Tic Increment (in percent)
                                             real,     // Grid increment (in percent)
                                             string);  // Plot overlay ("" for none)


  
//-----------------------------------------------------------------------------------------------------------
// StringClassifiedTriPlot_CHIMERA Plot a tri-plot using symbols based on a symbol class file.
//                                 Optional data masking with masking color.
//                                 Optional database linking.
//
// Notes                           Plot a tri-plot using symbols based on a symbol class file.
//
// Available                       8.0.1
//-----------------------------------------------------------------------------------------------------------

[_extended] void StringClassifiedTriPlot_CHIMERA(MVIEW,    // View
                                                 string,   // Title
                                                 real,     // X location (bottom left corner of box)
                                                 real,     // Y location
                                                 real,     // Triangle side length
                                                 VV,       // X channel data
                                                 VV,       // Y channel data
                                                 VV,       // Z channel data
                                                 VV,       // Mask channel data
                                                 int,      // Mask color; overrides symbol color. Pass an empty string to iColor_MVIEW for no plot.
                                                 VV,       // Class channel data
                                                 string,   // Class file (TPAT) name.
                                                 real,     // Symbol size override. Set to 0.0 to use class file symbol sizes.
                                                 DB,       // Database (source of data)
                                                 VV,       // Line handles for data
                                                 VV,       // Fid values for data
                                                 string,   // X channel name
                                                 string,   // Y channel name
                                                 string,   // Z channel name
                                                 int,      // Plot Grid lines? (0: Just outside edge tics, 1: Grid lines).
                                                 real,     // Tic Increment (in percent)
                                                 real,     // Grid increment (in percent)
                                                 string);  // Plot overlay ("" for none)



//===========================================================================================================
//
// Deprecated Functions
//
//===========================================================================================================


  
//-----------------------------------------------------------------------------------------------------------
// GetStringClassifiedSymbolsIndex_CHIMERA Get symbol indices based on a classification VV.
//
// Notes                                   Scatter and Triplots now use class files.
//
// Available                               6.3
//-----------------------------------------------------------------------------------------------------------

[_extended] void GetStringClassifiedSymbolsIndex_CHIMERA(VV,   // Classification channel (string type)
                                                         VV);  // Symbol indices (returned) (INT VV)


  
//-----------------------------------------------------------------------------------------------------------
// GetStringClassifiedSymbols_CHIMERA Get symbol numbers and colors based on a classification VV.
//
// Notes                              Scatter and Triplots now use class files.
//                                    Up to 42 different symbols are defined.
//                                    Index 0 is returned for unclassified strings ""
//                                    Index 1 is returned for unassigned strings (only the
//                                    first 40 different classes get their own unique symbol/color.
//
// Available                          6.3
//-----------------------------------------------------------------------------------------------------------

[_extended] void GetStringClassifiedSymbols_CHIMERA(VV,    // Symbol indices  (INT VV)
                                                    VV,    // Symbol numbers (returned) (INT VV)
                                                    VV,    // Symbol colors (returned) (INT VV)
                                                    int,   // (TRUE/FALSE) Set Unclassified symbol color to C_ANY_NONE?
                                                    int);  // (TRUE/FALSE) Set Unassigned symbol color to C_ANY_NONE?


  
//-----------------------------------------------------------------------------------------------------------
// PlotStringClassifiedSymbolsLegend_CHIMERA Plot legend for the string classified symbols.
//
// Notes                                     Scatter and Triplots now use class files.
//                                           Up to 42 different symbols are defined.
//                                           Duplicate symbol indices are removed.
//                                           Index 0 is returned for unclassified strings ""
//                                           Index 1 is returned for unassigned strings (only the
//                                           first 40 different classes get their own unique symbol/color.
//
// Available                                 6.3
//-----------------------------------------------------------------------------------------------------------

[_extended] void PlotStringClassifiedSymbolsLegend_CHIMERA(MVIEW,    // Map view object
                                                           string,   // Title
                                                           real,     // Left side X location
                                                           real,     // Bottom Y bound
                                                           real,     // Top Y bound
                                                           VV,       // Strings (string VV)
                                                           VV,       // Symbol indices  (INT VV) 0-41
                                                           int,      // Plot Unclassified symbol?
                                                           int);     // Plot Unassigned symbol?


  
//-----------------------------------------------------------------------------------------------------------
// Scatter_CHIMERA Plot the scatter plot on a map.
//
// Notes           The view scaling is not altered with any projection. The base view
//                 is best as the input.
//
// Available       5.0.7
//-----------------------------------------------------------------------------------------------------------

[_extended] void Scatter_CHIMERA(MVIEW,    // View
                                 string,   // Title
                                 real,     // X location (bottom left corner of color boxes)
                                 real,     // Y location
                                 real,     // Box width
                                 real,     // Box height
                                 VV,       // Horizontal channel
                                 VV,       // Vertical channel
                                 VV,       // Mask channel
                                 string,   // Horizontal channel name
                                 string,   // Vertical channel name
                                 string,   // Mask channel name
                                 string,   // Horizontal channel units
                                 string,   // Vertical channel units
                                 real,     // Min. Horizontal value
                                 real,     // Max. Horizontal value
                                 real,     // Min. Vertical value
                                 real,     // Max. Vertical value
                                 real,     // Min. Horizontal range value
                                 real,     // Max. Horizontal range value
                                 real,     // Min. Vertical range value
                                 real,     // Max. Vertical range value
                                 int,      // Use Min Horz. Range selection?
                                 int,      // Use Max Horz. Range selection?
                                 int,      // Use Min Vert. Range selection?
                                 int,      // Use Max Vert. Range selection?
                                 int,      // Use linear horizontal axis scaling?
                                 int,      // Use linear vertical axis scaling?
                                 int);     // Symbol size (0: small, 1: medium, 2: large)


  
//-----------------------------------------------------------------------------------------------------------
// Scatter3_CHIMERA Like Scatter2_CHIMERA, but passes Line-Fid info, more options.
//
// Notes            - As of v6.3, the plotted data is put in its own view. The Line-Fid
//                  values are passed in to enable Line-Fid linking.
//                  - Optional Mask symbol colors
//                  - Optional overlay. (See SEMPLOT class).
//                  - If the classified symbols are used, unique symbols (up to 266) are
//                  given to the different classes. An "Unassigned" symbol is plotted
//                  for blank or classes above 266.
//                  - The view is given a user-projection and so should not be re-used
//                  for other purposes (like the base view for the Scatter_CHIMERA and
//                  Scatter2_CHIMERA functions can be).
//
// Available        6.3
//-----------------------------------------------------------------------------------------------------------

[_extended] void Scatter3_CHIMERA(MVIEW,    // View
                                  string,   // Title
                                  real,     // X location (bottom left corner of box)
                                  real,     // Y location
                                  real,     // Box width
                                  real,     // Box height
                                  VV,       // Horizontal channel
                                  VV,       // Vertical channel
                                  VV,       // Mask channel
                                  string,   // Decorated font name, "" for default symbol font (normally symbols.gfn)
                                  VV,       // Symbol numbers
                                  VV,       // Symbol sizes
                                  VV,       // Colors if symbol number or color == 0, do not plot
                                  int,      // Mask color; overrides symbol color. Pass an empty string to iColor_MVIEW for no plot.
                                  DB,       // Database (source of data)
                                  VV,       // Line handles for data
                                  VV,       // Fid values for data
                                  int,      // Annotation style 0 - outside, 1 - inside
                                  string,   // Horizontal channel name
                                  string,   // Vertical channel name
                                  string,   // Horizontal channel units
                                  string,   // Vertical channel units
                                  real,     // Min. Horizontal value, rDUMMY for default
                                  real,     // Max. Horizontal value
                                  real,     // Min. Vertical value
                                  real,     // Max. Vertical value
                                  int,      // Horizontal axis scaling: 0 - linear, 1 - log
                                  int,      // Vertical axis scaling
                                  string);  // Plot overlay ("" for none)


  
//-----------------------------------------------------------------------------------------------------------
// TriPlot_CHIMERA Plot the TriPlot on a map.
//
// Available       5.0.7
//-----------------------------------------------------------------------------------------------------------

[_extended] void TriPlot_CHIMERA(MVIEW,    // View
                                 string,   // Title
                                 real,     // X location (bottom left corner of color boxes)
                                 real,     // Y location
                                 real,     // Box width
                                 real,     // Box height
                                 VV,       // X channel
                                 VV,       // Y channel
                                 VV,       // Z channel
                                 VV,       // Mask channel
                                 string,   // X channel name
                                 string,   // Y channel name
                                 string,   // Z channel name
                                 string,   // Mask channel name
                                 real,     // Min. X range value
                                 real,     // Max. X range value
                                 real,     // Min. Y range value
                                 real,     // Max. Y range value
                                 real,     // Min. Z range value
                                 real,     // Max. Z range value
                                 int,      // Use Min X Range selection?
                                 int,      // Use Max X Range selection?
                                 int,      // Use Min Y Range selection?
                                 int,      // Use Max Y Range selection?
                                 int,      // Use Min Z Range selection?
                                 int,      // Use Max Z Range selection?
                                 int,      // Plot Grid lines? (0: Just outside edge tics, 1: Grid lines).
                                 real,     // Tic Increment (in percent)
                                 real,     // Grid increment (in percent)
                                 int);     // Symbol size (0: small, 1: medium, 2: large)


  
//-----------------------------------------------------------------------------------------------------------
// TriPlot3_CHIMERA TriPlot to its own view, with Line-Fid info.
//
// Available        6.3
//-----------------------------------------------------------------------------------------------------------

[_extended] void TriPlot3_CHIMERA(MVIEW,    // View
                                  string,   // Title
                                  real,     // X location (bottom left corner of box)
                                  real,     // Y location
                                  real,     // Triangle side length
                                  VV,       // X channel
                                  VV,       // Y channel
                                  VV,       // Z channel
                                  VV,       // Mask channel
                                  string,   // Decorated font name, "" for default symbol font (normally symbols.gfn)
                                  VV,       // Symbol numbers
                                  VV,       // Symbol sizes
                                  VV,       // Symbol colors  if symbol number or color == 0, do not plot
                                  int,      // Mask color; overrides symbol color. Pass an empty string to iColor_MVIEW for no plot.
                                  DB,       // Database (source of data)
                                  VV,       // Line handles for data
                                  VV,       // Fid values for data
                                  string,   // X channel name
                                  string,   // Y channel name
                                  string,   // Z channel name
                                  int,      // Plot Grid lines? (0: Just outside edge tics, 1: Grid lines).
                                  real,     // Tic Increment (in percent)
                                  real,     // Grid increment (in percent)
                                  string);  // Plot overlay ("" for none)





//*** endblock Generated


#endif
