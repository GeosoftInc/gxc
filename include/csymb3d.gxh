//*** extends 'class_empty.gxh'

#ifndef HCSYMB3D_GXH_DEFINED
#define HCSYMB3D_GXH_DEFINED

//*** block Header
// NOTICE: Do not edit anything here, it is generated code
//===========================================================================================================
//
// Class CSYMB3D
//
//-----------------------------------------------------------------------------------------------------------
//
// This class is used for generating and modifying 3D colored symbol objects.
// Symbols are assigned colors based on their Z values and a zone, Aggregate
// or ITR file which defines what colors are associated with different ranges
// of Z values. The position of a symbol is defined by its X,Y,Z coordinates.
//
//-----------------------------------------------------------------------------------------------------------



//*** endblock Header

//*** block Editable
// NOTICE: The code generator will not replace the code in this block
//*** endblock Editable

//*** block Generated
// NOTICE: Do not edit anything here, it is generated code


//===========================================================================================================
//
// CSYMB3D_SYMBOL Definitions
//
// Color Symbol Type defines
//
// CSYMB_SYMBOL_SPHERE
// 
//
// CSYMB_SYMBOL_CUBE
// 
//
// CSYMB_SYMBOL_CYLINDER
// 
//
// CSYMB_SYMBOL_CONE
// 
//
// CSYMB_SYMBOL_DOT
// 
//
//===========================================================================================================


#define CSYMB_SYMBOL_SPHERE 30
#define CSYMB_SYMBOL_CUBE 31
#define CSYMB_SYMBOL_CYLINDER 32
#define CSYMB_SYMBOL_CONE 33
#define CSYMB_SYMBOL_DOT 34





//===========================================================================================================
//
// Create and Destroy Functions
//
//===========================================================================================================


  
//-----------------------------------------------------------------------------------------------------------
// Create_CSYMB3D Create a CSYMB3D.
//
// Returns        CSYMB3D handle
//
// Notes          The default object uses fixed size and colour.
//
// Available      2024.1
//-----------------------------------------------------------------------------------------------------------

[_public] CSYMB3D Create_CSYMB3D(real,   // Symbol size (> 0.0)
                                 int);   // colour to use for the fixed colour


  
//-----------------------------------------------------------------------------------------------------------
// Destroy_CSYMB3D Destroy a CSYMB3D.
//
// Available       2024.1
//-----------------------------------------------------------------------------------------------------------

[_public] void Destroy_CSYMB3D(CSYMB3D);  // CSYMB3D to destroy



//===========================================================================================================
//
// Data Functions
//
//===========================================================================================================


  
//-----------------------------------------------------------------------------------------------------------
// AddLocations_CSYMB3D Add x,y,z locations to a CSYMB3D object.
//
// Available            2024.1
//-----------------------------------------------------------------------------------------------------------

[_public] void AddLocations_CSYMB3D(CSYMB3D,   // CSYMB3D object
                                    VV,        // VV for X locations
                                    VV,        // VV for Y locations
                                    VV);       // VV for Z locations


  
//-----------------------------------------------------------------------------------------------------------
// AddColorData_CSYMB3D Add data for colors to a CSYMB3D object.
//
// Notes                To use these values, add a colour transform using the SetITR function.
//                      Ensure you add an equal number of locations.
//
// Available            2024.1
//-----------------------------------------------------------------------------------------------------------

[_public] void AddColorData_CSYMB3D(CSYMB3D,   // CSYMB3D object
                                    VV);       // VV for colour data values.


  
//-----------------------------------------------------------------------------------------------------------
// AddSizeData_CSYMB3D Add data for sizes to a CSYMB3D object.
//
// Notes               To use these values, call the SetSizeScale or SetSizeMinMax functions.
//                     Ensure you add an equal number of locations.
//
// Available           2024.1
//-----------------------------------------------------------------------------------------------------------

[_public] void AddSizeData_CSYMB3D(CSYMB3D,   // CSYMB3D object
                                   VV);       // VV for size data values.


  
//-----------------------------------------------------------------------------------------------------------
// GetLocations_CSYMB3D Get x,y,z locations from a color symbol object.
//
// Available            2024.1
//-----------------------------------------------------------------------------------------------------------

[_public] void GetLocations_CSYMB3D(CSYMB3D,   // CSYMB3D object
                                    VV,        // VV for X locations
                                    VV,        // VV for Y locations
                                    VV);       // VV for Z locations


  
//-----------------------------------------------------------------------------------------------------------
// GetColorData_CSYMB3D Get data for colors from a CSYMB3D object.
//
// Available            2024.1
//-----------------------------------------------------------------------------------------------------------

[_public] void GetColorData_CSYMB3D(CSYMB3D,   // CSYMB3D object
                                    VV);       // VV for colour data values.


  
//-----------------------------------------------------------------------------------------------------------
// GetSizeData_CSYMB3D Get data for sizes from a CSYMB3D object.
//
// Available           2024.1
//-----------------------------------------------------------------------------------------------------------

[_public] void GetSizeData_CSYMB3D(CSYMB3D,   // CSYMB3D object
                                   VV);       // VV for size data values.


  
//-----------------------------------------------------------------------------------------------------------
// GetST_CSYMB3D Get a copy of the CSYMB3D statistics object
//
// Notes         Returns all dummies if no values are input with the locations.
//               If both colour and size data are present, returns the colour ST.
//
// Available     2024.1
//-----------------------------------------------------------------------------------------------------------

[_public] void GetST_CSYMB3D(CSYMB3D,   // CSYMB3D object
                             ST);       // ST Handle


  
//-----------------------------------------------------------------------------------------------------------
// Statistics_CSYMB3D Add the CSYMB values to a statistics object
//
// Notes              Returns all dummies if no values are input with the locations.
//                    If both colour and size data are present, uses the colour data.
//
// Available          2024.1
//-----------------------------------------------------------------------------------------------------------

[_public] void Statistics_CSYMB3D(CSYMB3D,   // CSYMB3D object
                                  ST);       // ST Handle



//===========================================================================================================
//
// Colours Functions
//
//===========================================================================================================


  
//-----------------------------------------------------------------------------------------------------------
// SetFixedColor_CSYMB3D Set symbols to a fixed colour
//
// Available             2024.1
//-----------------------------------------------------------------------------------------------------------

[_public] void SetFixedColor_CSYMB3D(CSYMB3D,   // CSYMB3D object
                                     int);      // colour to use for the fixed colour


  
//-----------------------------------------------------------------------------------------------------------
// iGetFixedColor_CSYMB3D Get the fixed colour. There is always one even if we are using an ITR
//
// Available              2024.1
//-----------------------------------------------------------------------------------------------------------

[_public] int iGetFixedColor_CSYMB3D(CSYMB3D);  // CSYMB3D object


  
//-----------------------------------------------------------------------------------------------------------
// iFixedColor_CSYMB3D Return whether colours are fixed (1) or use a transform (0)
//
// Available           2024.1
//-----------------------------------------------------------------------------------------------------------

[_public] int iFixedColor_CSYMB3D(CSYMB3D);  // CSYMB3D object


  
//-----------------------------------------------------------------------------------------------------------
// GetITR_CSYMB3D Get the ITR of the CSYMB3D
//
// Notes          Returns an empty ITR if fixed colours are being used.
//
// Available      2024.1
//-----------------------------------------------------------------------------------------------------------

[_public] void GetITR_CSYMB3D(CSYMB3D,   // CSYMB3D object
                              ITR);      // ITR object


  
//-----------------------------------------------------------------------------------------------------------
// SetITR_CSYMB3D Set the ITR of the CSYMB3D
//
// Notes          Setting the ITR puts the symbols in colour-transform mode.
//                Data for colours must be added using the AddSizeData function.
//
// Available      2024.1
//-----------------------------------------------------------------------------------------------------------

[_public] void SetITR_CSYMB3D(CSYMB3D,   // CSYMB3D object
                              ITR);      // ITR object



//===========================================================================================================
//
// Symbol, Size and Scaling Functions
//
//===========================================================================================================


  
//-----------------------------------------------------------------------------------------------------------
// SetSymbol_CSYMB3D Set the symbol type.
//
// Available         2024.1
//-----------------------------------------------------------------------------------------------------------

[_public] void SetSymbol_CSYMB3D(CSYMB3D,   // CSYMB3D object
                                 int);      // CSYMB3D_SYMBOL


  
//-----------------------------------------------------------------------------------------------------------
// SetFixedSize_CSYMB3D Fix the symbol size.
//
// Available            2024.1
//-----------------------------------------------------------------------------------------------------------

[_public] void SetFixedSize_CSYMB3D(CSYMB3D,   // CSYMB3D object
                                    real);     // Symbol size (> 0.0)


  
//-----------------------------------------------------------------------------------------------------------
// SetSizeScale_CSYMB3D Set the symbol size based on a scale.
//
// Notes                Data for sizes must be added using the AddSizeData function.
//                      For log scaling, take the log then apply the scale factor to get the symbol size
//                      (negative logs do not plot).
//
// Available            2024.1
//-----------------------------------------------------------------------------------------------------------

[_public] void SetSizeScale_CSYMB3D(CSYMB3D,   // CSYMB3D object
                                    real,      // Symbol scale (> 0.0)
                                    int,       // 1 - Use log scaling, 0 - linear scaling
                                    real);     // divide by this value before taking the log (default = 1.0, must be > 0.0


  
//-----------------------------------------------------------------------------------------------------------
// SetSizeMinMax_CSYMB3D Scale the symbol size based on value. By default symbols are fixed size
//
// Notes                 Data for sizes must be added using the AddSizeData function.
//                       For log scaling, take the log then apply the scaling method to get the symbol size
//                       (negative logs do not plot).
//
// Available             2024.1
//-----------------------------------------------------------------------------------------------------------

[_public] void SetSizeMinMax_CSYMB3D(CSYMB3D,   // CSYMB3D object
                                     real,      // If defined, make smallest symbol this size (>=0)
                                     real,      // If defined, make largest symbol this size
                                     int,       // If 1, use log scaling, 0 - linear between min and max
                                     real);     // divide by this value before taking the log (default = 1.0, must be > 0.0)





//*** endblock Generated


#endif
