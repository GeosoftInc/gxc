//*** extends 'class_empty.gxh'

#ifndef HEDOC_GXH_DEFINED
#define HEDOC_GXH_DEFINED

//*** block Header
// NOTICE: Do not edit anything here, it is generated code
//===========================================================================================================
//
// Class EDOC
//
//-----------------------------------------------------------------------------------------------------------
//
// The EDOC class provides access to a generic documents views as loaded within
// Oasis montaj.
//
//-----------------------------------------------------------------------------------------------------------



//*** endblock Header

//*** block Editable
// NOTICE: The code generator will not replace the code in this block
//*** endblock Editable

//*** block Generated
// NOTICE: Do not edit anything here, it is generated code


//===========================================================================================================
//
// EDOC_PATH Definitions
//
// Four forms
//
// EDOC_PATH_FULL
// d:\directory\file.gdb
//
// EDOC_PATH_DIR
// \directory\file.gdb
//
// EDOC_PATH_NAME_EXT
// file.gdb
//
// EDOC_PATH_NAME
// file
//
//===========================================================================================================


#define EDOC_PATH_FULL 0
#define EDOC_PATH_DIR 1
#define EDOC_PATH_NAME_EXT 2
#define EDOC_PATH_NAME 3


//===========================================================================================================
//
// EDOC_TYPE Definitions
//
// Avaialable generic document types
//
// EDOC_TYPE_GMS3D
// GMSYS 3D Model
//
// EDOC_TYPE_VOXEL
// Voxel
//
// EDOC_TYPE_VOXEL_INVERSION
// Voxel Inversion
//
// EDOC_TYPE_GMS2D
// GMSYS 2D Model
//
// EDOC_TYPE_GEOSURFACE
// Geosurface
//
//===========================================================================================================


#define EDOC_TYPE_GMS3D 0
#define EDOC_TYPE_VOXEL 1
#define EDOC_TYPE_VOXEL_INVERSION 2
#define EDOC_TYPE_GMS2D 3
#define EDOC_TYPE_GEOSURFACE 4


//===========================================================================================================
//
// EDOC_UNLOAD Definitions
//
// What type of prompt
//
// EDOC_UNLOAD_NO_PROMPT
// 
//
// EDOC_UNLOAD_PROMPT
// 
//
//===========================================================================================================


#define EDOC_UNLOAD_NO_PROMPT 0
#define EDOC_UNLOAD_PROMPT 1


//===========================================================================================================
//
// EDOC_WINDOW_POSITION Definitions
//
// Window Positioning Options
//
// EDOC_WINDOW_POSITION_DOCKED
// 
//
// EDOC_WINDOW_POSITION_FLOATING
// 
//
//===========================================================================================================


#define EDOC_WINDOW_POSITION_DOCKED 0
#define EDOC_WINDOW_POSITION_FLOATING 1


//===========================================================================================================
//
// EDOC_WINDOW_STATE Definitions
//
// Window State Options
//
// EDOC_WINDOW_RESTORE
// 
//
// EDOC_WINDOW_MINIMIZE
// 
//
// EDOC_WINDOW_MAXIMIZE
// 
//
//===========================================================================================================


#define EDOC_WINDOW_RESTORE 0
#define EDOC_WINDOW_MINIMIZE 1
#define EDOC_WINDOW_MAXIMIZE 2


//===========================================================================================================
//
// GMS3D_MODELTYPE Definitions
//
// Avaialable model types
//
// GMS3D_MODELTYPE_DEPTH
// Depth Model
//
// GMS3D_MODELTYPE_TIME
// Time Model
//
//===========================================================================================================


#define GMS3D_MODELTYPE_DEPTH 0
#define GMS3D_MODELTYPE_TIME 1


//===========================================================================================================
//
// GMS2D_MODELTYPE Definitions
//
// Avaialable model types
//
// GMS2D_MODELTYPE_DEPTH
// Depth Model
//
// GMS2D_MODELTYPE_TIME
// Time Model
//
//===========================================================================================================


#define GMS2D_MODELTYPE_DEPTH 0
#define GMS2D_MODELTYPE_TIME 1





//===========================================================================================================
//
// GMSYS 3D Models Functions
//
//===========================================================================================================


  
//-----------------------------------------------------------------------------------------------------------
// CreateNewGMS3D_EDOC Creates a new GMSYS 3D Model into the workspace, flags as new.
//
// Returns             Handle to the newly created edited model.
//
// Notes               See Load_EDOC. This is used for brand new documents, it also sets
//                     an internal flag such that if on closing the user chooses
//                     not to save changes, the document is deleted thus keeping the
//                     project folders clean.
//
// Available           5.0
//-----------------------------------------------------------------------------------------------------------

[_extended_app] EDOC CreateNewGMS3D_EDOC(string,   // Document to load.
                                         int,      // X Size
                                         int,      // Y Size
                                         int);     // GMS3D_MODELTYPE



//===========================================================================================================
//
// Miscellaneous Functions
//
//===========================================================================================================


  
//-----------------------------------------------------------------------------------------------------------
// Current_EDOC This method returns the Current Edited Document.
//
// Returns      EDOC Object
//
// Available    5.0
//-----------------------------------------------------------------------------------------------------------

[_public_app] EDOC Current_EDOC(int);  // EDOC_TYPE


  
//-----------------------------------------------------------------------------------------------------------
// CurrentNoActivate_EDOC This method returns the Current Edited Document.
//
// Returns                EDOC Object
//
// Notes                  This function acts just like Current_EDOC except that the document is not activated (brought to foreground) and no
//                        				guarantee is given about which document is currently active.
//
// Available              9.0
//-----------------------------------------------------------------------------------------------------------

[_public_app] EDOC CurrentNoActivate_EDOC(int);  // EDOC_TYPE


  
//-----------------------------------------------------------------------------------------------------------
// CurrentIfExists_EDOC This method returns the Current Edited Document.
//
// Returns              EDOC Object to current edited document. If there is no current document,
//                      the user is not prompted for a document, and 0 is returned.
//
// Available            5.0
//-----------------------------------------------------------------------------------------------------------

[_public_app] EDOC CurrentIfExists_EDOC(int);  // EDOC_TYPE


  
//-----------------------------------------------------------------------------------------------------------
// Destroy_EDOC Destroy EDOC handle.
//
// Notes        This does not unload the document; it simply deletes the gx resource handle
//
// Available    5.0
//-----------------------------------------------------------------------------------------------------------

[_public_app] void Destroy_EDOC(EDOC);  // EDOC to destroy


  
//-----------------------------------------------------------------------------------------------------------
// iGetDocumentsLST_EDOC Load the file names of open documents into a LST.
//
// Returns               The number of documents loaded into the LST.
//                       The LST is cleared first.
//
// Available             5.0
//-----------------------------------------------------------------------------------------------------------

[_public_app] int iGetDocumentsLST_EDOC(LST,   // LST to load
                                        int,   // EDOC_PATH
                                        int);  // EDOC_TYPE


  
//-----------------------------------------------------------------------------------------------------------
// IGetName_EDOC Get the name of the document object of this EDOC.
//
// Available     5.0
//-----------------------------------------------------------------------------------------------------------

[_public_app] void IGetName_EDOC(EDOC,         //
                                 var string,   // Name returned
                                 int);         // Size of the String
#define GetName_EDOC(edoc, name) IGetName_EDOC(edoc, name, sizeof(name))


  
//-----------------------------------------------------------------------------------------------------------
// iGetWindowState_EDOC Retrieve the current state of the document window
//
// Returns              EDOC_WINDOW_STATE
//
// Available            5.0
//-----------------------------------------------------------------------------------------------------------

[_public_app] int iGetWindowState_EDOC(EDOC);  //


  
//-----------------------------------------------------------------------------------------------------------
// iHaveCurrent_EDOC Returns true if a document is loaded
//
// Available         5.0
//-----------------------------------------------------------------------------------------------------------

[_public_app] int iHaveCurrent_EDOC(int);  // EDOC_TYPE


  
//-----------------------------------------------------------------------------------------------------------
// iLoaded_EDOC Returns 1 if a document is loaded .
//
// Returns      1 if document is loaded, 0 otherwise.
//
// Available    5.0
//-----------------------------------------------------------------------------------------------------------

[_public_app] int iLoaded_EDOC(string,   // document name
                               int);     // EDOC_TYPE


  
//-----------------------------------------------------------------------------------------------------------
// GetWindowPosition_EDOC Get the map window's position and dock state
//
// Available              9.0
//-----------------------------------------------------------------------------------------------------------

[_public_app] void GetWindowPosition_EDOC(EDOC,      //
                                          var int,   // Window left position
                                          var int,   // Window top position
                                          var int,   // Window right position
                                          var int,   // Window bottom position
                                          var int,   // Window state EDOC_WINDOW_STATE
                                          var int);  // Docked or floating EDOC_WINDOW_POSITION


  
//-----------------------------------------------------------------------------------------------------------
// SetWindowPosition_EDOC Get the map window's position and dock state
//
// Available              9.0
//-----------------------------------------------------------------------------------------------------------

[_public_app] void SetWindowPosition_EDOC(EDOC,   //
                                          int,    // Window left position
                                          int,    // Window top position
                                          int,    // Window right position
                                          int,    // Window bottom position
                                          int,    // Window state EDOC_WINDOW_STATE
                                          int);   // Docked or floating EDOC_WINDOW_POSITION


  
//-----------------------------------------------------------------------------------------------------------
// iReadOnly_EDOC Checks if a document is currently opened in a read-only mode.
//
// Available      5.0
//-----------------------------------------------------------------------------------------------------------

[_public_app] int iReadOnly_EDOC(EDOC);  //


  
//-----------------------------------------------------------------------------------------------------------
// Load_EDOC Loads a list of documents into the workspace
//
// Returns   Handle to current edited document, which will be the last
//           document in the list.
//
// Notes     The last listed document will become the current document.
//           
//           Only the first file in the list may have a directory path.
//           All other files in the list are assumed to be in the same
//           directory as the first file.
//
// Available 5.0
//-----------------------------------------------------------------------------------------------------------

[_public_app] EDOC Load_EDOC(string,   // list of documents (';' or '|' delimited) to load.
                             int);     // EDOC_TYPE


  
//-----------------------------------------------------------------------------------------------------------
// LoadNoActivate_EDOC Loads a list of documents into the workspace
//
// Returns             Handle to current edited document, which will be the last
//                     document in the list.
//
// Notes               This function acts just like Load_EDOC except that the document(s) is not activated (brought to foreground) and no
//                     					guarantee is given about which document is currently active.
//
// Available           9.0
//-----------------------------------------------------------------------------------------------------------

[_public_app] EDOC LoadNoActivate_EDOC(string,   // list of documents (';' or '|' delimited) to load.
                                       int);     // EDOC_TYPE


  
//-----------------------------------------------------------------------------------------------------------
// MakeCurrent_EDOC Makes this EDOC object the current active object to the user.
//
// Available        5.0
//-----------------------------------------------------------------------------------------------------------

[_public_app] void MakeCurrent_EDOC(EDOC);  // EDOC to make active


  
//-----------------------------------------------------------------------------------------------------------
// SetWindowState_EDOC Changes the state of the document window
//
// Available           5.0
//-----------------------------------------------------------------------------------------------------------

[_public_app] void SetWindowState_EDOC(EDOC,   //
                                       int);   // EDOC_WINDOW_STATE


  
//-----------------------------------------------------------------------------------------------------------
// Sync_EDOC Syncronize the Metadata of a document that is not currently open
//
// Available 5.0
//-----------------------------------------------------------------------------------------------------------

[_public_app] void Sync_EDOC(string,   // Document file name
                             int);     // EDOC_TYPE


  
//-----------------------------------------------------------------------------------------------------------
// SyncOpen_EDOC Syncronize the Metadata of a document
//
// Available     5.0
//-----------------------------------------------------------------------------------------------------------

[_public_app] void SyncOpen_EDOC(EDOC);  //


  
//-----------------------------------------------------------------------------------------------------------
// UnLoad_EDOC Unloads an edited document.
//
// Notes       If the document is not loaded, nothing happens.
//             Same as UnLoadVerify_EDOC with FALSE to prompt save.
//
// Available   5.0
//-----------------------------------------------------------------------------------------------------------

[_public_app] void UnLoad_EDOC(string,   // Name of document to unload
                               int);     // EDOC_TYPE


  
//-----------------------------------------------------------------------------------------------------------
// UnLoadAll_EDOC Unloads all opened documents
//
// Available      5.0
//-----------------------------------------------------------------------------------------------------------

[_public_app] void UnLoadAll_EDOC(int);  // EDOC_TYPE


  
//-----------------------------------------------------------------------------------------------------------
// UnLoadDiscard_EDOC Unloads a document in the workspace, discards changes.
//
// Notes              If the document is not loaded, nothing happens.
//
// Available          5.0
//-----------------------------------------------------------------------------------------------------------

[_public_app] void UnLoadDiscard_EDOC(string,   // Name of document to unload
                                      int);     // EDOC_TYPE


  
//-----------------------------------------------------------------------------------------------------------
// UnLoadVerify_EDOC Unloads an edited document, optional prompt to save.
//
// Notes             If the document is not loaded, nothing happens.
//                   The user can be prompted to save before unloading.
//                   If EDOC_UNLOAD_NO_PROMPT, data is always saved.
//
// Available         5.0
//-----------------------------------------------------------------------------------------------------------

[_public_app] void UnLoadVerify_EDOC(string,   // Name of document to unload
                                     int,      // EDOC_UNLOAD
                                     int);     // EDOC_TYPE



//===========================================================================================================
//
// Deprecated Functions
//
//===========================================================================================================


  
//-----------------------------------------------------------------------------------------------------------
// GetWindowArea_EDOC Get the location of the document window within the frame.
//
// Notes              The Coordinates are pixels with 0,0 being the bottom
//                    left corner Oasis montaj frame window.
//                    
//                    If the window is minimized, the max values will be
//                    equal to the min values. If the window is maximized
//                    X Min and Y min will be iMIN and X max and Y max
//                    will be iMAX.
//
// Available          5.0
//-----------------------------------------------------------------------------------------------------------

[_public_app] void GetWindowArea_EDOC(EDOC,      //
                                      var int,   // X Min returned
                                      var int,   // Y Min returned
                                      var int,   // X Max returned
                                      var int);  // Y Max returned


  
//-----------------------------------------------------------------------------------------------------------
// SetWindowArea_EDOC Set the location of the document window within the frame.
//
// Notes              The Coordinates are pixels with 0,0 being the bottom
//                    left corner Oasis montaj frame window.
//                    
//                    if the max values are equal or less than the min values
//                    the window will be mimimized. If any Min values are iMIN
//                    or any Max values are iMAX, the window is maximized.
//
// Available          5.0
//-----------------------------------------------------------------------------------------------------------

[_public_app] void SetWindowArea_EDOC(EDOC,   //
                                      int,    // X Min
                                      int,    // Y Min
                                      int,    // X Max
                                      int);   // Y Max


  
//-----------------------------------------------------------------------------------------------------------
// iCopy_EDOC Copies a managed document to another document.
//
// Notes      Copies a managed document to another document.
//
// Available  2022.1
//-----------------------------------------------------------------------------------------------------------

[_public_app] int iCopy_EDOC(EDOC,     //
                             string);  // Name of output document


  
//-----------------------------------------------------------------------------------------------------------
// Save_EDOC Save the managed document.
//
// Notes     Save the managed document
//
// Available 2022.1
//-----------------------------------------------------------------------------------------------------------

[_public_app] void Save_EDOC(EDOC);  //





//*** endblock Generated


#endif
