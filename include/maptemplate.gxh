//*** extends 'class_empty.gxh'

#ifndef HMAPTEMPLATE_GXH_DEFINED
#define HMAPTEMPLATE_GXH_DEFINED

//*** block Header
// NOTICE: Do not edit anything here, it is generated code
//===========================================================================================================
//
// Class MAPTEMPLATE
//
//-----------------------------------------------------------------------------------------------------------
//
// A MAPTEMPLATE wraps and provides manipulation and usage for the XML content in map template files.
// See the annotated schema file maptemplate.xsd in the <GEOSOFT>\maptemplate folder and the accompanying
// documentation in that folder for documentation on the file format.
//
//-----------------------------------------------------------------------------------------------------------



//*** endblock Header

//*** block Editable
// NOTICE: The code generator will not replace the code in this block
//*** endblock Editable

//*** block Generated
// NOTICE: Do not edit anything here, it is generated code


//===========================================================================================================
//
// MAPTEMPLATE_OPEN Definitions
//
// Open Modes
//
// MAPTEMPLATE_WRITENEW
// Create new empty map template (will overwrite existing files)
//
// MAPTEMPLATE_EXIST
// Create from existing template on disk
//
//===========================================================================================================


#define MAPTEMPLATE_WRITENEW 0
#define MAPTEMPLATE_EXIST 1





//===========================================================================================================
//
// Content Manipulation Methods Functions
//
//===========================================================================================================


  
//-----------------------------------------------------------------------------------------------------------
// GetTmpCopy_MAPTEMPLATE Get a temporary XML file for manipulation of the map template.
//
// Notes                  After manipulating contents the object may be updated by a call to
//                        the UpdateFromTmpCopy method.
//
// Available              6.3
//-----------------------------------------------------------------------------------------------------------

[_licensed] void GetTmpCopy_MAPTEMPLATE(MAPTEMPLATE,   //
                                        var string,    // Returned temporary map template file name
                                        int);          // Size of file name string
#define _GetTmpCopy_MAPTEMPLATE(maptemplate, tmp) GetTmpCopy_MAPTEMPLATE(maptemplate, tmp, sizeof(tmp))


  
//-----------------------------------------------------------------------------------------------------------
// UpdateFromTmpCopy_MAPTEMPLATE Update the object contents from a temporary XML file that may have bee manipulated externally.
//
// Notes                         This method will not modify the original contents of the file until a call to the
//                               the Commit method is made or the object is destroyed. A call to the Discard method
//                               will restore the contents to that of the original file. The temporary file is not deleted
//                               and should be to not leak file resources.
//
// Available                     6.3
//-----------------------------------------------------------------------------------------------------------

[_licensed] void UpdateFromTmpCopy_MAPTEMPLATE(MAPTEMPLATE,   //
                                               string);       // Temporary map template file name



//===========================================================================================================
//
// File Methods Functions
//
//===========================================================================================================


  
//-----------------------------------------------------------------------------------------------------------
// Commit_MAPTEMPLATE Commit any changes to the map template to disk
//
// Available          6.3
//-----------------------------------------------------------------------------------------------------------

[_licensed] void Commit_MAPTEMPLATE(MAPTEMPLATE);  //


  
//-----------------------------------------------------------------------------------------------------------
// Create_MAPTEMPLATE Create a MAPTEMPLATE from an existing file.
//
// Returns            MAPTEMPLATE Object
//
// Notes              The base template name should be the file name part of a geosoft_maptemplate
//                    file in the <geosoft>\maptemplate or <geosoftuser>\maptemplate folders. A base file
//                    in the user folder will override any in the Geosoft install dir.
//
// Available          6.3
//-----------------------------------------------------------------------------------------------------------

[_public] MAPTEMPLATE Create_MAPTEMPLATE(string,   // Map Template file name
                                         string,   // Map Template base template to create from
                                         int);     // MAPTEMPLATE_OPEN


  
//-----------------------------------------------------------------------------------------------------------
// Destroy_MAPTEMPLATE Destroy the MAPTEMPLATE handle.
//
// Notes               All changes to the MAPTEMPLATE will be committed if it is not read-only.
//
// Available           6.3
//-----------------------------------------------------------------------------------------------------------

[_public] void Destroy_MAPTEMPLATE(MAPTEMPLATE);  // MAPTEMPLATE Handle


  
//-----------------------------------------------------------------------------------------------------------
// Discard_MAPTEMPLATE Discard all changes made to the map template and reload from disk.
//
// Available           6.3
//-----------------------------------------------------------------------------------------------------------

[_licensed] void Discard_MAPTEMPLATE(MAPTEMPLATE);  //


  
//-----------------------------------------------------------------------------------------------------------
// GetFileName_MAPTEMPLATE Get the file name of the map template.
//
// Available               6.3
//-----------------------------------------------------------------------------------------------------------

[_licensed] void GetFileName_MAPTEMPLATE(MAPTEMPLATE,   //
                                         var string,    // Returned map template file name
                                         int);          // Size of file name string
#define _GetFileName_MAPTEMPLATE(maptemplate, name) GetFileName_MAPTEMPLATE(maptemplate, name, sizeof(name))



//===========================================================================================================
//
// Map Making Functions
//
//===========================================================================================================


  
//-----------------------------------------------------------------------------------------------------------
// CreateMap_MAPTEMPLATE Create a map from the map template
//
// Available             6.3
//-----------------------------------------------------------------------------------------------------------

[_licensed] void CreateMap_MAPTEMPLATE(MAPTEMPLATE,   // MAPTEMPLATE Handle
                                       string,        // New map file name (if it exists it will be overwritten)
                                       string);       // Group name to use for settings



//===========================================================================================================
//
// Render/Preview Functions
//
//===========================================================================================================


  
//-----------------------------------------------------------------------------------------------------------
// Refresh_MAPTEMPLATE Refresh the map template with any newly saved items
//
// Available           7.0
//-----------------------------------------------------------------------------------------------------------

[_licensed] void Refresh_MAPTEMPLATE(MAPTEMPLATE);  // MAPTEMPLATE Handle



//===========================================================================================================
//
// Miscellaneous Functions
//
//===========================================================================================================


  
//-----------------------------------------------------------------------------------------------------------
// GetMediaSize_MAPTEMPLATE Get full width, full height, plot width and plot height in cm for a specific media or template name
//
// Notes                    The user 'media.csv' file is searched first. If the name is not found
//                          then the 'maptmpl.csv' file is searched, and if a template name is matched
//                          the sizes of the associated media name are returned.
//                          If a template is specified, the orientation is taken into account for the media.
//
// Available                2023.2
//-----------------------------------------------------------------------------------------------------------

[_licensed] void GetMediaSize_MAPTEMPLATE(string,     // Page size name
                                          var real,   // Full width of page in cm (`rDUMMY` if name not found)
                                          var real,   // Full height of page in cm (`rDUMMY` if name not found)
                                          var real,   // Plot width of page in cm (`rDUMMY` if name not found)
                                          var real);  // Plot height of page in cm (`rDUMMY` if name not found)





//*** endblock Generated


#endif
