//*** extends 'class_empty.gxh'

#ifndef HGUI_GXH_DEFINED
#define HGUI_GXH_DEFINED

//*** block Header
// NOTICE: Do not edit anything here, it is generated code
//===========================================================================================================
//
// Class GUI
//
//-----------------------------------------------------------------------------------------------------------
//
// These are graphical functions that typically create a
// dialog-style window for a specific function. Examples include
// file import wizards, and the Histogram and Scatter tools.
//
//-----------------------------------------------------------------------------------------------------------



//*** endblock Header

//*** block Editable
// NOTICE: The code generator will not replace the code in this block


#define ImportChemDatabase_GUI(A,B,C,D) {if (iImportChemDatabase_GUI(A,B,C,sizeof(C),D) Cancel_SYS();}	  
#define ImportChemDatabaseADO_GUI(A,B,C,D) {if (iImportChemDatabaseADO_GUI(A,B,C,sizeof(C),D)) Cancel_SYS();}
#define ImportDrillDatabaseADO_GUI(A,B,C,D,E) {if (iImportDrillDatabaseADO_GUI(A,B,C,sizeof(C),D,E)) Cancel_SYS();}
#define ImportDatabase_GUI(A,B,C) {if (iImportDatabase_GUI(A,B,C,sizeof(C))) Cancel_SYS();}
#define ImportDatabaseADO_GUI(A,B,C) {if (iImportDatabaseADO_GUI(A,B,C,sizeof(C))) Cancel_SYS();}
#define ImportDatabaseSQL_GUI(A,B,C,D) {if (iImportDatabaseSQL_GUI(A,B,C,D,sizeof(D))) Cancel_SYS();}
#define ImportDatabaseSQLADO_GUI(A,B,C,D) {if (iImportDatabaseSQLADO_GUI(A,B,C,D,sizeof(D))) Cancel_SYS();}
#define ImportTemplateSQL_GUI(A,B,C,D) {if (iImportTemplateSQL_GUI(A,B,C,D)) Cancel_SYS();}
#define ImportTemplateSQLADO_GUI(A,B,C,D) {if (iImportTemplateSQLADO_GUI(A,B,C,D)) Cancel_SYS();}
#define DatabaseType_GUI(A,B) {if (iDatabaseType_GUI(A,B,sizeof(B)) Cancel_SYS();}

#define iFileOpen_GUI(A,B,C,D)          IiGenFileForm_GUI(A,(VV) 0,B,C,D,sizeof(D),FILE_FORM_OPEN,FALSE)
#define iMultiFileOpen_GUI(A,B,C,D)     IiGenFileForm_GUI(A,(VV) 0,B,C,D,sizeof(D),FILE_FORM_OPEN,TRUE)
#define iFileSave_GUI(A,B,C,D)          IiGenFileForm_GUI(A,(VV) 0,B,C,D,sizeof(D),FILE_FORM_SAVE,FALSE)
#define iMultiFileSave_GUI(A,B,C,D)     IiGenFileForm_GUI(A,(VV) 0,B,C,D,sizeof(D),FILE_FORM_SAVE,TRUE)


//*** endblock Editable

//*** block Generated
// NOTICE: Do not edit anything here, it is generated code


//===========================================================================================================
//
// AOI_RETURN_STATE Definitions
//
// AOI query return state
//
// AOI_RETURN_CANCEL
// User canceled
//
// AOI_RETURN_NODEFINE
// User chose to continue with no AOI defined or available
//
// AOI_RETURN_DEFINE
// User chose to continue and defined valid AOI parameters
//
//===========================================================================================================


#define AOI_RETURN_CANCEL -1
#define AOI_RETURN_NODEFINE 0
#define AOI_RETURN_DEFINE 1


//===========================================================================================================
//
// COORDSYS_MODE Definitions
//
// Coordinate system wizard IPJ types allowed on return.
// The wizard present three types of projections for selection
// by the user, Geographic (GCS), Projected (PCS), and Unknown.
// (Unknown requires only that the units be defined.)
// The Editable flag must be Yes for this option to take affect,
// and is overridden internally if the user's license does not
// allow modification of projections (e.g. the OM Viewer).
//
// COORDSYS_MODE_ALL
// Allow Geographic (GCS), Projected (PCS), and Unknown
//
// COORDSYS_MODE_GCS
// Allow only Geographic (GCS)
//
// COORDSYS_MODE_PCS
// Allow only Projected (PCS)
//
// COORDSYS_MODE_GCS_PCS
// Allow only Geographic (GCS) and Projected (PCS)
//
// COORDSYS_MODE_PCS_UNKNOWN
// Allow only Projected (PCS), or Unknown
//
//===========================================================================================================


#define COORDSYS_MODE_ALL 0
#define COORDSYS_MODE_GCS 1
#define COORDSYS_MODE_PCS 2
#define COORDSYS_MODE_GCS_PCS 3
#define COORDSYS_MODE_PCS_UNKNOWN 4


//===========================================================================================================
//
// DAT_TYPE Definitions
//
// Type of files (grids, images) to support
//
// DAT_TYPE_GRID
// Display only grid formats
//
// DAT_TYPE_IMAGE
// Display only image formats
//
// DAT_TYPE_GRID_AND_IMAGE
// Displays both grids and image formats
//
//===========================================================================================================


#define DAT_TYPE_GRID 0
#define DAT_TYPE_IMAGE 1
#define DAT_TYPE_GRID_AND_IMAGE 2


//===========================================================================================================
//
// FILE_FILTER Definitions
//
// File filters
//
// FILE_FILTER_ALL
// All files              *.*                  ANYWHERE
//
// FILE_FILTER_GDB
// Geosoft Database       *.gdb                LOCAL
//
// FILE_FILTER_GX
// Geosoft Executable     *.gx                 GEOSOFT
//
// FILE_FILTER_GS
// Geosoft Script         *.gs                 BOTH
//
// FILE_FILTER_INI
// Parameter files        *.ini                GEOSOFT
//
// FILE_FILTER_OMN
// Oasis Menu files       *.omn                GEOSOFT
//
// FILE_FILTER_VU
// Oasis View files       *.vu                 LOCAL
//
// FILE_FILTER_MAP
// Oasis Map files        *.map                LOCAL
//
// FILE_FILTER_PRJ
// Projection file        *.prj                LOCAL
//
// FILE_FILTER_CON
// Configuration file     *.con                LOCAL
//
// FILE_FILTER_MNU
// Sushi MNU files        *.mnu                GEOSOFT
//
// FILE_FILTER_PDF
// PDF files              *.pdf                GEOSOFT
//
// FILE_FILTER_PLT
// Geosoft PLT files      *.plt                LOCAL
//
// FILE_FILTER_GWS
// Geosoft workspace      *.gws                LOCAL
//
// FILE_FILTER_AGG
// Aggregate              *.agg                LOCAL
//
// FILE_FILTER_TBL
// Color table            *.tbl                GEOSOFT
//
// FILE_FILTER_ZON
// Zone                   *.zon                LOCAL
//
// FILE_FILTER_ITR
// Image transform        *.itr                LOCAL
//
// FILE_FILTER_DXF
// AutoCAD DXF files      *.dxf                LOCAL
//
// FILE_FILTER_TIF
// TIFF files             *.tif                LOCAL
//
// FILE_FILTER_EMF
// Enhanced Metafies      *.emf                LOCAL
//
// FILE_FILTER_BMP
// Bitmap files           *.bmp                LOCAL
//
// FILE_FILTER_LUT
// ER Mapper LUT          *.lut                GEOSOFT
//
// FILE_FILTER_PNG
// PNG files              *.png                LOCAL
//
// FILE_FILTER_JPG
// JPG files              *.jpg                LOCAL
//
// FILE_FILTER_PCX
// PCX files              *.pcx                LOCAL
//
// FILE_FILTER_GIF
// GIF files              *.gif                LOCAL
//
// FILE_FILTER_GRD
// GRD files              *.grd                LOCAL
//
// FILE_FILTER_ERS
// ERS files              *.ers                LOCAL
//
// FILE_FILTER_EPS
// EPS files              *.eps                LOCAL
//
// FILE_FILTER_SHP
// ArcView Shape files    *.shp                LOCAL
//
// FILE_FILTER_CGM
// CGM files              *.cgm                LOCAL
//
// FILE_FILTER_TAB
// MapInfo Tab files      *.tab                LOCAL
//
// FILE_FILTER_COMPS
// Software Components    Components           LOCAL
//
// FILE_FILTER_CSV
// MapInfo Tab files      *.tab                LOCAL
//
// FILE_FILTER_GPF
// Geosoft Project        *.gpf                LOCAL
//
// FILE_FILTER_PLY
// Geosoft Polygons       *.ply                LOCAL
//
// FILE_FILTER_STM
// Scatter templates      *.stm                LOCAL
//
// FILE_FILTER_TTM
// Triplot templates      *.ttm                LOCAL
//
// FILE_FILTER_XYZ
// Geosoft XYZ files      *.xyz                LOCAL
//
// FILE_FILTER_BAR
// Geosoft Bar file       *.geobar             LOCAL
//
// FILE_FILTER_GEOSOFT_LICENSE
// Geosoft License files   *.geosoft_license   LOCAL
//
// FILE_FILTER_XML
// XML files              *.xml                LOCAL
//
// FILE_FILTER_GXNET
// GX.NET files           *.dll                GEOSOFT
//
// FILE_FILTER_ECW
// ECW files              *.ecw                LOCAL
//
// FILE_FILTER_J2K
// J2K JPEG 2000 files    *.j2k                LOCAL
//
// FILE_FILTER_JP2
// JP2 JPEG 2000 files    *.jp2                LOCAL
//
// FILE_FILTER_SEL
// acQuire parameters     *.sel                LOCAL
//
// FILE_FILTER_SVG
// SVG file               *.svg                LOCAL
//
// FILE_FILTER_SVZ
// SVG Compressed file    *.svz                LOCAL
//
// FILE_FILTER_WRP
// Warp file              *.wrp                LOCAL
//
// FILE_FILTER_MAPPLOT
// MAPPLOT file           *.con                LOCAL
//
// FILE_FILTER_DTM
// Surpac DTM files       *.dtm                LOCAL
//
// FILE_FILTER_VOXEL
// Geosoft Voxel          *.geosoft_voxel      LOCAL
//
// FILE_FILTER_MAPTEMPLATE
// Map Template file      *.geosoft_maptemplate      LOCAL
//
// FILE_FILTER_ACTION
// Action Scripts         *.action             LOCAL
//
// FILE_FILTER_DM
// Datamine files         *.dm                 LOCAL
//
// FILE_FILTER_KML
// Google Earth KML       *.kml                LOCAL
//
// FILE_FILTER_KMZ
// Google Earth Compressed KML  *.kmz          LOCAL
//
// FILE_FILTER_TARGET_PLAN
// Target parameter ini file for plans      *.inp    LOCAL
//
// FILE_FILTER_TARGET_SECTION
// Target parameter ini file for sections   *.ins    LOCAL
//
// FILE_FILTER_TARGET_STRIPLOG
// Target parameter ini file for strip logs *.inl    LOCAL
//
// FILE_FILTER_TARGET_3D
// Target parameter ini file for 3D plots   *.in3    LOCAL
//
// FILE_FILTER_ARGIS_LYR
// ArcGIS Layer files			 *.lyr    LOCAL
//
// FILE_FILTER_ARGIS_MXD
// ArcGIS Map Document files	 *.mxd    LOCAL
//
// FILE_FILTER_GOCAD_TS
// GOCAD TSurf files			 *.ts     LOCAL
//
// FILE_FILTER_LST
// Geosoft list of items: names, values  *.lst     LOCAL
//
// FILE_FILTER_ECS
// GM-SYS external coordinate system     *.ecs     LOCAL
//
// FILE_FILTER_TARGET_FENCE
// Target parameter ini file for fence sections   *.ins    LOCAL
//
// FILE_FILTER_GMS3D
// GM-SYS 3D model   *.geosoft_gmsys3d    LOCAL
//
// FILE_FILTER_BT2
// GEMCOM BT2 *.bt2 LOCAL
//
// FILE_FILTER_BPR
// GEMCOM BPR *.bpr LOCAL
//
// FILE_FILTER_BPR2
// GEMCOM BPR2 *.bpr2 LOCAL
//
// FILE_FILTER_XLS
// Excel 97-2003 workbook		*.xls					LOCAL
//
// FILE_FILTER_XLSX
// Excel 2007 workbook 			*.xlsx				LOCAL
//
// FILE_FILTER_MDB
// Access 97-2003  				*.mdb 				LOCAL
//
// FILE_FILTER_ACCDB
// Access 2007 					*.accdb 				LOCAL
//
// FILE_FILTER_INTERSECTION_TBL
// Levelling intersection		*.tbl					LOCAL
//
// FILE_FILTER_UBC_CON
// UBC DCIP2D Conductivity model files *.con		LOCAL
//
// FILE_FILTER_UBC_CHG
// UBC DCIP2D Chargeability model files *.chg	LOCAL
//
// FILE_FILTER_UBC_MSH
// UBC DCIP2D Mesh files		*.msh					LOCAL
//
// FILE_FILTER_UBC_MSH_DAT
// UBC DCIP2D Mesh files		*.dat					LOCAL
//
// FILE_FILTER_UBC_TOPO_DAT
// UBC DCIP2D Topo files		*.dat					LOCAL
//
// FILE_FILTER_UBC_TOPO_XYZ
// UBC DCIP2D Topo files		*.xyz					LOCAL
//
// FILE_FILTER_XYZ_TEMPLATE_I0
// XYZ Import Templates		      *.i0				LOCAL
//
// FILE_FILTER_PICO_TEMPLATE_I1
// Picodas Import Templates      *.i1				LOCAL
//
// FILE_FILTER_BB_TEMPLATE_I2
// Block Binary Import Templates *.i2				LOCAL
//
// FILE_FILTER_ASCII_TEMPLATE_I3
// ASCII Import Templates		   *.i3				LOCAL
//
// FILE_FILTER_ODBC_TEMPLATE_I4
// ODBC Import Templates		   *.i4				LOCAL
//
// FILE_FILTER_EXP
// Math expression files		   *.exp  			LOCAL
//
// FILE_FILTER_SEGY
// SEG-Y files							*.sgy  			LOCAL
//
// FILE_FILTER_DAARC500
// DAARC500 files						xYYMMDD 		   LOCAL
//
// FILE_FILTER_TXT
// Text files							*.txt  			LOCAL
//
// FILE_FILTER_VOXEL_INVERSION
// Voxi									*.geosoft_voxi	LOCAL
//
// FILE_FILTER_GMS
// GM-SYS Profile model file		*.gms	LOCAL
//
// FILE_FILTER_FLT3D
// Geosoft 3D filter files			*.flt3d			LOCAL
//
// FILE_FILTER_RESOURCE_PACK
// Geosoft Resource Update Packages *.geosoft_resource_pack LOCAL
//
// FILE_FILTER_GEOSTRING
// Geostring files *.geosoft_string LOCAL
//
// FILE_FILTER_GEOSURFACE
// Geosurface files *.geosoft_surface LOCAL
//
// FILE_FILTER_GEOSOFT3DV
// Geosoft 3DV *.geosoft_3dv LOCAL
//
// FILE_FILTER_VECTORVOXEL
// Geosoft Vector Voxel *.geosoft_vectorvoxel LOCAL
//
// FILE_FILTER_FLT
// Geosoft Filters *.flt LOCAL
//
// FILE_FILTER_XYZ_TEMPLATE_O0
// XYZ Export Templates *.o0 LOCAL
//
// FILE_FILTER_GMS2D
// GM-SYS Profile model    *.geosoft_gmsys2d   LOCAL
//
// FILE_FILTER_IP_DATABASE_TEMPLATE
// IP Database Template *.geosoft_ipdatabasetemplate LOCAL
//
// FILE_FILTER_GEOSOFT_RESOURCE_MODULE
// Geosoft Resource Module *.geosoft_resources  LOCAL
//
// FILE_FILTER_VT
// Shell VT files     *.vt        LOCAL
//
// FILE_FILTER_INT
// Shell INT files     *.int      LOCAL
//
// FILE_FILTER_SGT
// Shell SGT files     *.sgt      LOCAL
//
// FILE_FILTER_IMGVIEW
// Image Viewer files  *.imgview  LOCAL
//
// FILE_FILTER_ZIP
// Zip files  *.zip  LOCAL
//
// FILE_FILTER_GPS_TABLE
// GPS Table *.tbl GEOSOFT
//
// FILE_FILTER_VULCAN_TRIANGULATION
// Maptek Vulcan trianguilation file   *.tbl     LOCAL
//
// FILE_FILTER_VULCAN_BLOCK_MODEL
// Maptek Vulcan block model file       *.bmf                        LOCAL
//
// FILE_FILTER_PRJVIEW
// Layout files  *.prjview  LOCAL
//
// FILE_FILTER_LEAPFROG_MODEL
// Leapfrog model files  *.lfm  LOCAL
//
// FILE_FILTER_IOGAS
// Reflex ioGAS files  *.gas  LOCAL
//
// FILE_FILTER_ASEG_ESF
// ASEG ESF file  *.esf  LOCAL
//
// FILE_FILTER_LACOSTE_DAT
// Micro-g LaCoste MGS-6 gravity files  *.:class:`DAT`  LOCAL
//
// FILE_FILTER_VAR
// Geosoft variogram file  *.var  LOCAL
//
// FILE_FILTER_P190
// UKOOA data exchange file  *.p190  LOCAL
//
// FILE_FILTER_UBC_OBS_DAT
// UBC observation files *.dat		LOCAL
//
// FILE_FILTER_UBC_LOC
// UBC location files *.loc		LOCAL
//
// FILE_FILTER_UBC_MOD
// UBC model files *.mod		LOCAL
//
// FILE_FILTER_UBC_DEN
// UBC density model files *.den		LOCAL
//
// FILE_FILTER_UBC_SUS
// UBC susceptibility model files *.sus		LOCAL
//
// FILE_FILTER_GOCAD_VOXET
// GOCAD voxet files *.vo		LOCAL
//
// FILE_FILTER_SCINTREX_DAT
// Scintrex gravity files  *.dat`  LOCAL
//
// FILE_FILTER_DMP
// Dump files  *.dmp`  LOCAL
//
// FILE_FILTER_RAW
// Geosoft RAW gravity files  *.raw`  LOCAL
//
// FILE_FILTER_DAT
// Data files  *.dat`  LOCAL
//
// FILE_FILTER_OMF
// OMF files  *.omf`  LOCAL
//
// FILE_FILTER_3DSURVEY
// 3d survey files  *.3dSurvey`  LOCAL
//
// FILE_FILTER_ARGIS_LYRX
// ArcGIS LayerX files  *.lyrx  LOCAL
//
// FILE_FILTER_ARGIS_STYLX
// ArcGIS Stylx files  *.stylx  LOCAL
//
//===========================================================================================================


#define FILE_FILTER_ALL 1
#define FILE_FILTER_GDB 2
#define FILE_FILTER_GX 3
#define FILE_FILTER_GS 4
#define FILE_FILTER_INI 5
#define FILE_FILTER_OMN 6
#define FILE_FILTER_VU 7
#define FILE_FILTER_MAP 8
#define FILE_FILTER_PRJ 9
#define FILE_FILTER_CON 10
#define FILE_FILTER_MNU 11
#define FILE_FILTER_PDF 12
#define FILE_FILTER_PLT 13
#define FILE_FILTER_GWS 14
#define FILE_FILTER_AGG 15
#define FILE_FILTER_TBL 16
#define FILE_FILTER_ZON 17
#define FILE_FILTER_ITR 18
#define FILE_FILTER_DXF 19
#define FILE_FILTER_TIF 20
#define FILE_FILTER_EMF 21
#define FILE_FILTER_BMP 22
#define FILE_FILTER_LUT 23
#define FILE_FILTER_PNG 24
#define FILE_FILTER_JPG 25
#define FILE_FILTER_PCX 26
#define FILE_FILTER_GIF 27
#define FILE_FILTER_GRD 28
#define FILE_FILTER_ERS 29
#define FILE_FILTER_EPS 30
#define FILE_FILTER_SHP 31
#define FILE_FILTER_CGM 32
#define FILE_FILTER_TAB 33
#define FILE_FILTER_COMPS 34
#define FILE_FILTER_CSV 35
#define FILE_FILTER_GPF 36
#define FILE_FILTER_PLY 37
#define FILE_FILTER_STM 38
#define FILE_FILTER_TTM 39
#define FILE_FILTER_XYZ 40
#define FILE_FILTER_BAR 41
#define FILE_FILTER_GEOSOFT_LICENSE 42
#define FILE_FILTER_XML 43
#define FILE_FILTER_GXNET 44
#define FILE_FILTER_ECW 45
#define FILE_FILTER_J2K 46
#define FILE_FILTER_JP2 47
#define FILE_FILTER_SEL 48
#define FILE_FILTER_SVG 49
#define FILE_FILTER_SVZ 50
#define FILE_FILTER_WRP 51
#define FILE_FILTER_MAPPLOT 52
#define FILE_FILTER_DTM 53
#define FILE_FILTER_VOXEL 54
#define FILE_FILTER_MAPTEMPLATE 55
#define FILE_FILTER_ACTION 56
#define FILE_FILTER_DM 57
#define FILE_FILTER_KML 58
#define FILE_FILTER_KMZ 59
#define FILE_FILTER_TARGET_PLAN 60
#define FILE_FILTER_TARGET_SECTION 61
#define FILE_FILTER_TARGET_STRIPLOG 62
#define FILE_FILTER_TARGET_3D 63
#define FILE_FILTER_ARGIS_LYR 64
#define FILE_FILTER_ARGIS_MXD 65
#define FILE_FILTER_GOCAD_TS 66
#define FILE_FILTER_LST 67
#define FILE_FILTER_ECS 68
#define FILE_FILTER_TARGET_FENCE 69
#define FILE_FILTER_GMS3D 70
#define FILE_FILTER_BT2 71
#define FILE_FILTER_BPR 72
#define FILE_FILTER_BPR2 73
#define FILE_FILTER_XLS 74
#define FILE_FILTER_XLSX 75
#define FILE_FILTER_MDB 76
#define FILE_FILTER_ACCDB 77
#define FILE_FILTER_INTERSECTION_TBL 78
#define FILE_FILTER_UBC_CON 79
#define FILE_FILTER_UBC_CHG 80
#define FILE_FILTER_UBC_MSH 81
#define FILE_FILTER_UBC_MSH_DAT 82
#define FILE_FILTER_UBC_TOPO_DAT 83
#define FILE_FILTER_UBC_TOPO_XYZ 84
#define FILE_FILTER_XYZ_TEMPLATE_I0 85
#define FILE_FILTER_PICO_TEMPLATE_I1 86
#define FILE_FILTER_BB_TEMPLATE_I2 87
#define FILE_FILTER_ASCII_TEMPLATE_I3 88
#define FILE_FILTER_ODBC_TEMPLATE_I4 89
#define FILE_FILTER_EXP 90
#define FILE_FILTER_SEGY 91
#define FILE_FILTER_DAARC500 92
#define FILE_FILTER_TXT 93
#define FILE_FILTER_VOXEL_INVERSION 94
#define FILE_FILTER_GMS 95
#define FILE_FILTER_FLT3D 96
#define FILE_FILTER_RESOURCE_PACK 97
#define FILE_FILTER_GEOSTRING 98
#define FILE_FILTER_GEOSURFACE 99
#define FILE_FILTER_GEOSOFT3DV 100
#define FILE_FILTER_VECTORVOXEL 101
#define FILE_FILTER_FLT 102
#define FILE_FILTER_XYZ_TEMPLATE_O0 103
#define FILE_FILTER_GMS2D 104
#define FILE_FILTER_IP_DATABASE_TEMPLATE 105
#define FILE_FILTER_GEOSOFT_RESOURCE_MODULE 106
#define FILE_FILTER_VT 107
#define FILE_FILTER_INT 108
#define FILE_FILTER_SGT 109
#define FILE_FILTER_IMGVIEW 110
#define FILE_FILTER_ZIP 111
#define FILE_FILTER_GPS_TABLE 112
#define FILE_FILTER_VULCAN_TRIANGULATION 113
#define FILE_FILTER_VULCAN_BLOCK_MODEL 114
#define FILE_FILTER_PRJVIEW 115
#define FILE_FILTER_LEAPFROG_MODEL 116
#define FILE_FILTER_IOGAS 117
#define FILE_FILTER_ASEG_ESF 118
#define FILE_FILTER_LACOSTE_DAT 119
#define FILE_FILTER_VAR 120
#define FILE_FILTER_P190 121
#define FILE_FILTER_UBC_OBS_DAT 122
#define FILE_FILTER_UBC_LOC 123
#define FILE_FILTER_UBC_MOD 124
#define FILE_FILTER_UBC_DEN 125
#define FILE_FILTER_UBC_SUS 126
#define FILE_FILTER_GOCAD_VOXET 127
#define FILE_FILTER_SCINTREX_DAT 128
#define FILE_FILTER_DMP 129
#define FILE_FILTER_RAW 130
#define FILE_FILTER_DAT 131
#define FILE_FILTER_OMF 132
#define FILE_FILTER_3DSURVEY 133
#define FILE_FILTER_ARGIS_LYRX 134
#define FILE_FILTER_ARGIS_STYLX 135


//===========================================================================================================
//
// FILE_FORM Definitions
//
// File Form Defines
//
// FILE_FORM_OPEN
// Open a file
//
// FILE_FORM_SAVE
// Save a file
//
//===========================================================================================================


#define FILE_FORM_OPEN 0
#define FILE_FORM_SAVE 1


//===========================================================================================================
//
// GS_DIRECTORY Definitions
//
// Geosoft predefined directory
//
// GS_DIRECTORY_NONE
// 
//
// GS_DIRECTORY_GEOSOFT
// 
//
// GS_DIRECTORY_BIN
// 
//
// GS_DIRECTORY_GER
// 
//
// GS_DIRECTORY_OMN
// 
//
// GS_DIRECTORY_TBL
// 
//
// GS_DIRECTORY_FONTS
// 
//
// GS_DIRECTORY_GX
// 
//
// GS_DIRECTORY_GS
// 
//
// GS_DIRECTORY_APPS
// 
//
// GS_DIRECTORY_ETC
// 
//
// GS_DIRECTORY_HLP
// 
//
// GS_DIRECTORY_GXDEV
// 
//
// GS_DIRECTORY_COMPONENT
// 
//
// GS_DIRECTORY_CSV
// 
//
// GS_DIRECTORY_LIC
// 
//
// GS_DIRECTORY_INI
// 
//
// GS_DIRECTORY_TEMP
// 
//
// GS_DIRECTORY_UETC
// 
//
// GS_DIRECTORY_UMAPTEMPLATE
// 
//
// GS_DIRECTORY_COMPONENT_SCRIPTS
// 
//
// GS_DIRECTORY_COMPONENT_HTML
// 
//
// GS_DIRECTORY_IMG
// 
//
// GS_DIRECTORY_BAR
// 
//
// GS_DIRECTORY_GXNET
// 
//
// GS_DIRECTORY_MAPTEMPLATE
// 
//
//===========================================================================================================


#define GS_DIRECTORY_NONE 0
#define GS_DIRECTORY_GEOSOFT 1
#define GS_DIRECTORY_BIN 2
#define GS_DIRECTORY_GER 3
#define GS_DIRECTORY_OMN 4
#define GS_DIRECTORY_TBL 5
#define GS_DIRECTORY_FONTS 6
#define GS_DIRECTORY_GX 7
#define GS_DIRECTORY_GS 8
#define GS_DIRECTORY_APPS 9
#define GS_DIRECTORY_ETC 10
#define GS_DIRECTORY_HLP 11
#define GS_DIRECTORY_GXDEV 12
#define GS_DIRECTORY_COMPONENT 13
#define GS_DIRECTORY_CSV 14
#define GS_DIRECTORY_LIC 15
#define GS_DIRECTORY_INI 16
#define GS_DIRECTORY_TEMP 17
#define GS_DIRECTORY_UETC 18
#define GS_DIRECTORY_UMAPTEMPLATE 19
#define GS_DIRECTORY_COMPONENT_SCRIPTS 50
#define GS_DIRECTORY_COMPONENT_HTML 51
#define GS_DIRECTORY_IMG 52
#define GS_DIRECTORY_BAR 53
#define GS_DIRECTORY_GXNET 54
#define GS_DIRECTORY_MAPTEMPLATE 55


//===========================================================================================================
//
// IMPCH_TYPE Definitions
//
// Import Chem defines
//
// IMPCH_TYPE_DATA
// 
//
// IMPCH_TYPE_ASSAY
// 
//
//===========================================================================================================


#define IMPCH_TYPE_DATA 0
#define IMPCH_TYPE_ASSAY 1


//===========================================================================================================
//
// WINDOW_STATE Definitions
//
// Window State Options
//
// WINDOW_RESTORE
// 
//
// WINDOW_MINIMIZE
// 
//
// WINDOW_MAXIMIZE
// 
//
//===========================================================================================================


#define WINDOW_RESTORE 0
#define WINDOW_MINIMIZE 1
#define WINDOW_MAXIMIZE 2


//===========================================================================================================
//
// XTOOL_ALIGN Definitions
//
// XTool docking alignment flags
//
// XTOOL_ALIGN_LEFT
// 
//
// XTOOL_ALIGN_TOP
// 
//
// XTOOL_ALIGN_RIGHT
// 
//
// XTOOL_ALIGN_BOTTOM
// 
//
// XTOOL_ALIGN_ANY
// 
//
//===========================================================================================================


#define XTOOL_ALIGN_LEFT 1
#define XTOOL_ALIGN_TOP 2
#define XTOOL_ALIGN_RIGHT 4
#define XTOOL_ALIGN_BOTTOM 8
#define XTOOL_ALIGN_ANY 15


//===========================================================================================================
//
// XTOOL_DOCK Definitions
//
// XTool default docking state
//
// XTOOL_DOCK_TOP
// 
//
// XTOOL_DOCK_LEFT
// 
//
// XTOOL_DOCK_RIGHT
// 
//
// XTOOL_DOCK_BOTTOM
// 
//
// XTOOL_DOCK_FLOAT
// 
//
//===========================================================================================================


#define XTOOL_DOCK_TOP 1
#define XTOOL_DOCK_LEFT 2
#define XTOOL_DOCK_RIGHT 3
#define XTOOL_DOCK_BOTTOM 4
#define XTOOL_DOCK_FLOAT 5





//===========================================================================================================
//
// Miscellaneous Functions
//
//===========================================================================================================


  
//-----------------------------------------------------------------------------------------------------------
// GetPrinterLST_GUI Gets a list of all printers.
//
// Available         5.0
//-----------------------------------------------------------------------------------------------------------

[_licensed_app] void GetPrinterLST_GUI(LST);  // List to place into


  
//-----------------------------------------------------------------------------------------------------------
// iGetWindowState_GUI Retrieve the current state of the Oasis montaj window
//
// Returns             WINDOW_STATE
//
// Available           9.0
//-----------------------------------------------------------------------------------------------------------

[_public_app] int iGetWindowState_GUI();


  
//-----------------------------------------------------------------------------------------------------------
// SetWindowState_GUI Changes the state of the Oasis montaj window
//
// Available          9.0
//-----------------------------------------------------------------------------------------------------------

[_public_app] void SetWindowState_GUI(int);  // WINDOW_STATE


  
//-----------------------------------------------------------------------------------------------------------
// GetWindowPosition_GUI Get the Oasis montaj window's position state
//
// Available             9.0
//-----------------------------------------------------------------------------------------------------------

[_public_app] void GetWindowPosition_GUI(var int,   // Window left position
                                         var int,   // Window top position
                                         var int,   // Window right position
                                         var int,   // Window bottom position
                                         var int);  // Window state WINDOW_STATE


  
//-----------------------------------------------------------------------------------------------------------
// SetWindowPosition_GUI Get the Oasis montaj window's position and state
//
// Available             9.0
//-----------------------------------------------------------------------------------------------------------

[_public_app] void SetWindowPosition_GUI(int,   // Window left position
                                         int,   // Window top position
                                         int,   // Window right position
                                         int,   // Window bottom position
                                         int);  // Window state WINDOW_STATE


  
//-----------------------------------------------------------------------------------------------------------
// GetWindowArea_GUI Get the location of the Oasis montaj window.
//
// Notes             The Coordinates are pixels with 0,0 being the top
//                   left corner of the Screen.
//                   
//                   if the max values are equal to or less than the min values
//                   the window will be mimimized. If any Min values are GS_S4MN
//                   or any Max values are GS_S4MX, the window is maximized.
//                   
//                   See also GetClientWindowArea_GUI.
//
// Available         5.0
//-----------------------------------------------------------------------------------------------------------

[_licensed_app] void GetWindowArea_GUI(var int,   // X Min returned
                                       var int,   // Y Min returned
                                       var int,   // X Max returned
                                       var int);  // Y Max returned


  
//-----------------------------------------------------------------------------------------------------------
// GetClientWindowArea_GUI Get the location of the Oasis montaj client window.
//
// Notes                   Returns the coordinates of the client window area (where MDI document windows are placed).
//                         The returned coordinates are 0,0 for the minimum X and Y and the window width
//                         width and height for the maximum X and Y.
//
// Available               9.0
//-----------------------------------------------------------------------------------------------------------

[_licensed_app] void GetClientWindowArea_GUI(var int,   // X Min returned (0)
                                             var int,   // Y Min returned (0)
                                             var int,   // X Max returned (width)
                                             var int);  // Y Max returned (height)


  
//-----------------------------------------------------------------------------------------------------------
// GridStatHist_GUI Display Histogram of grid
//
// Available        5.0
//-----------------------------------------------------------------------------------------------------------

[_licensed_app] void GridStatHist_GUI(string);  // Name of the grid to get stats from


  
//-----------------------------------------------------------------------------------------------------------
// GridStatHist5_GUI Display Histogram of up to 5 different grids
//
// Available         2021.2
//-----------------------------------------------------------------------------------------------------------

[_licensed_app] void GridStatHist5_GUI(string,   // Name of the first grid to get stats from (required)
                                       string,   // Optional name of the second grid to get stats from
                                       string,   // Optional name of the third grid to get stats from
                                       string,   // Optional name of the fourth grid to get stats from
                                       string);  // Optional name of the fifth grid to get stats from


  
//-----------------------------------------------------------------------------------------------------------
// VoxelStatHist_GUI Display Histogram of Voxel
//
// Available         5.0
//-----------------------------------------------------------------------------------------------------------

[_licensed_app] void VoxelStatHist_GUI(string);  // Name of the Voxel to get stats from


  
//-----------------------------------------------------------------------------------------------------------
// iColorForm_GUI Select a color.
//
// Returns        0 - Ok
//                1 - Cancel
//
// Notes          Color value is set on input, and new value returned.
//                If the input color type is C_TRANSPARENT, then the color
//                is set to white, if any other type is input the output is
//                guaranteed to be of the same type.
//                
//                If no_col is 1, then on exit, if white is
//                selected, the user is prompted: 'Do you want white (Yes) or
//                "None" (No) ?' and the color is converted as requested.
//                If this is not the case, the C_TRANSPARENT is converted
//                to white (if "Ok" is selected) and no choice is offered.
//
// Available      5.0
//-----------------------------------------------------------------------------------------------------------

[_public_app] int iColorForm_GUI(var int,   // Color (modified)
                                 int);      // Ask about C_TRANSPARENT if white is selected (1: yes, 0: no)?


  
//-----------------------------------------------------------------------------------------------------------
// iColorTransform_GUI Define an ITR of up to 8 zones.
//
// Returns             0 if OK
//                     1 if user cancels
//
// Notes               The statistics object is required in order to determine
//                     data ranges, percentiles, etc. Create it using
//                     CreateExact_ST, or be sure to enable histogram statistics.
//
// Available           5.0
//-----------------------------------------------------------------------------------------------------------

[_licensed_app] int iColorTransform_GUI(ITR,   // ITR object (modified)
                                        ST);   // ST object (input)


  
//-----------------------------------------------------------------------------------------------------------
// iCoordSysWizard_GUI Launch the coordinate system definition/display GUI.
//
// Returns             0 - Ok
//                     1 - Cancel
//
// Notes               Launches the new GX.Net single-dialog coordinate system
//                     definition dialog. The input IPJ is modified on return
//                     if OK is selected (and the editable parameter is 1).
//                     The "Data source label" and "Data source" is information displayed
//                     in the dialog for the user to know where the IPJ came from (e.g. "Grid: X.grd")
//
// Available           5.0
//-----------------------------------------------------------------------------------------------------------

[_public_app] int iCoordSysWizard_GUI(IPJ,      // IPJ object
                                      int,      // Editable IPJ (0:No, 1:Yes)
                                      int,      // COORDSYS_MODE
                                      string,   // Data source label
                                      string);  // Data source


  
//-----------------------------------------------------------------------------------------------------------
// iCoordSysWizardLicensed_GUI Launch the coordinate system definition/display GUI.
//
// Returns                     0 - Ok
//                             1 - Cancel
//
// Notes                       Same as iCoordSysWizardLicensed_GUI but will always be editable. The other
//                             method is not editable in the viewer while this one is.
//
// Available                   5.0
//-----------------------------------------------------------------------------------------------------------

[_licensed_app] int iCoordSysWizardLicensed_GUI(IPJ,      // IPJ object
                                                int,      // Editable IPJ (0:No, 1:Yes)
                                                int,      // COORDSYS_MODE
                                                string,   // Data source label
                                                string);  // Data source


  
//-----------------------------------------------------------------------------------------------------------
// iCoordSysWizardGrid_GUI Launch the coordinate system definition/display GUI.
//
// Returns                 0 - Ok
//                         1 - Cancel
//
// Notes                   Same as iCoordSysWizardLicensed_GUI but allows the original grid info to be adjusted
//                         when projections on section or oriented plan grids are modified.
//                         In the tool, it is the "modified" orientation required to keep the edited projection's grid
//                         in the same location as it was in the target projection.
//
// Available               9.0
//-----------------------------------------------------------------------------------------------------------

[_public_app] int iCoordSysWizardGrid_GUI(IPJ,        // Original grid IPJ object
                                          IPJ,        // Source (target) grid IPJ object. This is supplied so the modified orientation can be calculated and displayed.
                                          int,        // Editable IPJ (0:No, 1:Yes)
                                          int,        // COORDSYS_MODE
                                          string,     // Data source label
                                          string,     // Data source
                                          int,        // Number of cells in X
                                          int,        // Number of cells in Y
                                          var real,   // Grid orgin X (grid's own coordinate system)
                                          var real,   // Grid orgin Y (grid's own coordinate system)
                                          var real,   // Grid cell size X
                                          var real,   // Grid cell size Y
                                          var real);  // Grid rotation angle (degrees CCW)


  
//-----------------------------------------------------------------------------------------------------------
// iDatabaseType_GUI Returns the type string of an external DAO database.
//
// Returns           0 - OK
//                   -1 - Cancel
//                   terminates on error
//
// Notes             If the file extension is "mdb", then an MSJET (Microsoft Access)
//                   database is assumed. If the file name is "ODBC", then "ODBC" is
//                   returned as the type. Otherwise, a dialog appears listing the
//                   other valid DAO database types.
//
// Available         5.0
//-----------------------------------------------------------------------------------------------------------

[_licensed_app] int iDatabaseType_GUI(string,       // File Name
                                      var string,   // Database type (returned)
                                      int);         // Size of type string
#define _iDatabaseType_GUI(name, type) iDatabaseType_GUI(name, type, sizeof(type))


  
//-----------------------------------------------------------------------------------------------------------
// iDatamineType_GUI Returns the type of a Datamine file.
//
// Returns           0 - OK
//                   -1 - Cancel
//
// Notes             Often, a Datamine file can be opened a number of different ways
//                   (e.g. as a string file or a as wireframe (point) file.
//                   The following function checks to see if there is a choice to be made
//                   between types supported by Geosoft for import. If not, it just returns
//                   the original type "hint" from Datamine. If there is a choice, it puts up
//                   a dialog with the choices for the user to pick from.
//                   Do a bit-wise AND with the returned type to determine the file type
//                   (or the type selected).
//                   
//                   Currently supported overlapping types/choices:
//                   
//                   dmString
//                   dmWireframePoint
//
// Available         5.0
//-----------------------------------------------------------------------------------------------------------

[_licensed_app] int iDatamineType_GUI(string,    // File Name (for display purposes only)
                                      var int);  //


  
//-----------------------------------------------------------------------------------------------------------
// iExportXYZTemplateEditor_GUI Allows the user to edit XYZ export template
//                              using a complex dialog. The Template name
//                              may change during editing.
//
// Returns                      0 - OK
//                              1 - Error
//
// Notes                        Only uses the current DB. This function does
//                              not exactly work as supposed to. Instead of using
//                              the EDB handle passed to it, it only will use
//                              the current DB. Please see ExportXYXTemplateEditorEx_GUI
//                              for an updated function.
//
// Available                    5.0
//-----------------------------------------------------------------------------------------------------------

[_licensed_app] int iExportXYZTemplateEditor_GUI(DB,       // Database
                                                 string,   // Name of the Template (can change)
                                                 int);     // Size of the Template


  
//-----------------------------------------------------------------------------------------------------------
// iExportXYZTemplateEditorEx_GUI Allows the user to edit an XYZ export template
//                                using a complex dialog. The template name
//                                may change during editing.
//
// Returns                        0 - OK
//                                1 - Error
//
// Available                      5.0
//-----------------------------------------------------------------------------------------------------------

[_licensed_app] int iExportXYZTemplateEditorEx_GUI(EDB,          // EDB object
                                                   var string,   // Template name
                                                   int);         // Size of name
#define _iExportXYZTemplateEditorEx_GUI(edb, templ) iExportXYZTemplateEditorEx_GUI(edb, templ, sizeof(templ))


  
//-----------------------------------------------------------------------------------------------------------
// iFileFilterIndex_GUI Return the FILE_FILTER_XXX value for a file filter string.
//
// Returns              FILE_FILTER, -1 if not found
//
// Notes                For example, if "Database (*.gdb)" is input,
//                      then the FILE_FILTER_GDB value is returned.
//
// Available            7.0
//-----------------------------------------------------------------------------------------------------------

[_public] int iFileFilterIndex_GUI(string);  // Input filter string


  
//-----------------------------------------------------------------------------------------------------------
// iGCSDatumWarningSHP_GUI Launch the GCS Datum Warning dialog for SHP files.
//
// Returns                 0 - Ok
//                         1 - Cancel
//
// Notes                   Runs the GCS Warning dialog with one data source
//
// Available               7.1
//-----------------------------------------------------------------------------------------------------------

[_public] int iGCSDatumWarningSHP_GUI(string,   // Data source
                                      IPJ);     // IPJ object


  
//-----------------------------------------------------------------------------------------------------------
// iGCSDatumWarningSHPDBEx_GUI Launch the GCS Datum Warning dialog for SHP files (Database).
//
// Returns                     0 - Ok
//                             1 - Cancel
//
// Notes                       Runs the GCS Warning dialog with multiple data sources (Database)
//
// Available                   7.1
//-----------------------------------------------------------------------------------------------------------

[_public] int iGCSDatumWarningSHPDBEx_GUI(LST,   // Data source names
                                          LST,   // Corresponding datum names
                                          LST,   // Returned corresponding LDT names
                                          DB);   //


  
//-----------------------------------------------------------------------------------------------------------
// iGCSDatumWarningSHPEx_GUI Launch the GCS Datum Warning dialog for SHP files.
//
// Returns                   0 - Ok
//                           1 - Cancel
//
// Notes                     Runs the GCS Warning dialog with multiple data sources
//
// Available                 7.1
//-----------------------------------------------------------------------------------------------------------

[_public] int iGCSDatumWarningSHPEx_GUI(LST,     // Data source names
                                        LST,     // Corresponding datum names
                                        LST,     // Returned corresponding LDT names
                                        MVIEW);  //


  
//-----------------------------------------------------------------------------------------------------------
// iGetAreaOfInterest_GUI Get the current area of interest from the application.
//
// Returns                AOI_RETURN_STATE
//
// Notes                  Depending on what is currently visible on screen and
//                        the defined coordinate system the user may be prompted
//                        by a warning and optionaly cancel the process.
//
// Available              5.0
//-----------------------------------------------------------------------------------------------------------

[_public_app] int iGetAreaOfInterest_GUI(var real,   // AOI Area Min X
                                         var real,   // AOI Area Min Y
                                         var real,   // AOI Area Max X
                                         var real,   // AOI Area Max y
                                         PLY,        // AOI Bounding PLY (Filled if available, otherwise empty)
                                         IPJ);       // AOI Bounding IPJ


  
//-----------------------------------------------------------------------------------------------------------
// iGetAreaOfInterest3D_GUI Get the current area of interest from the application in 3D.
//
// Returns                  AOI_RETURN_STATE
//
// Notes                    Depending on what is currently visible on screen and
//                          the defined coordinate system the user may be prompted
//                          by a warning and optionaly cancel the process.
//
// Available                5.0
//-----------------------------------------------------------------------------------------------------------

[_public_app] int iGetAreaOfInterest3D_GUI(var real,   // AOI Area Min X
                                           var real,   // AOI Area Min Y
                                           var real,   // AOI Area Min Z
                                           var real,   // AOI Area Max X
                                           var real,   // AOI Area Max y
                                           var real,   // AOI Area Max Z
                                           PLY,        // AOI Bounding PLY (Filled if available, otherwise empty)
                                           IPJ);       // AOI Bounding IPJ


  
//-----------------------------------------------------------------------------------------------------------
// IGetDATDefaults_GUI Return the user default extension and qualifier for grids/images.
//
// Notes               The default grid/image filters are normally stored in
//                     "MONTAJ.DEFAULT_XGD_IN" and "MONTAJ.DEFAULT_XGD_OUT"
//                     
//                     If no filter is defined, or the filter is not found
//                     then "grd" and "GRD" are returned as the default extension
//                     and qualifier.
//
// Available           7.0
//-----------------------------------------------------------------------------------------------------------

[_public] void IGetDATDefaults_GUI(int,          // DAT_TYPE
                                   int,          // FILE_FORM
                                   var string,   // Returned default extension (e.g. "grd")
                                   int,          // Buffer size for extension
                                   var string,   // Returned default qualifier (e.g. "GRD")
                                   int);         // Buffer size for the qualifier
#define GetDATDefaults_GUI(flags, open, ext, qual) IGetDATDefaults_GUI(flags, open, ext, sizeof(ext), qual, sizeof(qual))


  
//-----------------------------------------------------------------------------------------------------------
// IGetFileFilter_GUI Return the defined filter, mask, extension and directory for an input filter.
//
// Notes              Returns the four parts of the file filter;
//                    e.g. for FILE_FILTER_GDB it returns:
//                    
//                    Filter:    "Database (*.gdb)"
//                    Mask:      "*.gdb"
//                    Extension: "gdb"
//                    Directory: "GS_DIRECTORY_NONE"
//                    
//                    This function is useful for constuction open/save dialog
//                    file filters, especially in GX.Net functions.
//
// Available          7.0
//-----------------------------------------------------------------------------------------------------------

[_public] void IGetFileFilter_GUI(int,          // FILE_FILTER
                                  var string,   // Returned file filter string
                                  int,          // Size of the file filter buffer
                                  var string,   // Returned file mask string
                                  int,          // Size of the file mask buffer
                                  var string,   // Returned file extension
                                  int,          // Size of the file extension buffer
                                  var int);     // GS_DIRECTORY Returned directory.
#define GetFileFilter_GUI(file_filter, filter, mask, ext, path) IGetFileFilter_GUI(file_filter, filter, sizeof(filter), mask, sizeof(mask), ext, sizeof(ext), path)


  
//-----------------------------------------------------------------------------------------------------------
// IGetGSDirectory_GUI Return the directory path for value of GS_DIRECTORY.
//
// Notes               Works along with the IGetFileFilter_GUI function. Note that
//                     most values of FILE_FILTER_XXX will return GS_DIRECTORY_NONE,
//                     and give the current workspace directory.
//                     
//                     This function is useful for constuction open/save dialog
//                     file filters, especially in GX.Net functions.
//
// Available           7.0
//-----------------------------------------------------------------------------------------------------------

[_public] void IGetGSDirectory_GUI(int,          // GS_DIRECTORY Returned directory.
                                   var string,   // Returned directory path
                                   int);         // Size of the directory path buffer
#define GetGSDirectory_GUI(path, dir) IGetGSDirectory_GUI(path, dir, sizeof(dir))


  
//-----------------------------------------------------------------------------------------------------------
// IiBrowseDir_GUI Browses for a specific directory.
//
// Returns         0 - Ok
//                 1 - Cancel
//
// Available       5.0
//-----------------------------------------------------------------------------------------------------------

[_public_app] int IiBrowseDir_GUI(string,       // Title of the Form
                                  string,       // Default path (Can be "")
                                  var string,   // Result Path Buffer (default on input)
                                  int);         // Path Buffer Size
#define iBrowseDir_GUI(title, default, dir_path) IiBrowseDir_GUI(title, default, dir_path, sizeof(dir_path))


  
//-----------------------------------------------------------------------------------------------------------
// IiColorTransformEx_GUI Define an ITR of up to 12 zones, with file load/save buttons.
//
// Returns                0 if OK
//                        1 if user cancels
//
// Notes                  The statistics object is required in order to determine
//                        data ranges, percentiles, etc. Create it using
//                        CreateExact_ST, or be sure to enable histogram statistics.
//                        The color transform file name is used as the default when the save
//                        button is pushed, and is updated both after the load and save buttons
//                        are pushed by the value input or selected by the user.
//
// Available              5.0
//-----------------------------------------------------------------------------------------------------------

[_licensed_app] int IiColorTransformEx_GUI(ITR,          // ITR object (modified)
                                           ST,           // ST object (input)
                                           int,          // Max number of zones (8 or 12)
                                           int,          // Show file load/save buttons (TRUE or FALSE)?
                                           var string,   // Default color transform file name
                                           int);         // Buffer size for the file name
#define iColorTransformEx_GUI(itr, st, zones, load_save, file) IiColorTransformEx_GUI(itr, st, zones, load_save, file, sizeof(file))


  
//-----------------------------------------------------------------------------------------------------------
// IiCumulativePercent_GUI Define a percent-based ITR of up to 12 zones.
//
// Returns                 0 if OK
//                         1 if user cancels
//
// Notes                   The ITR values are interpreted as cumulative percent values, using
//                         the "PERCENT=1" value in the ITR's REG.
//                         
//                         Note that processes using ITRs do not automatically know to convert between
//                         percent values and "actual" data values. The REG "PERCENT" value is simply
//                         a flag to indicate to a user that the values are intended to be in the range
//                         from 0 < x < 100. The ITR should not, therefore, be applied directly to data
//                         unless that data is already given in percent.
//                         
//                         If the file name is defined on input, the initial ITR will be loaded from it.
//                         If it is left blank, a default 5-color transform with
//                         The color transform file name is used as the default when the save
//                         button is pushed, and is updated both after the load and save buttons
//                         are pushed by the value input or selected by the user.
//
// Available               5.0
//-----------------------------------------------------------------------------------------------------------

[_licensed_app] int IiCumulativePercent_GUI(var string,   // Default color transform file name
                                            int,          // Buffer size for the file name
                                            ITR);         // ITR object (returned)
#define iCumulativePercent_GUI(file, itr) IiCumulativePercent_GUI(file, sizeof(file), itr)


  
//-----------------------------------------------------------------------------------------------------------
// IiDatFileForm_GUI Grid and Image file Open/Save Form for Multiple/Single file selections
//
// Returns           0 - Ok
//                   1 - Cancel
//
// Notes             Remember to make the string size big enough for multiple file
//                   selections. In the case of multiple selections the names will be separated
//                   by a semicolon and only the first file will contain the full path.
//                   
//                   When using the multiple flag on any of these functions please be aware that
//                   the string returned will be in the format:
//                   drive:\path1\path2\name.grid|name2.grid|name3.grid(QUALIFIERS)
//                   All grids are required to be of the same type.
//
// Available         5.0
//-----------------------------------------------------------------------------------------------------------

[_public_app] int IiDatFileForm_GUI(string,       // Title of the Form
                                    string,       // Default value
                                    var string,   // Where the file name(s) is returned
                                    int,          // Size of the File Name Buffer
                                    int,          // DAT_TYPE
                                    int,          // FILE_FORM
                                    int);         // Allow Multiple file selections = TRUE Single   file selections = FALSE
#define iDatFileForm_GUI(title, default, psz_file_path, type, validation_type, multi) IiDatFileForm_GUI(title, default, psz_file_path, sizeof(psz_file_path), type, validation_type, multi)


  
//-----------------------------------------------------------------------------------------------------------
// IiDatFileFormEx_GUI Grid and Image file Open/Save Form for Multiple/Single file selections and optional filter list sorting.
//
// Returns             0 - Ok
//                     1 - Cancel
//
// Notes               Remember to make the string size big enough for multiple file
//                     selections. In the case of multiple selections the names will be separated
//                     by a semicolon and only the first file will contain the full path.
//                     
//                     When using the multiple flag on any of these functions please be aware that
//                     the string returned will be in the format:
//                     drive:\path1\path2\name.grid|name2.grid|name3.grid(QUALIFIERS)
//                     All grids are required to be of the same type.
//
// Available           9.9
//-----------------------------------------------------------------------------------------------------------

[_public_app] int IiDatFileFormEx_GUI(string,       // Title of the Form
                                      string,       // Default value
                                      var string,   // Where the file name(s) is returned
                                      int,          // Size of the File Name Buffer
                                      int,          // DAT_TYPE
                                      int,          // FILE_FORM
                                      int,          // Allow Multiple file selections = TRUE Single   file selections = FALSE
                                      int);         // Sort file filter list = TRUE   Maintain default filter list sorting = FALSE
#define iDatFileFormEx_GUI(title, default, psz_file_path, type, validation_type, multi, sort) IiDatFileFormEx_GUI(title, default, psz_file_path, sizeof(psz_file_path), type, validation_type, multi, sort)


  
//-----------------------------------------------------------------------------------------------------------
// IiGenFileForm_GUI General file Open/Save Form for Multiple/Single file selections and multiple filter capability
//
// Returns           0 - Ok
//                   1 - Cancel
//
// Notes             Remember to make the string size big enough for multiple file
//                   selections. In the case of multiple selections the names will be separated
//                   by a semicolon and only the first file will contain the full path.
//                   
//                   Defined Functions     The following four functions are handy defines and simply pass the appropriate
//                   parameter.
//                   
//                   iFileOpen_GUI
//                   iFileSave_GUI
//                   iMultiFileOpen_GUI
//                   iMultiFileSave_GUI
//
// Available         5.0
//-----------------------------------------------------------------------------------------------------------

[_public_app] int IiGenFileForm_GUI(string,       // Title of the Form
                                    VV,           // INT VV of file filters to use FILE_FILTER The first one is default, can pass (VV) 0 for to use next parameter.
                                    int,          // FILE_FILTER (ignored if parameter above is not zero)
                                    string,       // Default value
                                    var string,   // Where the file name(s) is returned
                                    int,          // Size of the File Name Buffer
                                    int,          // FILE_FORM
                                    int);         // Allow Multiple file selections = TRUE Single   file selections = FALSE
#define iGenFileForm_GUI(title, filt_vv, filter, default, file_path, type, multi) IiGenFileForm_GUI(title, filt_vv, filter, default, file_path, sizeof(file_path), type, multi)


  
//-----------------------------------------------------------------------------------------------------------
// IiCustomFileForm_GUI General file Open/Save Form for Multiple/Single file selections and custom filter capability
//
// Returns              0 - Ok
//                      1 - Cancel
//
// Notes                Remember to make the string size big enough for multiple file
//                      selections. In the case of multiple selections the names will be separated
//                      by a semicolon and only the first file will contain the full path.
//
// Available            9.3
//-----------------------------------------------------------------------------------------------------------

[_public_app] int IiCustomFileForm_GUI(string,       // Title of the Form
                                       string,       // Custom filter.
                                       string,       // Default value
                                       var string,   // Where the file name(s) is returned
                                       int,          // Size of the File Name Buffer
                                       int,          // FILE_FORM
                                       int);         // Allow Multiple file selections = TRUE Single   file selections = FALSE
#define iCustomFileForm_GUI(title, filter, default, file_path, type, multi) IiCustomFileForm_GUI(title, filter, default, file_path, sizeof(file_path), type, multi)


  
//-----------------------------------------------------------------------------------------------------------
// IiImportDrillDatabaseADO2_GUI Same as iImportDrillDatabaseADO_GUI, but template name is returned.
//
// Returns                       0 - OK
//                               -1 - Cancel
//
// Notes                         If it is not defined on input, the template name is set
//                               to be the Wholeplot table name; e.g.
//                               "HOLESURVEY.i4" for "Project_HOLESURVEY"
//
// Available                     5.0
//-----------------------------------------------------------------------------------------------------------

[_licensed_app] int IiImportDrillDatabaseADO2_GUI(string,       // External database connection string (Blank for OLEDB Wizard)
                                                  var string,   // Template to make (if left blank, the created template name is returned)
                                                  int,          // Size of the template name string
                                                  var string,   // Name of table
                                                  int,          // Size of table name string
                                                  var int,      // Type of import returned DH_DATA
                                                  REG);         // Drill Hole Object REG handle
#define iImportDrillDatabaseADO2_GUI(connect, temp, table, type, reg) IiImportDrillDatabaseADO2_GUI(connect, temp, sizeof(temp), table, sizeof(table), type, reg)


  
//-----------------------------------------------------------------------------------------------------------
// IiImportDrillDatabaseESRI_GUI Same as iImportDrillDatabaseADO2_GUI, but from an ArcGIS Geodatabase
//
// Returns                       0 - OK
//                               -1 - Cancel
//
// Notes                         If it is not defined on input, the template name is set
//                               to be the Wholeplot table name; e.g.
//                               "HOLESURVEY.i4" for "Project_HOLESURVEY"
//
// Available                     5.0
//-----------------------------------------------------------------------------------------------------------

[_licensed_app] int IiImportDrillDatabaseESRI_GUI(string,       // External database connection string  (e.g. "d:\Personal\test.mdb|Table" or "d:\File\test.gdb|TableX|FeatureClassY)"
                                                  var string,   // Template to make (if left blank, the created template name is returned)
                                                  int,          // Size of the template name string
                                                  var string,   // Name of table
                                                  int,          // Size of table name string
                                                  var int,      // Type of import returned DH_DATA
                                                  int,          // Geosoft Geochemistry Database?
                                                  REG);         // Drill Hole Object REG handle
#define iImportDrillDatabaseESRI_GUI(connect, temp, table, type, geochem, reg) IiImportDrillDatabaseESRI_GUI(connect, temp, sizeof(temp), table, sizeof(table), type, geochem, reg)


  
//-----------------------------------------------------------------------------------------------------------
// IiImportDrillDatabaseODBC_GUI Generate a template file for importing drill holes
//                               from ODBC database data.
//
// Returns                       0 - OK
//                               -1 - Cancel
//
// Notes                         If the input connection string is empty (""), then the ODBC connection dialogs
//                               will appear (e.g. to connect to a machine database) before the import wizard
//                               is run. The connect string used for this connection is then returned.
//                               This string can then be used on input to skip the ODBC connection dialogs and
//                               go straight to the Wholeplot import wizard.
//                               Because the name of the database is not necessarily known, the template name is created
//                               from the name of the table opened - e.g. "HOLELOCATION.i4".
//
// Available                     5.0
//-----------------------------------------------------------------------------------------------------------

[_licensed_app] int IiImportDrillDatabaseODBC_GUI(var string,   // Connection string
                                                  int,          // Size of connection string returned
                                                  var string,   // Template to make
                                                  int,          // Size of template string returned
                                                  var string,   // Name of table
                                                  int,          // Size of table name string
                                                  var int,      // Type of import returned DH_DATA
                                                  REG);         // Drill Hole Object REG handle
#define iImportDrillDatabaseODBC_GUI(connect, temp, table, type, reg) IiImportDrillDatabaseODBC_GUI(connect, sizeof(connect), temp, sizeof(temp), table, sizeof(table), type, reg)


  
//-----------------------------------------------------------------------------------------------------------
// iConfigureConnection_GUI Configures connection string from ODBC database data.
//
// Returns                  0 - OK
//                          -1 - Cancel
//
// Notes                    
//
// Available                9.9.1
//-----------------------------------------------------------------------------------------------------------

[_licensed_app] int iConfigureConnection_GUI(var string,   // Connection string
                                             int,          // Size of connection string returned
                                             var string,   // Template to make
                                             int,          // Size of template string returned
                                             var string,   // Name of table
                                             int);         // Size of table name string
#define _iConfigureConnection_GUI(connect, temp, table) iConfigureConnection_GUI(connect, sizeof(connect), temp, sizeof(temp), table, sizeof(table))


  
//-----------------------------------------------------------------------------------------------------------
// IiImportDrillDatabaseODBCMaxwell_GUI Same as IiImportDrillDatabaseODBC_GUI but customized for Maxwell.
//
// Returns                              0-OK 1-Cancel
//
// Notes                                Same as IiImportDrillDatabaseODBC_GUI but customized for Maxwell.
//
// Available                            8.3
//-----------------------------------------------------------------------------------------------------------

[_licensed_app] int IiImportDrillDatabaseODBCMaxwell_GUI(var string,   // Connection string
                                                         int,          // Size of connection string returned
                                                         var string,   // Template to make
                                                         int,          // Size of template string returned
                                                         var string,   // Name of table
                                                         int,          // Size of table name string
                                                         var int,      // Type of import returned DH_DATA
                                                         REG);         // Drill Hole Object REG handle
#define iImportDrillDatabaseODBCMaxwell_GUI(connect, temp, table, type, reg) IiImportDrillDatabaseODBCMaxwell_GUI(connect, sizeof(connect), temp, sizeof(temp), table, sizeof(table), type, reg)


  
//-----------------------------------------------------------------------------------------------------------
// iImportAsciiWizard_GUI Generate a template file from a gui.
//
// Returns                0 - OK
//                        1 - Cancel
//
// Available              5.0
//-----------------------------------------------------------------------------------------------------------

[_licensed_app] int iImportAsciiWizard_GUI(string,   // Data file name
                                           string);  // Template to make


  
//-----------------------------------------------------------------------------------------------------------
// iImportChemDatabase_GUI Generate a template file for importing Geochems Database.
//
// Returns                 0 - OK
//                         -1 - Cancel
//
// Available               5.0
//-----------------------------------------------------------------------------------------------------------

[_licensed_app] int iImportChemDatabase_GUI(string,       // Data file name
                                            string,       // Template to make
                                            var string,   // Name of table
                                            int,          // Size of table name string
                                            int);         // IMPCH_TYPE
#define importChemDatabase_GUI(name, temp, table, type) iImportChemDatabase_GUI(name, temp, table, sizeof(table), type)


  
//-----------------------------------------------------------------------------------------------------------
// iImportChemDatabaseADO_GUI Improved template creation for importing geochem database (ADO).
//
// Returns                    0 - OK
//                            -1 - Cancel
//
// Notes                      This is an improved version of ImportChemDatabase_GUI using the
//                            new ADO technology, as opposed to DAO. Use in conjuction with
//                            ImportADO_DU. See also ImportDatabaseADO_GUI.
//
// Available                  5.0
//-----------------------------------------------------------------------------------------------------------

[_licensed_app] int iImportChemDatabaseADO_GUI(string,       // External database connection string (Blank for OLEDB Wizard)
                                               string,       // Template to make
                                               var string,   // Name of table
                                               int,          // Size of table name string
                                               int);         // IMPCH_TYPE
#define importChemDatabaseADO_GUI(connect, temp, table, type) iImportChemDatabaseADO_GUI(connect, temp, table, sizeof(table), type)


  
//-----------------------------------------------------------------------------------------------------------
// iImportDatabase_GUI Create template to import an external database table.
//
// Returns             0 - OK
//                     -1 - Cancel
//
// Notes               This is used to select a single database table, and
//                     selected fields from that table. If the database is not
//                     Microsoft Access (type .mdb), an introductory dialog
//                     requests the file type.
//                     This function DOES NOT import the table itself, but
//                     creates an import template which may be used to import
//                     the table (see ImportDAO_DU).
//
// Available           5.0
//-----------------------------------------------------------------------------------------------------------

[_licensed_app] int iImportDatabase_GUI(string,       // External database file name
                                        string,       // Template to make
                                        var string,   // Name of table imported (returned)
                                        int);         // Size of table string
#define importDatabase_GUI(name, temp, table) iImportDatabase_GUI(name, temp, table, sizeof(table))


  
//-----------------------------------------------------------------------------------------------------------
// iImportDatabaseADO_GUI Create template to import an external database table (ADO Version).
//
// Returns                0 - OK
//                        -1 - Cancel
//
// Notes                  1. This is used to select a single database table, and
//                           selected fields from that table.
//                        
//                        2. This function DOES NOT import the table itself, but
//                           creates an import template which may be used to import
//                           the table (see ImportADO_DU).
//                        
//                        3. If connection string is of type "FILENAME=..." the connection will attempt to resolve
//                           it as a file database. (see also ODBCFileConnect_GUI)
//
// Available              5.0
//-----------------------------------------------------------------------------------------------------------

[_licensed_app] int iImportDatabaseADO_GUI(string,       // External database connection string (Blank for OLEDB Wizard)
                                           string,       // Template to make
                                           var string,   // Name of table imported (returned)
                                           int);         // Size of table string
#define importDatabaseADO_GUI(connect, temp, table) iImportDatabaseADO_GUI(connect, temp, table, sizeof(table))


  
//-----------------------------------------------------------------------------------------------------------
// iImportDatabaseSQL_GUI Create template to import an external database table,
//                        created using SQL.
//
// Returns                0 - OK
//                        -1 - Cancel
//
// Notes                  1. This is used to build an Oasis montaj group (line) from
//                           one or more database tables and fields, by selecting from
//                           one or more SQL selection queries. The list of queries
//                           is read from a text file with the following syntax:
//                        
//                           Query_Name_1
//                           Query...
//                           Query... (continued)
//                           ...
//                           ...
//                           END_QUERY
//                           Query_Name_2
//                           etc.
//                        
//                        2. Each query has a title line, the query itself, then the
//                           "END_QUERY" line to finish.  The title of a subsequent query
//                           is on the line after an "END_QUERY" line.
//                        
//                        3. If the text file parameter is left blank (""), then
//                           selection queries in the database itself are listed.
//                           In addition to the pre-defined queries, there is a
//                           "User Defined" query which may be filled in by the user.
//                        
//                        4. This function DOES NOT import the table itself, but
//                           creates an import template which may be used to import
//                           the data (see ImportDAO_DU).
//                        
//                        5. If connection string is of type "FILENAME=..." the connection will attempt to resolve
//                           it as a file database. (see also ODBCFileConnect_GUI)
//
// Available              5.0
//-----------------------------------------------------------------------------------------------------------

[_licensed_app] int iImportDatabaseSQL_GUI(string,       // External database file name
                                           string,       // Text file with SQL queries to use, ("" - get from database)
                                           string,       // Import template to make
                                           var string,   // Name of table imported (returned)
                                           int);         // Size of table string
#define importDatabaseSQL_GUI(name, sql, temp, line) iImportDatabaseSQL_GUI(name, sql, temp, line, sizeof(line))


  
//-----------------------------------------------------------------------------------------------------------
// iImportDatabaseSQLADO_GUI Create template to import an external database table,
//                           created using SQL (New ADO Version).
//
// Returns                   0 - OK
//                           -1 Cancel
//
// Notes                     This is used to build an Oasis montaj group (line) from
//                           one or more database tables and fields, by selecting from
//                           one or more SQL selection queries. The list of queries
//                           is read from a text file with the following syntax:
//                           
//                           Query_Name_1
//                           Query...
//                           Query... (continued)
//                           ...
//                           ...
//                           END_QUERY
//                           Query_Name_2
//                           etc.
//                           
//                           Each query has a title line, the query itself, then the
//                           "END_QUERY" line to finish.  The title of a subsequent query
//                           is on the line after an "END_QUERY" line.
//                           
//                           If the text file parameter is left blank (""), then
//                           selection queries in the database itself are listed.
//                           In addition to the pre-defined queries, there is a
//                           "User Defined" query which may be filled in by the user.
//                           
//                           This function DOES NOT import the table itself, but
//                           creates an import template which may be used to import
//                           the data (see ImportDAO_DU).
//
// Available                 5.0
//-----------------------------------------------------------------------------------------------------------

[_licensed_app] int iImportDatabaseSQLADO_GUI(string,       // External database connection string (Blank for OLEDB Wizard)
                                              string,       // Text file with SQL queries to use, ("" - get from database)
                                              string,       // Import template to make
                                              var string,   // Name of table imported (returned)
                                              int);         // Size of table string
#define importDatabaseSQLADO_GUI(connect, sql, temp, line) iImportDatabaseSQLADO_GUI(connect, sql, temp, line, sizeof(line))


  
//-----------------------------------------------------------------------------------------------------------
// iImportDrillDatabaseADO_GUI Generate a template file for importing drill holes.
//
// Returns                     0 - OK
//                             -1 - Cancel
//
// Notes                       This is an improved version of ImportDrillDatabase_GUI using the
//                             new ADO technology, as opposed to DAO. Use in conjunction with
//                             ImportADO_DU. See also ImportDatabaseADO_GUI.
//
// Available                   5.0
//-----------------------------------------------------------------------------------------------------------

[_licensed_app] int iImportDrillDatabaseADO_GUI(string,       // External database connection string (Blank for OLEDB Wizard)
                                                string,       // Template to make
                                                var string,   // Name of table
                                                int,          // Size of table name string
                                                var int,      // Type of import returned DH_DATA
                                                REG);         // Drill Hole Object REG handle
#define importDrillDatabaseADO_GUI(connect, temp, table, type, reg) iImportDrillDatabaseADO_GUI(connect, temp, table, sizeof(table), type, reg)


  
//-----------------------------------------------------------------------------------------------------------
// iImportTemplateSQL_GUI Create template to import an external database table; provide query.
//
// Returns                0 - OK
//                        -1 Cancel
//                        terminates on error
//
// Notes                  This is similar to iImportDatabaseSQL_GUI, but dispenses with
//                        the dialog offering a selection of queries. Instead, the
//                        user supplies the query as a string.
//                        
//                        This function DOES NOT import the table itself, but
//                        creates an import template which may be used to import
//                        the data (see ImportDAO_DU).
//
// Available              5.0
//-----------------------------------------------------------------------------------------------------------

[_licensed_app] int iImportTemplateSQL_GUI(string,   // External database file name
                                           string,   // Import template to make
                                           string,   // SQL selection query to run on database
                                           string);  // Name of Oasis table to create


  
//-----------------------------------------------------------------------------------------------------------
// iImportTemplateSQLADO_GUI Create template to import an external database table; provide query.
//
// Returns                   0 - OK
//                           -1 - Cancel
//                           terminates on error
//
// Notes                     This is similar to iImportDatabaseSQL_GUI, but dispenses with
//                           the dialog offering a selection of queries. Instead, the
//                           user supplies the query as a string.
//                           
//                           This function DOES NOT import the table itself, but
//                           creates an import template which may be used to import
//                           the data (see ImportADO_DU).
//
// Available                 5.0
//-----------------------------------------------------------------------------------------------------------

[_licensed_app] int iImportTemplateSQLADO_GUI(string,   // External database connection string (Blank for OLEDB Wizard)
                                              string,   // Import template to make
                                              string,   // SQL selection query to run on database
                                              string);  // Name of Oasis table to create


  
//-----------------------------------------------------------------------------------------------------------
// iImportXYZTemplateEditor_GUI Allows the user to edit XYZ import templates
//                              using a complex dialog. The Template name
//                              may change during editing.
//
// Returns                      0 - OK
//                              1 - Error
//
// Available                    5.0
//-----------------------------------------------------------------------------------------------------------

[_licensed_app] int iImportXYZTemplateEditor_GUI(DB,           // Database
                                                 var string,   // Name of the Template (can change)
                                                 int,          // Size of the Template
                                                 string);      // Name of the XYZ file to base it on
#define importXYZTemplateEditor_GUI(db, templ, file) iImportXYZTemplateEditor_GUI(db, templ, sizeof(templ), file)


  
//-----------------------------------------------------------------------------------------------------------
// IiODBCFileConnect_GUI Get the connection string for a file database as well as optional table name and FileUsage attribute
//
// Returns               0 - OK
//                       -1 - Cancel
//                       terminates on error
//
// Notes                 If the file extension is "mdb" or "xls" then a Microsoft Access
//                       or Excel database is assumed. Otherwise, a dialog appears listing
//                       the installed ODBC file database drivers. If the driver takes a
//                       directory as a database (FileUsage==1) the table name is also
//                       returned. This is needed because the table name may or may not include
//                       the file extension.
//
// Available             5.0
//-----------------------------------------------------------------------------------------------------------

[_licensed_app] int IiODBCFileConnect_GUI(string,       // File Name
                                          var string,   // Connection string (returned)
                                          int,          // Size of connection string
                                          int,          // File Usage (0 - ODBC drivers not queried, 1 - Directory containing tables, 2 - File containing tables)
                                          var string,   // Table name of file (returned if plUsage==1)
                                          int);         // Size of table name
#define iODBCFileConnect_GUI(file, connect, usage, table) IiODBCFileConnect_GUI(file, connect, sizeof(connect), usage, table, sizeof(table))


  
//-----------------------------------------------------------------------------------------------------------
// IiSymbolForm_GUI - Select a symbol.
//
// Returns          0 - Ok
//                  1 - Cancel
//
// Notes            Symbols are set on input, and new values returned.
//
// Available        5.0
//-----------------------------------------------------------------------------------------------------------

[_public_app] int IiSymbolForm_GUI(var string,   // Symbol font file name
                                   int,          // Buffer size for symbol font face name
                                   var int,      // Geosoft font?
                                   var int,      // Weight MVIEW_FONT_WEIGHT
                                   var int,      // Symbol number
                                   var real,     // Symbol size
                                   var real,     // Symbol angle
                                   var int,      // Edge color
                                   var int);     // Fill color
#define iSymbolForm_GUI(symb_font, geo_font, weight, symb_num, symb_size, symb_ang, edge_col, fill_col) IiSymbolForm_GUI(symb_font, sizeof(symb_font), geo_font, weight, symb_num, symb_size, symb_ang, edge_col, fill_col)


  
//-----------------------------------------------------------------------------------------------------------
// iMetaDataTool_GUI Edit a META object
//
// Returns           0         - OK
//                   non-zero  - Cancel
//
// Available         5.0
//-----------------------------------------------------------------------------------------------------------

[_licensed_app] int iMetaDataTool_GUI(META,         // Meta object
                                      META_TOKEN,   // Root Token, H_META_INVALID_TOKEN for root
                                      int);         // Display schema information ?


  
//-----------------------------------------------------------------------------------------------------------
// ImportChemWizard_GUI Generate a template file for importing geochems.
//
// Available            5.0
//-----------------------------------------------------------------------------------------------------------

[_licensed_app] void ImportChemWizard_GUI(string,   // Data file name
                                          string,   // Template to make
                                          int);     // IMPCH_TYPE


  
//-----------------------------------------------------------------------------------------------------------
// ImportDrillWizard_GUI Generate a template file for importing drill holes.
//
// Available             5.0
//-----------------------------------------------------------------------------------------------------------

[_licensed_app] void ImportDrillWizard_GUI(string,       // Data file name
                                           string,       // Template to make
                                           var string,   // Name of table
                                           int,          // Size of table name string
                                           var int,      // Type of import returned DH_DATA
                                           REG);         // Drill Hole Object REG handle
#define mportDrillWizard_GUI(name, temp, table, type, reg) ImportDrillWizard_GUI(name, temp, table, sizeof(table), type, reg)


  
//-----------------------------------------------------------------------------------------------------------
// ImportDrillWizardEx_GUI Generate a template file for importing drill holes where type is known
//
// Available               9.5
//-----------------------------------------------------------------------------------------------------------

[_licensed_app] void ImportDrillWizardEx_GUI(string,       // Data file name
                                             string,       // Template to make
                                             var string,   // Name of table
                                             int,          // Size of table name string
                                             int,          // Type of import DH_DATA
                                             REG);         // Drill Hole Object REG handle
#define mportDrillWizardEx_GUI(name, temp, table, type, reg) ImportDrillWizardEx_GUI(name, temp, table, sizeof(table), type, reg)


  
//-----------------------------------------------------------------------------------------------------------
// InternetTrust_GUI Change the Internet Trust Relationships
//
// Available         5.0
//-----------------------------------------------------------------------------------------------------------

[_licensed_app] void InternetTrust_GUI();


  
//-----------------------------------------------------------------------------------------------------------
// iPatternForm_GUI - Select a pattern.
//
// Returns          0 - Ok
//                  1 - Cancel
//
// Notes            Pattern values set on input, and new values returned.
//                  Solid fill is indicated by Pattern number 0.
//                  
//                  Returned Values (not set on input)
//                  
//                  Size
//                       pattern tile size in mm.
//                  
//                  Thick
//                       pattern line thickness in percent of the tile size.
//                       valid range is 0-100.
//                  
//                  Density
//                       Tile spacing. A value of 1 means tiles are laid with no overlap.
//                       A value of 2 means they overlap each other.
//                  
//                  The pattern Angle and Style parameters are not user-definable.
//
// Available        5.0
//-----------------------------------------------------------------------------------------------------------

[_public_app] int iPatternForm_GUI(var int,    // Current Pattern
                                   var real,   // Current Size,           // returned
                                   var int,    // Current Thick (0-100)   // returned
                                   var real,   // Current Density,        // returned
                                   var int,    // Current Pattern Color   // passed in and returned
                                   var int);   // Current Background Color  // passed in and returned; can be C_TRANSPARENT


  
//-----------------------------------------------------------------------------------------------------------
// iLinePatternForm_GUI Select a line pattern.
//
// Returns              0 - Ok
//                      1 - Cancel
//
// Notes                Same as iPatternForm_GUI but for line patterns.
//
// Available            8.1
//-----------------------------------------------------------------------------------------------------------

[_public_app] int iLinePatternForm_GUI(var int,    // Current Pattern
                                       var real,   // Current Thickness
                                       var real,   // Current Pitch
                                       var int);   // Current Pattern Color


  
//-----------------------------------------------------------------------------------------------------------
// iTwoPanelSelection_GUI General purpose two-panel selection.
//
// Returns                0 - Ok
//                        1 - Cancel
//
// Notes                  Takes as input two LSTs, one contains all available items,
//                        the second currently selected items. These are processed,
//                        and in the left panel are displayed all items in the first
//                        LST not in the selection LST, and on the right all items
//                        in the first LST which are in the selection LST. (Items in
//                        the selection LST NOT in the first LST are ignored).
//                        Once the user has finalized the selections, the final selections
//                        are returned in the selection LST.
//                        
//                        Selections and display are based on the LST_ITEM_NAME part of the
//                        LST item, but on export both the LST_ITEM_NAME and LST_ITEM_VALUE
//                        elements of the selected items from the first LST are transferred
//                        to the second list for output.
//                        
//                        The sConvertToCSV_LST and sConvertFromCSV_LST functions in lst.h
//                        can be used to convert the selection LSTs to forms that can be
//                        stored and retrieved from GX parameters (or REG or INI, etc.).
//
// Available              5.0
//-----------------------------------------------------------------------------------------------------------

[_public_app] int iTwoPanelSelection_GUI(LST,      // All available items for selection.
                                         LST,      // Selections (altered on output)
                                         string);  // Title for dialog


  
//-----------------------------------------------------------------------------------------------------------
// iTwoPanelSelection2_GUI Two-panel selection, items not sorted alphabetically.
//
// Returns                 0 - Ok
//                         1 - Cancel
//
// Notes                   Same as iTwoPanelSelection_GUI, but the items in the
//                         two lists are not sorted alphabetically, but are ordered
//                         exactly as input, and when an item is selected it is
//                         added at the end of the lists.
//
// Available               5.0
//-----------------------------------------------------------------------------------------------------------

[_public_app] int iTwoPanelSelection2_GUI(LST,      // All available items for selection.
                                          LST,      // Selections (altered on output)
                                          string);  // Title for dialog


  
//-----------------------------------------------------------------------------------------------------------
// iTwoPanelSelectionEx_GUI Two-panel selection; options for sort and ability to select no items.
//
// Returns                  0 - Ok
//                          1 - Cancel
//
// Notes                    Same as iTwoPanelSelection_GUI, but the items in the
//                          two lists are not sorted alphabetically, but are ordered
//                          exactly as input, and when an item is selected it is
//                          added at the end of the lists.
//
// Available                5.0
//-----------------------------------------------------------------------------------------------------------

[_public_app] int iTwoPanelSelectionEx_GUI(LST,      // All available items for selection.
                                           LST,      // Selections (altered on output)
                                           int,      // Sort items alphabetically (0:No, 1:Yes)
                                           int,      // Allow no items selected (0:No, 1:Yes)
                                           string);  // Title for dialog


  
//-----------------------------------------------------------------------------------------------------------
// iTwoPanelSelectionEx2_GUI Two-panel selection; extended options including a help link.
//
// Returns                   0 - Ok
//                           1 - Cancel
//
// Notes                     Same as iTwoPanelSelectionEx_GUI, but user can specify a help
//                           link.
//
// Available                 5.0
//-----------------------------------------------------------------------------------------------------------

[_public_app] int iTwoPanelSelectionEx2_GUI(LST,      // All available items for selection.
                                            LST,      // Selections (altered on output)
                                            int,      // Sort items alphabetically (0:No, 1:Yes)
                                            int,      // Allow no items selected (0:No, 1:Yes)
                                            string,   // Title for dialog
                                            string);  // Help link


  
//-----------------------------------------------------------------------------------------------------------
// LaunchSingleGeoDOTNETXTool_GUI Launch a user created .Net GEOXTOOL ensuring a single instance.
//
// Available                      5.0
//-----------------------------------------------------------------------------------------------------------

[_public_app] void LaunchSingleGeoDOTNETXTool_GUI(string,   // Assembly name
                                                  string,   // Control Class Name
                                                  META);    // META Handle (holding tool configuration data)


  
//-----------------------------------------------------------------------------------------------------------
// LaunchGeoDOTNETXTool_GUI Launch a user created .Net GEOXTOOL.
//
// Available                5.0
//-----------------------------------------------------------------------------------------------------------

[_public_app] void LaunchGeoDOTNETXTool_GUI(string,   // Assembly name
                                            string,   // Control Class Name
                                            META);    // META Handle (holding tool configuration data)


  
//-----------------------------------------------------------------------------------------------------------
// LaunchGeoXTool_GUI Launch a user created GEOXTOOL.
//
// Available          5.0
//-----------------------------------------------------------------------------------------------------------

[_public_app] void LaunchGeoXTool_GUI(string,   // DLL name
                                      string,   // Function Name
                                      META);    // META Handle (holding tool configuration data)


  
//-----------------------------------------------------------------------------------------------------------
// LaunchSingleGeoDOTNETXToolEx_GUI Launch a user created .Net GEOXTOOL ensuring a single instance.
//
// Available                        9.0
//-----------------------------------------------------------------------------------------------------------

[_public_app] void LaunchSingleGeoDOTNETXToolEx_GUI(string,   // Assembly name
                                                    string,   // Control Class Name
                                                    META,     // META Handle (holding tool configuration data)
                                                    int,      // XTOOL_ALIGN (can specify one or more or XTOOL_ALIGN_ANY)
                                                    int,      // XTOOL_DOCK
                                                    int,      // Default width
                                                    int);     // Default height


  
//-----------------------------------------------------------------------------------------------------------
// LaunchGeoDOTNETXToolEx_GUI Launch a user created .Net GEOXTOOL.
//
// Available                  9.0
//-----------------------------------------------------------------------------------------------------------

[_public_app] void LaunchGeoDOTNETXToolEx_GUI(string,   // Assembly name
                                              string,   // Control Class Name
                                              META,     // META Handle (holding tool configuration data)
                                              int,      // XTOOL_ALIGN (can specify one or more or XTOOL_ALIGN_ANY)
                                              int,      // XTOOL_DOCK
                                              int,      // Default width
                                              int);     // Default height


  
//-----------------------------------------------------------------------------------------------------------
// LaunchGeoXToolEx_GUI Launch a user created GEOXTOOL.
//
// Available            9.0
//-----------------------------------------------------------------------------------------------------------

[_public_app] void LaunchGeoXToolEx_GUI(string,   // DLL name
                                        string,   // Function Name
                                        META,     // META Handle (holding tool configuration data)
                                        int,      // XTOOL_ALIGN (can specify one or more or XTOOL_ALIGN_ANY)
                                        int,      // XTOOL_DOCK
                                        int,      // Default width
                                        int);     // Default height


  
//-----------------------------------------------------------------------------------------------------------
// MetaDataViewer_GUI View a META object
//
// Available          5.0
//-----------------------------------------------------------------------------------------------------------

[_public_app] void MetaDataViewer_GUI(META,         // Meta object
                                      META_TOKEN,   // Root token, H_META_INVALID_TOKEN for root
                                      int);         // Display schema information ?


  
//-----------------------------------------------------------------------------------------------------------
// PrintFile_GUI Prints a file to current printer
//
// Available     5.0
//-----------------------------------------------------------------------------------------------------------

[_licensed_app] void PrintFile_GUI(string);  // Filename string


  
//-----------------------------------------------------------------------------------------------------------
// SetPrinter_GUI Sets the Printer.
//
// Available      5.0
//-----------------------------------------------------------------------------------------------------------

[_licensed_app] void SetPrinter_GUI(string);  // Printer Name


  
//-----------------------------------------------------------------------------------------------------------
// SetProgAlwaysOn_GUI Ability to set the progress bar to stay visible even
//                     if main application is processing messages
//
// Notes               In montaj the progress bar is hidden when the main window
//                     start processing messages. This is not always desirable
//                     in some 3rd party apps, hence this function.
//
// Available           5.0
//-----------------------------------------------------------------------------------------------------------

[_public_app] void SetProgAlwaysOn_GUI(int);  // Should progress bar remain visible


  
//-----------------------------------------------------------------------------------------------------------
// SetWindowArea_GUI Set the location of the Oasis montaj window.
//
// Notes             The Coordinates are pixels with 0,0 being the top
//                   left corner of the Screen.
//                   
//                   If the window is minimized, the max values will be
//                   equal to the min values. If the window is maximized
//                   X Min and Y min will be GS_S4MN and X max and Y max
//                   will be GS_S4MX.
//
// Available         5.0
//-----------------------------------------------------------------------------------------------------------

[_licensed_app] void SetWindowArea_GUI(int,   // X Min
                                       int,   // Y Min
                                       int,   // X Max
                                       int);  // Y Max


  
//-----------------------------------------------------------------------------------------------------------
// ShowDirectHist_GUI Display histogram of data directly
//
// Available          5.0
//-----------------------------------------------------------------------------------------------------------

[_licensed_app] void ShowDirectHist_GUI(real,   // Min    Value to display
                                        real,   // Max    Value to display
                                        real,   // Mean   Value to display
                                        real,   // StdDev Value to display
                                        real,   // Median Value to display
                                        int,    // Items  Number of items this comprises
                                        VV);    // VV holding hist counts


  
//-----------------------------------------------------------------------------------------------------------
// ShowHist_GUI Display Histogram of data from ST
//
// Available    5.0
//-----------------------------------------------------------------------------------------------------------

[_licensed_app] void ShowHist_GUI(ST);  // Statistics obj


  
//-----------------------------------------------------------------------------------------------------------
// SimpleMapDialog_GUI General purpose map display GUI with no interaction.
//
// Notes               This function displays a map in a simple resizable dialog that fits the map into it.
//                     It is generally useful to display temporary maps as graphs (e.g. variograms).
//
// Available           5.0
//-----------------------------------------------------------------------------------------------------------

[_public_app] void SimpleMapDialog_GUI(MAP,      // MAP object
                                       string,   // Title
                                       string);  // HelpID


  
//-----------------------------------------------------------------------------------------------------------
// ThematicVoxelInfo_GUI Display GX.Net thematic voxel info GUI.
//
// Notes                 Displays the thematic voxel codes, colors, total volume for
//                       each code, and number of valid items (cubes) for each code.
//                       This is a replacement for the numeric stats done on normal
//                       numerical voxel grids.
//
// Available             5.0
//-----------------------------------------------------------------------------------------------------------

[_public_app] void ThematicVoxelInfo_GUI(VOX);  // VOX object


  
//-----------------------------------------------------------------------------------------------------------
// Show3DViewerDialog_GUI Display a standalone 3D viewer
//
// Notes                  Any changes made to the 3D View will be persisted.
//
// Available              9.3
//-----------------------------------------------------------------------------------------------------------

[_licensed_app] void Show3DViewerDialog_GUI(string,   // Title
                                            string);  // 3D View name (.geosoft_3dv)



//===========================================================================================================
//
// Deprecated Functions
//
//===========================================================================================================


  
//-----------------------------------------------------------------------------------------------------------
// Fft2SpecFilter_GUI Interactive FFT2 radially averaged power spectrum filter
//
// Available          5.0
//-----------------------------------------------------------------------------------------------------------

[_licensed_app] void Fft2SpecFilter_GUI(string,   // Name of the input spectrum file
                                        string);  // Name of the output control file


  
//-----------------------------------------------------------------------------------------------------------
// DefineDrillITR_GUI Define color zones for gridded data.
//
// Notes              The ITR for Wholeplot gridded data is now defined inside the tabbed
//                    dialog for the Plan or Section maps. Calls to this function now bring
//                    up an error message.
//
// Available          5.0
//-----------------------------------------------------------------------------------------------------------

[_licensed_app] void DefineDrillITR_GUI(DH,       // DH Object
                                        string,   // Channel to grid
                                        string);  // Name of ITR file


  
//-----------------------------------------------------------------------------------------------------------
// GetDapData_GUI Allow the user find DAP data.
//
// Available      5.0
//-----------------------------------------------------------------------------------------------------------

[_public_app] void GetDapData_GUI(IPJ,    // Projection of area of interest
                                  PLY,    // If exact clipping is needed, supply the PLY. If the server is able, it will do exact clipping on this region. Can be NULL (0).
                                  real,   // Min X
                                  real,   // Min Y
                                  real,   // Max X
                                  real,   // Max Y
                                  int);   // DAP_CLIENT


  
//-----------------------------------------------------------------------------------------------------------
// IiBrowseDirEdit_GUI Browses for a specific directory, user editable.
//
// Returns             0 - Ok
//                     1 - Cancel
//
// Notes               Allows the user to edit the directory name in an edit window,
//                     as well as browse for an existing directory, so it is possible
//                     to specify a new directory name. It remains up to the caller to
//                     test to see if the directory exists, and if not, to create it.
//
// Available           5.0
//-----------------------------------------------------------------------------------------------------------

[_public_app] int IiBrowseDirEdit_GUI(string,       // Title of the Form
                                      string,       // Default path (Can be "")
                                      var string,   // Result Path Buffer (default on input)
                                      int);         // Path Buffer Size
#define iBrowseDirEdit_GUI(title, default, dir_path) IiBrowseDirEdit_GUI(title, default, dir_path, sizeof(dir_path))


  
//-----------------------------------------------------------------------------------------------------------
// iImportDrillDatabase_GUI Generate a template file for importing drill holes.
//
// Returns                  0 - OK
//                          -1 - Cancel
//
// Available                5.0
//-----------------------------------------------------------------------------------------------------------

[_licensed_app] int iImportDrillDatabase_GUI(string,       // Data file name
                                             string,       // Template to make
                                             var string,   // Name of table
                                             int,          // Size of table name string
                                             var int,      // Type of import returned (See DH_DATA_? in dh.gxh)
                                             REG);         // Drill Hole Object REG handle
#define importDrillDatabase_GUI(name, temp, table, type, reg) iImportDrillDatabase_GUI(name, temp, table, sizeof(table), type, reg)


  
//-----------------------------------------------------------------------------------------------------------
// ImportXYZTemplateEditor_GUI Allows the user to edit XYZ import templates
//                             using a complex dialog. The Template name
//                             may change during editing.
//
// Returns                     0 - OK
//                             1 - Error
//
// Available                   5.0
//-----------------------------------------------------------------------------------------------------------

[_licensed_app] int ImportXYZTemplateEditor_GUI(DB,       // Database
                                                string,   // Name of the Template (can change)
                                                int,      // Size of the Template
                                                string);  // Name of the XYZ file to base it on


  
//-----------------------------------------------------------------------------------------------------------
// QueryIPJ_GUI Display the IPJ wizard.
//
// Available    5.0
//-----------------------------------------------------------------------------------------------------------

[_public_app] void QueryIPJ_GUI(IPJ);  // Current IPJ


  
//-----------------------------------------------------------------------------------------------------------
// IIPQC_GUI Quality Control on an IP database. Replaced by the modal
//           dialog and lLaunchIPQCTool_IPGUI.
//
// Available 5.0
//-----------------------------------------------------------------------------------------------------------

[_licensed_app] void IIPQC_GUI(IP,           // IP object
                               DB,           // DB obj
                               string,       // Current line
                               var string,   // Selected channel (returned)
                               int);         // Size of channel buffer
#define IPQC_GUI(p1, p2, p3, p4) IIPQC_GUI(p1, p2, p3, p4, sizeof(p4))


  
//-----------------------------------------------------------------------------------------------------------
// iVAViewMultipleToolExists_GUI See if there is a Multiple Array Channel viewer already open.
//
// Returns                       0 if not open, 1 if open
//
// Notes                         See if there is a Multiple Array Channel viewer already open.
//
// Available                     9.5
//-----------------------------------------------------------------------------------------------------------

[_extended] int iVAViewMultipleToolExists_GUI();


  
//-----------------------------------------------------------------------------------------------------------
// LaunchVAViewMultipleTool_GUI Launch the coincident array channel viewer.
//
// Available                    9.5
//-----------------------------------------------------------------------------------------------------------

[_extended_app] void LaunchVAViewMultipleTool_GUI(string,   // Database name
                                                  string,   // Line name (can be blank)
                                                  string,   // Master Channel name (can be blank)
                                                  string,   // Channel 2 name (can be blank)
                                                  string);  // Channel 3 name (can be blank)


  
//-----------------------------------------------------------------------------------------------------------
// iMultipleArrayChannelProfileViewer_GUI View up to 3 array channel profiles. The first channel's array base properties are
//                                        					used for all three (scaling, array base properties for the X-axis).
//
// Returns                                0 - OK
//                                        -1 - Cancel
//
// Available                              9.4
//-----------------------------------------------------------------------------------------------------------

[_licensed_app] int iMultipleArrayChannelProfileViewer_GUI(DB,           // DB obj
                                                           var string,   // Selected line
                                                           var string,   // Master array channel (can be empty on input)
                                                           var string,   // Second array channel (optional)
                                                           var string,   // Third array channel (optional)
                                                           int);         // Size of line and channel buffers
#define _iMultipleArrayChannelProfileViewer_GUI(db, line, chan1, chan2, chan3) iMultipleArrayChannelProfileViewer_GUI(db, line, chan1, chan2, chan3, sizeof(chan3))





//*** endblock Generated


#endif
