//*** extends 'class_empty.gxh'

#ifndef HPROJ_GXH_DEFINED
#define HPROJ_GXH_DEFINED

//*** block Header
// NOTICE: Do not edit anything here, it is generated code
//===========================================================================================================
//
// Class PROJ
//
//-----------------------------------------------------------------------------------------------------------
//
// Project functions
//
//-----------------------------------------------------------------------------------------------------------



//*** endblock Header

//*** block Editable
// NOTICE: The code generator will not replace the code in this block
//*** endblock Editable

//*** block Generated
// NOTICE: Do not edit anything here, it is generated code


//===========================================================================================================
//
// COMMAND_ENV Definitions
//
// Command environments
//
// COMMAND_ENV_NORMAL
// Normal
//
// COMMAND_ENV_IN3DVIEWER
// Executing from inside 3D Viewer
//
//===========================================================================================================


#define COMMAND_ENV_NORMAL 0
#define COMMAND_ENV_IN3DVIEWER 1


//===========================================================================================================
//
// TOOL_TYPE Definitions
//
// Tool type defines
//
// TOOL_TYPE_DEFAULT
// Geosoft created default tools
//
// TOOL_TYPE_AUXILIARY
// Auxiliary tools (including custom XTools)
//
// TOOL_TYPE_ALL
// All tools
//
//===========================================================================================================


#define TOOL_TYPE_DEFAULT 0
#define TOOL_TYPE_AUXILIARY 1
#define TOOL_TYPE_ALL 2


//===========================================================================================================
//
// PROJ_DISPLAY Definitions
//
// How to display an object
//
// PROJ_DISPLAY_NO
// Do not display the object
//
// PROJ_DISPLAY_YES
// Display the object unless user set option not to
//
// PROJ_DISPLAY_ALWAYS
// Always display the object
//
//===========================================================================================================


#define PROJ_DISPLAY_NO 0
#define PROJ_DISPLAY_YES 1
#define PROJ_DISPLAY_ALWAYS 2


//===========================================================================================================
//
// PROJ_OMS Definitions
//
// Script registration
//
// PROJ_OMS_NAME_SIZE
// Buffer size for script primary and secondary names
//
// PROJ_OMS_DATETIME_SIZE
// Buffer size for the date/time string
//
// PROJ_OMS_PROCESSID_SIZE
// Buffer size for process ID
//
//===========================================================================================================


#define PROJ_OMS_NAME_SIZE 32
#define PROJ_OMS_DATETIME_SIZE 24
#define PROJ_OMS_PROCESSID_SIZE 16





//===========================================================================================================
//
// Drag-and-drop methods Functions
//
//===========================================================================================================


  
//-----------------------------------------------------------------------------------------------------------
// DropMapClipData_PROJ Drop Map clipboard data in the current project (workspace background)
//
// Available            5.0
//-----------------------------------------------------------------------------------------------------------

[_public_app] void DropMapClipData_PROJ(int);  // Handle to Global Clipboard data



//===========================================================================================================
//
// Miscellaneous Functions
//
//===========================================================================================================


  
//-----------------------------------------------------------------------------------------------------------
// iAddDocument_PROJ Adds (and opens) a document file in the current project.
//
// Returns           0 - Ok
//                   1 - Error
//
// Notes             The passed file name must be a valid
//                   file name complete with an extension and
//                   qualifiers (if applicable).
//                   
//                   The type string can be one of the following:
//                   
//                       Database      
//                       Grid          
//                       Map           
//                       3DView        
//                       Geosurface
//                       Voxel         
//                       VoxelInversion
//                       GMS3D         
//                       GMS2D
//
// Available         5.0
//-----------------------------------------------------------------------------------------------------------

[_public_app] int iAddDocument_PROJ(string,   // Document name
                                    string,   // Type of document to add
                                    int);     // PROJ_DISPLAY


  
//-----------------------------------------------------------------------------------------------------------
// iAddDocumentWithoutOpening_PROJ Adds (and opens) a document file in the current project.
//
// Returns                         0 - Ok
//                                 1 - Error
//
// Notes                           The passed file name must be a valid
//                                 file name complete with an extension and
//                                 qualifiers (if applicable).
//                                 
//                                 The type string can be one of the following:
//                                 
//                                     Database      
//                                     Grid          
//                                     Map           
//                                     3DView        
//                                     Geosurface
//                                     Voxel         
//                                     VoxelInversion
//                                     GMS3D         
//                                     GMS2D
//
// Available                       8.5
//-----------------------------------------------------------------------------------------------------------

[_public_app] int iAddDocumentWithoutOpening_PROJ(string,   // Document name
                                                  string);  // Type of document to add


  
//-----------------------------------------------------------------------------------------------------------
// iAddDocumentIncludeMeta_PROJ Adds (and opens) a document file in the current project.
//
// Returns                      0 - Ok
//                              1 - Error
//
// Notes                        The passed file name must be a valid
//                              file name complete with an extension and
//                              qualifiers (if applicable).
//                              
//                              The type string can be one of the following:
//                              
//                                  Database      
//                                  Grid          
//                                  Map           
//                                  3DView        
//                                  Geosurface
//                                  Voxel         
//                                  VoxelInversion
//                                  GMS3D         
//                                  GMS2D
//
// Available                    2022.1
//-----------------------------------------------------------------------------------------------------------

[_public_app] int iAddDocumentIncludeMeta_PROJ(string,   // Document name
                                               string,   // Type of document to add
                                               string,   // Meta file to load
                                               int);     // PROJ_DISPLAY


  
//-----------------------------------------------------------------------------------------------------------
// iAddGridDocument_PROJ Adds (and opens) a grid document file in the current project with a particular colour distribution and colour file.
//
// Returns               0 - Ok
//                       1 - Error
//
// Notes                 The passed file name must be a valid Grid document
//                       with an extension and qualifiers (if applicable).
//
// Available             9.7
//-----------------------------------------------------------------------------------------------------------

[_public_app] int iAddGridDocument_PROJ(string,   // Document name
                                        string,   // Colour zone file to use
                                        int,      // Colour method to use - one of the ITR_ZONE_XXXX values
                                        int);     // PROJ_DISPLAY


  
//-----------------------------------------------------------------------------------------------------------
// iAddGridDocuments_PROJ Adds (and opens) multiple grid document files of the same type in the current project with a shared (same) colour distribution and colour file.
//
// Returns                0 - Ok
//                        1 - Error
//
// Notes                  The passed file names must be valid Grid documents
//                        with an extension and qualifiers (if applicable).
//                        ALL grids must have the same extension and qualifier.
//
// Available              2024.1
//-----------------------------------------------------------------------------------------------------------

[_public_app] int iAddGridDocuments_PROJ(VV,       // String VV with document names
                                         string,   // Colour zone file to use
                                         int,      // Colour method to use - one of the ITR_ZONE_XXXX values
                                         int);     // PROJ_DISPLAY


  
//-----------------------------------------------------------------------------------------------------------
// iGetCommandEnvironment_PROJ The current command environment
//
// Returns                     COMMAND_ENV
//                             
//                             Notes									
//                             
//                             We are moving towards embedded tools and menus and this setting can be
//                             queried from the project to determine how specific commands should react.
//                             Only 3D viewer is currently making use of this.
//                             
//                             If new Command environment enum values are added, then update the iGetCommandEnvironment_PROJ() function
//                             in geogxgui\gxx_app.cpp and in the COMMAND_ENVIRONMENT enums in geoengine.core\include\obj\objgp.h.
//
// Available                   5.0
//-----------------------------------------------------------------------------------------------------------

[_public_app] int iGetCommandEnvironment_PROJ();


  
//-----------------------------------------------------------------------------------------------------------
// iListDocuments_PROJ Fills a VV with documents of a certain type.
//
// Returns             The number of documents listed in the VV.
//
// Notes               The type string can be one of the following:
//                     Database         List Databases.
//                     Grid             List Grids.
//                     Map              List Maps.
//                     3DView           List 3D Views.
//                     Geosurface       List Geosurfaces.
//                     Voxel            List Voxels.
//                     VoxelInversion   List VOXI Documents.
//                     MXD              List ArcGIS MXDs.
//                     GMS3D            List GM-SYS 3D Models.
//                     GMS2D            List GM-SYS 2D Models.
//                     All              Lists all files.
//
// Available           5.0
//-----------------------------------------------------------------------------------------------------------

[_public_app] int iListDocuments_PROJ(VV,       // VV of type -STR_FILE
                                      string);  // Type of document to obtain


  
//-----------------------------------------------------------------------------------------------------------
// iListLoadedDocuments_PROJ Fills a VV with loaded documents of a certain type.
//
// Returns                   The number of loaded documents listed in the VV.
//
// Notes                     The type string can be one of the following:
//                           Database         List Databases.
//                           Grid             List Grids.
//                           Map              List Maps.
//                           3DView           List 3D Views.
//                           Geosurface       List Geosurfaces.
//                           Voxel            List Voxels.
//                           VoxelInversion   List VOXI Documents.
//                           MXD              List ArcGIS MXDs.
//                           GMS3D            List GM-SYS 3D Models.
//                           GMS2D            List GM-SYS 2D Models.
//                           All              Lists all files.
//
// Available                 9.2
//-----------------------------------------------------------------------------------------------------------

[_public_app] int iListLoadedDocuments_PROJ(VV,       // VV of type -STR_FILE>
                                            string);  // Type of document to obtain


  
//-----------------------------------------------------------------------------------------------------------
// ICurrentDocument_PROJ Get the name and type of the loaded document with focus.
//
// Returns               Nothing.
//
// Available             9.2
//-----------------------------------------------------------------------------------------------------------

[_public_app] void ICurrentDocument_PROJ(var string,   // Name (empty if none currently loaded)
                                         int,          // Maximum name length
                                         var string,   // Type
                                         int);         // Maximum type length
#define CurrentDocument_PROJ(name, type) ICurrentDocument_PROJ(name, sizeof(name), type, sizeof(type))


  
//-----------------------------------------------------------------------------------------------------------
// ICurrentDocumentOfType_PROJ Get the name of a loaded document of a specific type.
//
// Returns                     Nothing.
//
// Available                   9.2
//-----------------------------------------------------------------------------------------------------------

[_public_app] void ICurrentDocumentOfType_PROJ(var string,   // Name (empty if none currently loaded)
                                               int,          // Maximum name length
                                               string);      // Type
#define CurrentDocumentOfType_PROJ(name, type) ICurrentDocumentOfType_PROJ(name, sizeof(name), type)


  
//-----------------------------------------------------------------------------------------------------------
// iListTools_PROJ Fills an LST object with tools of a certain type and
//                 notes the current visibility setting.
//
// Returns         The number of tools found.
//
// Notes           GX will terminate if there is an error.
//                 
//                 LST object will hold the tool name in the name column and
//                 include whether the tool is currently visible in the value
//                 column (1=visible, 0-hidden).
//
// Available       5.0
//-----------------------------------------------------------------------------------------------------------

[_public_app] int iListTools_PROJ(LST,   // LST object to hold list
                                  int);  // TOOL_TYPE


  
//-----------------------------------------------------------------------------------------------------------
// iRemoveDocument_PROJ Removes (and closes if visible) a document from the current project.
//
// Returns              0 - Ok
//                      1 - Document not found in project
//
// Notes                The passed file name must be a valid
//                      file name complete with an extension and
//                      qualifiers (if applicable).
//
// Available            5.0
//-----------------------------------------------------------------------------------------------------------

[_public_app] int iRemoveDocument_PROJ(string);  // Document name


  
//-----------------------------------------------------------------------------------------------------------
// iRemoveTool_PROJ Removes (and closes if visible) a auxiliary tool from the current project.
//
// Returns          0 - Ok
//                  1 - Tool not found in project
//
// Notes            Nothing
//
// Available        5.0
//-----------------------------------------------------------------------------------------------------------

[_public_app] int iRemoveTool_PROJ(string);  // Tool name


  
//-----------------------------------------------------------------------------------------------------------
// iSaveCloseDocuments_PROJ Saves and closes (if visible) documents contained in the current project.
//
// Returns                  0  - Ok
//                          -1 - User hit cancel in save dialog
//                          1  - Error
//
// Notes                    This wrapper brings up the save dialog tool to allow
//                          the user to save the modified documents for this project.
//                          Only documents that have actually changed will be listed.
//                          
//                          The type string can be one of the following:
//                          
//                              Database      
//                              Grid          
//                              Map           
//                              3DView        
//                              Geosurface
//                              Voxel         
//                              VoxelInversion
//                              GMS3D         
//                              GMS2D
//                              All
//
// Available                5.0
//-----------------------------------------------------------------------------------------------------------

[_public_app] int iSaveCloseDocuments_PROJ(string);  // Type of document to save / close


  
//-----------------------------------------------------------------------------------------------------------
// IGetName_PROJ Return the name of the project file.
//
// Returns       Nothing.
//
// Notes         Return the name of the project file.
//
// Available     8.4
//-----------------------------------------------------------------------------------------------------------

[_public_app] void IGetName_PROJ(var string,   // name
                                 int);         // maximum name length
#define GetName_PROJ(name) IGetName_PROJ(name, sizeof(name))


  
//-----------------------------------------------------------------------------------------------------------
// GetServerAndProjectGUID_PROJ Return the unique identifier of the project and server.
//
// Returns                      Nothing.
//
// Notes                        Return the unique identifier of the project and server.
//
// Available                    2021.2
//-----------------------------------------------------------------------------------------------------------

[_public_app] void GetServerAndProjectGUID_PROJ(var string,   // Server ID
                                                int,          // Size of Server ID buffer.
                                                var string,   // Project ID
                                                int);         // Size of Project ID buffer.
#define _GetServerAndProjectGUID_PROJ(server_id, project_id) GetServerAndProjectGUID_PROJ(server_id, sizeof(server_id), project_id, sizeof(project_id))


  
//-----------------------------------------------------------------------------------------------------------
// SetCentralProjectInformation_PROJ Set Central project information.
//
// Returns                           Nothing.
//
// Notes                             Set Central project information.
//
// Available                         2021.2
//-----------------------------------------------------------------------------------------------------------

[_public_app] void SetCentralProjectInformation_PROJ(string,   // server guid
                                                     string,   // project guid
                                                     int,      // branch ID
                                                     int,      // revision ID
                                                     string);  // Coordinate system information, either EPSG or WKT


  
//-----------------------------------------------------------------------------------------------------------
// GetCentralProjectInformation_PROJ Get Central project information.
//
// Returns                           Nothing.
//
// Notes                             Get Central project information.
//
// Available                         2021.2
//-----------------------------------------------------------------------------------------------------------

[_public_app] void GetCentralProjectInformation_PROJ(var string,   // Instance name
                                                     int,          // Size of Instance name buffer.
                                                     var string,   // Project name
                                                     int,          // Size of Project name buffer.
                                                     var string,   // Coordinate Reference System
                                                     int,          // Size of CRS buffer.
                                                     var string,   // Branch name
                                                     int,          // Size of Branch name buffer.
                                                     var string,   // Revision Id
                                                     int,          // Size of Revision Id buffer.
                                                     var string,   // Revision date
                                                     int,          // Size of Revision date buffer.
                                                     var string,   // Revision note
                                                     int,          // Size of Revision note buffer.
                                                     var string,   // Revision stage
                                                     int,          // Size of Revision stage buffer.
                                                     var string,   // Revision author
                                                     int,          // Size of Revision author buffer.
                                                     var string,   // Revision server url
                                                     int,          // Size of Revision server url.
                                                     var string,   // Revision project url
                                                     int);         // Size of Revision project url.
#define _GetCentralProjectInformation_PROJ(instance, project, crs, branch, rev_id, rev_date, rev_note, rev_stage, rev_author, rev_server_url, rev_proj_url) GetCentralProjectInformation_PROJ(instance, sizeof(instance), project, sizeof(project), crs, sizeof(crs), branch, sizeof(branch), rev_id, sizeof(rev_id), rev_date, sizeof(rev_date), rev_note, sizeof(rev_note), rev_stage, sizeof(rev_stage), rev_author, sizeof(rev_author), rev_server_url, sizeof(rev_server_url), rev_proj_url, sizeof(rev_proj_url))


  
//-----------------------------------------------------------------------------------------------------------
// SaveDocumentView_PROJ Save document view to a file.
//
// Returns               Nothing.
//
// Notes                 Save document view to a file.
//
// Available             2022.1
//-----------------------------------------------------------------------------------------------------------

[_public_app] void SaveDocumentView_PROJ(string,   // Document name
                                         string);  // save meta to file


  
//-----------------------------------------------------------------------------------------------------------
// IGetDefaultProjectPath_PROJ Get default project folder.
//
// Returns                     Nothing.
//
// Notes                       Get default project folder.
//
// Available                   2022.1
//-----------------------------------------------------------------------------------------------------------

[_public_app] void IGetDefaultProjectPath_PROJ(var string,   // Returned default path
                                               int);         // Size of default path
#define GetDefaultProjectPath_PROJ(folder) IGetDefaultProjectPath_PROJ(folder, sizeof(folder))


  
//-----------------------------------------------------------------------------------------------------------
// SetDefaultProjectPath_PROJ Set default project folder.
//
// Returns                    Nothing.
//
// Notes                      Set default project folder.
//
// Available                  2022.1
//-----------------------------------------------------------------------------------------------------------

[_public_app] void SetDefaultProjectPath_PROJ(string);  // Default path


  
//-----------------------------------------------------------------------------------------------------------
// HasPendingCentralPublishEvent_PROJ Checks if there is a pending publish event.
//
// Notes                              Checks if there is a pending publish event.
//
// Available                          2022.1
//-----------------------------------------------------------------------------------------------------------

[_public_app] int HasPendingCentralPublishEvent_PROJ();



//===========================================================================================================
//
// OMS_Scripting Functions
//
//===========================================================================================================


  
//-----------------------------------------------------------------------------------------------------------
// RegisterBackgroundScript_PROJ Register an OMS script launched from the project
//
// Returns                       Nothing.
//
// Notes                         Allows the project to track the progress/failure/success of scripts launched in the background
//
// Available                     2022.2
//-----------------------------------------------------------------------------------------------------------

[_public_app] void RegisterBackgroundScript_PROJ(string,   // Name for the process
                                                 string,   // Secondary name for the process
                                                 string,   // file name of the script. Script should self-delete to indicate process has completed
                                                 string,   // file name of the output log (optional). Will contain info about this script run
                                                 int,      // 1 - log file is temporary and deleted on OM close. 0 - do not delete on OM close
                                                 VV,       // List of output documents created by the script.
                                                 string,   // File to delete (optional). Will also delete files with same name and .tmp and .xml extensions
                                                 string);  // Process ID - used to check status or kill the process


  
//-----------------------------------------------------------------------------------------------------------
// RegisterBackgroundScriptEx_PROJ Register an OMS script launched from the project
//
// Returns                         Nothing.
//
// Notes                           Allows the project to track the progress/failure/success of scripts launched in the background
//
// Available                       2024.1
//-----------------------------------------------------------------------------------------------------------

[_public_app] void RegisterBackgroundScriptEx_PROJ(string,   // Name of the job
                                                   string,   // Tooltip text
                                                   string,   // file name of the script. Script should self-delete to indicate process has completed
                                                   string,   // file name of the output log (optional). Will contain info about this script run
                                                   string,   // file name of the output progress log (optional). Will contain progress information
                                                   string,   // file name of the error log (optional). Will contain info about errors from the run
                                                   int,      // 1 - log file is temporary and deleted on OM close. 0 - do not delete on OM close
                                                   VV,       // List of output documents created by the script.
                                                   LST,      // List of output documents and document type pairs.
                                                   string,   // File to delete (optional). Will also delete files with same name and .tmp and .xml extensions
                                                   string);  // Process ID - used to check status or kill the process


  
//-----------------------------------------------------------------------------------------------------------
// GetRegisteredBackgroundScript_PROJ Retrieve info on a registered OMS script launched from the project
//
// Returns                            nothing
//
// Notes                              reference by index
//
// Available                          2022.2
//-----------------------------------------------------------------------------------------------------------

[_public_app] void GetRegisteredBackgroundScript_PROJ(int,          // Index for the process (input) 0 to N-1
                                                      var string,   // Date/Time string in format DD/MM/YYYY hh:mm:ss
                                                      int,          // Size of descriptive names for script process
                                                      var string,   // Name for the process (output)
                                                      var string,   // Secondary name for the process (output)
                                                      int,          // Size of descriptive names for script process
                                                      var string,   // file name of the script (output)
                                                      var string,   // file name of the output log (returned, can be empty).
                                                      int,          // Size of script and log filenames
                                                      VV,           // List of output documents created by the script. of size -STR_FILE
                                                      var string,   // Process ID (returned)
                                                      int);         // Size of the process ID string
#define _GetRegisteredBackgroundScript_PROJ(index, date_time, name, name2, script, log, output_files, process_id) GetRegisteredBackgroundScript_PROJ(index, date_time, sizeof(date_time), name, name2, sizeof(name2), script, log, sizeof(log), output_files, process_id, sizeof(process_id))


  
//-----------------------------------------------------------------------------------------------------------
// GetRegisteredBackgroundScriptEx_PROJ Retrieve info on a registered OMS script launched from the project
//
// Returns                              nothing
//
// Notes                                reference by index
//
// Available                            2024.1
//-----------------------------------------------------------------------------------------------------------

[_public_app] void GetRegisteredBackgroundScriptEx_PROJ(int,          // Index for the process (input) 0 to N-1
                                                        var string,   // Date/Time string in format DD/MM/YYYY hh:mm:ss
                                                        int,          // Size of descriptive names for script process
                                                        var string,   // Name for the process (output)
                                                        var string,   // Secondary name for the process (output)
                                                        int,          // Size of descriptive names for script process
                                                        var string,   // file name of the script (output)
                                                        var string,   // file name of the output log (returned, can be empty).
                                                        var string,   // file name of the progress output log (returned, can be empty).
                                                        var string,   // file name of the error_file log (returned, can be empty).
                                                        int,          // Size of script, log, output and error filenames
                                                        LST,          // List of output key & documents pairs.
                                                        LST,          // List of output documents and document type pairs.
                                                        var string,   // Process ID (returned)
                                                        int);         // Size of the process ID string
#define _GetRegisteredBackgroundScriptEx_PROJ(index, date_time, name, name2, script, log, output_file, error_file, output_files, output_file_types, process_id) GetRegisteredBackgroundScriptEx_PROJ(index, date_time, sizeof(date_time), name, name2, sizeof(name2), script, log, output_file, error_file, sizeof(error_file), output_files, output_file_types, process_id, sizeof(process_id))


  
//-----------------------------------------------------------------------------------------------------------
// iGetNumRegisteredBackgroundScripts_PROJ Register a OMS script launched from the project
//
// Returns                                 The number of registered background scripts: in progress, finished, failed, deleted etc.
//
// Notes                                   Allows the project to track the progress/failure/success of scripts launched in the background
//
// Available                               2022.2
//-----------------------------------------------------------------------------------------------------------

[_public_app] int iGetNumRegisteredBackgroundScripts_PROJ();





//*** endblock Generated


#endif
